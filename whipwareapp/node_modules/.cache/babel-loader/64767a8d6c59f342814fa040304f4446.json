{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVWorkflow.tsx\";\nimport { FlowChartWithState } from \"@mrblenny/react-flow-chart\";\nimport * as React from 'react';\n\nclass dvWorkflowScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartSimple = {\n      offset: {\n        x: 0,\n        y: 0\n      },\n      nodes: {\n        node1: {\n          id: \"node1\",\n          type: \"output-only\",\n          position: {\n            x: 300,\n            y: 100\n          },\n          ports: {\n            port1: {\n              id: \"port1\",\n              type: \"output\",\n              properties: {\n                value: \"yes\"\n              }\n            },\n            port2: {\n              id: \"port2\",\n              type: \"output\",\n              properties: {\n                value: \"no\"\n              }\n            }\n          }\n        },\n        node2: {\n          id: \"node2\",\n          type: \"input-output\",\n          position: {\n            x: 300,\n            y: 300\n          },\n          ports: {\n            port1: {\n              id: \"port1\",\n              type: \"input\"\n            },\n            port2: {\n              id: \"port2\",\n              type: \"output\"\n            }\n          }\n        }\n      },\n      links: {\n        link1: {\n          id: \"link1\",\n          from: {\n            nodeId: \"node1\",\n            portId: \"port2\"\n          },\n          to: {\n            nodeId: \"node2\",\n            portId: \"port1\"\n          }\n        }\n      },\n      selected: {},\n      hovered: {}\n    };\n  }\n\n  render() {\n    return React.createElement(FlowChartWithState, {\n      initialValue: this.chartSimple,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default dvWorkflowScreen;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVWorkflow.tsx"],"names":["FlowChartWithState","React","dvWorkflowScreen","Component","constructor","props","chartSimple","offset","x","y","nodes","node1","id","type","position","ports","port1","properties","value","port2","node2","links","link1","from","nodeId","portId","to","selected","hovered","render"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAAmD;AAkE/CC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,UAAMA,KAAN;AADmB,SAjEfC,WAiEe,GAjED;AAClBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG,OADU;AAKlBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,EAAE,EAAE,OADC;AAELC,UAAAA,IAAI,EAAE,aAFD;AAGLC,UAAAA,QAAQ,EAAE;AACRN,YAAAA,CAAC,EAAE,GADK;AAERC,YAAAA,CAAC,EAAE;AAFK,WAHL;AAOLM,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE;AACLJ,cAAAA,EAAE,EAAE,OADC;AAELC,cAAAA,IAAI,EAAE,QAFD;AAGLI,cAAAA,UAAU,EAAE;AACVC,gBAAAA,KAAK,EAAE;AADG;AAHP,aADF;AAQLC,YAAAA,KAAK,EAAE;AACLP,cAAAA,EAAE,EAAE,OADC;AAELC,cAAAA,IAAI,EAAE,QAFD;AAGLI,cAAAA,UAAU,EAAE;AACVC,gBAAAA,KAAK,EAAE;AADG;AAHP;AARF;AAPF,SADF;AAyBLE,QAAAA,KAAK,EAAE;AACLR,UAAAA,EAAE,EAAE,OADC;AAELC,UAAAA,IAAI,EAAE,cAFD;AAGLC,UAAAA,QAAQ,EAAE;AACRN,YAAAA,CAAC,EAAE,GADK;AAERC,YAAAA,CAAC,EAAE;AAFK,WAHL;AAOLM,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE;AACLJ,cAAAA,EAAE,EAAE,OADC;AAELC,cAAAA,IAAI,EAAE;AAFD,aADF;AAKLM,YAAAA,KAAK,EAAE;AACLP,cAAAA,EAAE,EAAE,OADC;AAELC,cAAAA,IAAI,EAAE;AAFD;AALF;AAPF;AAzBF,OALW;AAiDlBQ,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLV,UAAAA,EAAE,EAAE,OADC;AAELW,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE,OADJ;AAEJC,YAAAA,MAAM,EAAE;AAFJ,WAFD;AAMLC,UAAAA,EAAE,EAAE;AACFF,YAAAA,MAAM,EAAE,OADN;AAEFC,YAAAA,MAAM,EAAE;AAFN;AANC;AADF,OAjDW;AA8DlBE,MAAAA,QAAQ,EAAE,EA9DQ;AA+DlBC,MAAAA,OAAO,EAAE;AA/DS,KAiEC;AAEtB;;AACMC,EAAAA,MAAP,GAAgB;AACZ,WACI,oBAAC,kBAAD;AAAoB,MAAA,YAAY,EAAE,KAAKvB,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAzE8C;;AA2EnD,eAAeJ,gBAAf","sourcesContent":["import { FlowChartWithState } from \"@mrblenny/react-flow-chart\";\nimport * as React from 'react';\nclass dvWorkflowScreen extends React.Component<{}> {\n    private chartSimple = {\n        offset: {\n          x: 0,\n          y: 0\n        },\n        nodes: {\n          node1: {\n            id: \"node1\",\n            type: \"output-only\",\n            position: {\n              x: 300,\n              y: 100\n            },\n            ports: {\n              port1: {\n                id: \"port1\",\n                type: \"output\",\n                properties: {\n                  value: \"yes\"\n                }\n              },\n              port2: {\n                id: \"port2\",\n                type: \"output\",\n                properties: {\n                  value: \"no\"\n                }\n              }\n            }\n          },\n          node2: {\n            id: \"node2\",\n            type: \"input-output\",\n            position: {\n              x: 300,\n              y: 300\n            },\n            ports: {\n              port1: {\n                id: \"port1\",\n                type: \"input\"\n              },\n              port2: {\n                id: \"port2\",\n                type: \"output\"\n              }\n            }\n          },\n        },\n        links: {\n          link1: {\n            id: \"link1\",\n            from: {\n              nodeId: \"node1\",\n              portId: \"port2\"\n            },\n            to: {\n              nodeId: \"node2\",\n              portId: \"port1\"\n            },\n          },\n        },\n        selected: {},\n        hovered: {}\n      };\n    constructor(props: {}) {\n        super(props);\n    }\n    public render() {\n        return(\n            <FlowChartWithState initialValue={this.chartSimple} />\n        );\n    }\n}\nexport default dvWorkflowScreen;"]},"metadata":{},"sourceType":"module"}