{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/TreeMenu.tsx\";\nimport * as React from 'react';\nimport JqxTree from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nclass TreeMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myTree = React.createRef();\n    this.onSelectChange = this.onSelectChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.myTree.current.expandAll();\n  }\n\n  onSelectChange(event) {\n    console.log(event);\n    const args = event.args;\n    const item = this.myTree.current.getItem(args.element);\n    alert(item.label);\n    event.preventDefault();\n    this.props.menuaction(\"\"); // this.props.history.push('/'+event.args.innerText);\n\n    window.location.reload(false);\n  }\n\n  render() {\n    return React.createElement(JqxTree, {\n      ref: this.myTree,\n      theme: 'bootstrap',\n      style: {\n        border: \"none !important\"\n      },\n      source: this.props.source,\n      checkboxes: false,\n      onSelect: this.onSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nlet mapStateToProps = state => ({\n  state: state\n});\n\nexport const toggleView = id => ({\n  type: 'TOGGLE_VIEW',\n  id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  menuaction: id => dispatch(toggleView(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TreeMenu)); //export default ;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/TreeMenu.tsx"],"names":["React","JqxTree","connect","withRouter","TreeMenu","Component","constructor","props","myTree","createRef","onSelectChange","bind","componentDidMount","current","expandAll","event","console","log","args","item","getItem","element","alert","label","preventDefault","menuaction","window","location","reload","render","border","source","mapStateToProps","state","toggleView","id","type","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAwC,+CAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,UAAT,QAA2B,kBAA3B;;AAMA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuF;AAEnFC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADXC,MACW,GADFR,KAAK,CAACS,SAAN,EACE;AAEf,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AACMC,EAAAA,iBAAP,GAAiC;AAC7B,SAAKJ,MAAL,CAAYK,OAAZ,CAAqBC,SAArB;AACH;;AACMJ,EAAAA,cAAP,CAAsBK,KAAtB,EAAiC;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMG,IAAI,GAAEH,KAAK,CAACG,IAAlB;AACA,UAAMC,IAAI,GAAG,KAAKX,MAAL,CAAYK,OAAZ,CAAqBO,OAArB,CAA6BF,IAAI,CAACG,OAAlC,CAAb;AACAC,IAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACAR,IAAAA,KAAK,CAACS,cAAN;AACA,SAAKjB,KAAL,CAAWkB,UAAX,CAAsB,EAAtB,EAN6B,CAO9B;;AACCC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;;AACMC,EAAAA,MAAP,GAAgB;AACZ,WACI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKrB,MAAnB;AAA2B,MAAA,KAAK,EAAE,WAAlC;AAA+C,MAAA,KAAK,EAAE;AAACsB,QAAAA,MAAM,EAAC;AAAR,OAAtD;AACI,MAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWwB,MADvB;AAC+B,MAAA,UAAU,EAAE,KAD3C;AACkD,MAAA,QAAQ,EAAE,KAAKrB,cADjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA1BkF;;AA+BpF;;AAIH,IAAIsB,eAAe,GAAKC,KAAD,KAAY;AAC/BA,EAAAA,KAAK,EAAEA;AADwB,CAAZ,CAAvB;;AAGA,OAAO,MAAMC,UAAU,GAAGC,EAAE,KAAK;AAC7BC,EAAAA,IAAI,EAAE,aADuB;AAE7BD,EAAAA;AAF6B,CAAL,CAArB;;AAKL,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,UAAU,EAAEU,EAAE,IAAIG,QAAQ,CAACJ,UAAU,CAACC,EAAD,CAAX;AADY,CAAL,CAAnC;;AAGF,eAAejC,OAAO,CAClB8B,eADkB,EAElBK,kBAFkB,CAAP,CAGXlC,UAAU,CAACC,QAAD,CAHC,CAAf,C,CAKA","sourcesContent":["import * as React from 'react';\nimport JqxTree, { ITreeProps,jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nimport { connect } from 'react-redux'\nimport { History, LocationState } from \"history\";\nimport { Dispatch } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\ninterface MyComponentProps {\n    history: History<LocationState>;\n}\n\nclass TreeMenu extends React.Component<MyComponentProps&NotesListState&any,ITreeProps> {\n    private myTree = React.createRef<JqxTree>();\n    constructor(props) {\n        super(props);\n        this.onSelectChange = this.onSelectChange.bind(this);\n\n    }\n    public componentDidMount(): void {\n        this.myTree.current!.expandAll();\n    }\n    public onSelectChange(event: any){\n        console.log(event);\n        const args =event.args;\n        const item = this.myTree.current!.getItem(args.element);\n        alert(item.label);\n        event.preventDefault()\n        this.props.menuaction(\"\");\n       // this.props.history.push('/'+event.args.innerText);\n        window.location.reload(false);\n    }\n    public render() {\n        return (\n            <JqxTree ref={this.myTree} theme={'bootstrap'} style={{border:\"none !important\"}} \n                source={this.props.source} checkboxes={false} onSelect={this.onSelectChange}\n            />\n        );\n    }\n}\n\nexport interface IStoreState {\n    type: string\n  };\ninterface NotesListState {\n    menuaction: (id) => (dispatch: Dispatch<IStoreState>) => Promise<void>;\n  }\nlet mapStateToProps =  (state) => ({\n    state: state,\n});\nexport const toggleView = id => ({\n    type: 'TOGGLE_VIEW',\n    id\n  })\n\n  const mapDispatchToProps = dispatch => ({\n    menuaction: id => dispatch(toggleView(id))\n  })\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withRouter(TreeMenu));\n\n//export default ;"]},"metadata":{},"sourceType":"module"}