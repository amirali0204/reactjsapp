{"ast":null,"code":"import _objectSpread from \"/Users/amirali/Documents/github/reactjsapp/deskvantage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\nconst initialState = {\n  menuselected: \"Orders\",\n  viewselected: \"Grid\"\n};\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"TOGGLE_TODO\":\n      if (action.id !== undefined) {\n        alert(action.id);\n\n        if (state === null) {\n          state = initialState;\n        }\n\n        return _objectSpread({}, state, {\n          menuselected: action.filter\n        });\n      }\n\n      break;\n\n    case \"TOGGLE_VIEW\":\n      //  alert(action.id)\n      alert(JSON.stringify(state));\n\n      if (action.id !== undefined) {\n        state.viewselected = action.id;\n        alert(JSON.stringify(state));\n        return state; // = {viewselected: action.id}\n      } else {\n        state.viewselected = \"Grid\";\n        alert(JSON.stringify(state));\n        return state;\n      }\n\n      break;\n\n    default:\n      return null;\n  }\n}\nexport default combineReducers({\n  rootReducer\n});","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVReducers/rootReducer.tsx"],"names":["combineReducers","initialState","menuselected","viewselected","rootReducer","state","action","type","id","undefined","alert","filter","JSON","stringify"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,QADK;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,UAAGD,MAAM,CAACE,EAAP,KAAcC,SAAjB,EAA2B;AACzBC,QAAAA,KAAK,CAACJ,MAAM,CAACE,EAAR,CAAL;;AACA,YAAGH,KAAK,KAAK,IAAb,EAAkB;AAChBA,UAAAA,KAAK,GAAGJ,YAAR;AACD;;AACD,iCAAWI,KAAX;AACEH,UAAAA,YAAY,EAAEI,MAAM,CAACK;AADvB;AAGD;;AACH;;AACA,SAAK,aAAL;AACA;AACED,MAAAA,KAAK,CAACE,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAD,CAAL;;AACA,UAAGC,MAAM,CAACE,EAAP,KAAcC,SAAjB,EAA2B;AACzBJ,QAAAA,KAAK,CAACF,YAAN,GAAqBG,MAAM,CAACE,EAA5B;AACAE,QAAAA,KAAK,CAACE,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAD,CAAL;AACA,eAAOA,KAAP,CAHyB,CAGZ;AACd,OAJD,MAIK;AACHA,QAAAA,KAAK,CAACF,YAAN,GAAqB,MAArB;AACAO,QAAAA,KAAK,CAACE,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAD,CAAL;AACD,eAAOA,KAAP;AACC;;AACJ;;AACF;AACG,aAAO,IAAP;AA1BH;AA4BD;AAED,eAAeL,eAAe,CAAC;AAC3BI,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\n\nconst initialState = {\n  menuselected: \"Orders\",\n  viewselected: \"Grid\"\n}\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"TOGGLE_TODO\":\n      if(action.id !== undefined){\n        alert(action.id)\n        if(state === null){\n          state = initialState\n        }\n        return {...state, \n          menuselected: action.filter\n        }\n      }\n    break;\n    case \"TOGGLE_VIEW\":\n    //  alert(action.id)\n      alert(JSON.stringify(state))\n      if(action.id !== undefined){\n        state.viewselected = action.id;\n        alert(JSON.stringify(state))\n        return state;// = {viewselected: action.id}\n      }else{\n        state.viewselected = \"Grid\";\n        alert(JSON.stringify(state))\n       return state;\n       }\n    break;\n  default:\n     return null;\n  }\n}\n\nexport default combineReducers({\n    rootReducer\n  })\n"]},"metadata":{},"sourceType":"module"}