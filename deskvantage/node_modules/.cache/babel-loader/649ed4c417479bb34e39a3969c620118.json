{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVControllers/LeftTreeBuilder.tsx\";\nimport React from \"react\";\nimport { LeftMenuLayouts } from \"../DVComponents/ComponentData/LeftTreeMenuList/\";\nimport { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nexport class LeftTreeBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myWindow = React.createRef();\n\n    this.onComposeButton = event => {\n      //  alert(event);\n      this.myWindow.current.open();\n    };\n\n    alert(this.props.Id);\n    const source = {\n      datafields: [{\n        name: 'id'\n      }, {\n        name: 'parentid'\n      }, {\n        name: 'text'\n      }, {\n        name: 'value'\n      }],\n      datatype: 'json',\n      id: 'id',\n      localdata: LeftMenuLayouts[this.props.Id]\n    };\n    const dataAdapter = new jqx.dataAdapter(source, {\n      autoBind: true\n    });\n    this.state = {\n      source1: dataAdapter.getRecordsHierarchy('id', 'parentid', 'items', [{\n        name: 'text',\n        map: 'label'\n      }])\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      onClick: this.onComposeButton,\n      theme: 'bootstrap',\n      width: '75%',\n      height: 35,\n      style: {\n        marginLeft: '10px'\n      },\n      value: 'Compose ' + this.props.Id,\n      imgSrc: './../Assets/Create.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default LeftTreeBuilder;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVControllers/LeftTreeBuilder.tsx"],"names":["React","LeftMenuLayouts","jqx","JqxButton","LeftTreeBuilder","Component","constructor","props","myWindow","createRef","onComposeButton","event","current","open","alert","Id","source","datafields","name","datatype","id","localdata","dataAdapter","autoBind","state","source1","getRecordsHierarchy","map","render","marginLeft"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,SAAQC,eAAR,QAA8B,iDAA9B;AAEA,SAAQC,GAAR,QAAmB,+CAAnB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AAOA,OAAO,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA0D;AAG7DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAFVC,QAEU,GAFCR,KAAK,CAACS,SAAN,EAED;;AAAA,SAmBlBC,eAnBkB,GAmBCC,KAAD,IAAiB;AACjC;AACE,WAAKH,QAAL,CAAcI,OAAd,CAAuBC,IAAvB;AACH,KAtBiB;;AAEdC,IAAAA,KAAK,CAAC,KAAKP,KAAL,CAAWQ,EAAZ,CAAL;AACA,UAAMC,MAAW,GAAI;AACjBC,MAAAA,UAAU,EAAE,CACR;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADQ,EAER;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFQ,EAGR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHQ,EAIR;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJQ,CADK;AAOjBC,MAAAA,QAAQ,EAAE,MAPO;AAQjBC,MAAAA,EAAE,EAAE,IARa;AASjBC,MAAAA,SAAS,EAAEpB,eAAe,CAAC,KAAKM,KAAL,CAAWQ,EAAZ;AATT,KAArB;AAWA,UAAMO,WAAW,GAAG,IAAIpB,GAAG,CAACoB,WAAR,CAAoBN,MAApB,EAA4B;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAA5B,CAApB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEH,WAAW,CAACI,mBAAZ,CAAgC,IAAhC,EAAsC,UAAtC,EAAkD,OAAlD,EAA2D,CAAC;AAAER,QAAAA,IAAI,EAAE,MAAR;AAAgBS,QAAAA,GAAG,EAAE;AAArB,OAAD,CAA3D;AADA,KAAb;AAGH;;AAKDC,EAAAA,MAAM,GAAG;AACP,WAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKlB,eAAzB;AAA0C,MAAA,KAAK,EAAE,WAAjD;AACC,MAAA,KAAK,EAAE,KADR;AACe,MAAA,MAAM,EAAE,EADvB;AAC2B,MAAA,KAAK,EAAE;AAACmB,QAAAA,UAAU,EAAC;AAAZ,OADlC;AACuD,MAAA,KAAK,EAAE,aAAY,KAAKtB,KAAL,CAAWQ,EADrF;AAEC,MAAA,MAAM,EAAE,wBAFT;AAGC,MAAA,WAAW,EAAE,QAHd;AAGwB,MAAA,YAAY,EAAE,QAHtC;AAGgD,MAAA,iBAAiB,EAAE,iBAHnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL,CAFN;AAgBD;;AA3C4D;AA6C/D,eAAeX,eAAf","sourcesContent":["import  React from \"react\"\nimport {LeftMenuLayouts} from \"../DVComponents/ComponentData/LeftTreeMenuList/\"\nimport TreeMenu from \"../DVComponents/TreeMenu\";\nimport {jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nimport JqxWindow from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxwindow\";\nimport { FormBuilder } from \"./FormBuilder\";\n\ntype MenuID = {\n    Id: string;\n}\nexport class LeftTreeBuilder extends React.Component<MenuID,any> {\n    private myWindow = React.createRef<JqxWindow>();\n\n    constructor(props){\n        super(props);\n        alert(this.props.Id)\n        const source: any  = {\n            datafields: [\n                { name: 'id' },\n                { name: 'parentid' },\n                { name: 'text' },\n                { name: 'value' }\n            ],\n            datatype: 'json',\n            id: 'id',\n            localdata: LeftMenuLayouts[this.props.Id],\n        };\n        const dataAdapter = new jqx.dataAdapter(source, { autoBind: true });\n        this.state = {\n            source1: dataAdapter.getRecordsHierarchy('id', 'parentid', 'items', [{ name: 'text', map: 'label' }])\n        };\n    }\n    onComposeButton = (event?: any) => {\n      //  alert(event);\n        this.myWindow.current!.open();\n    };\n    render() {\n      return (\n          \n            <div >\n                <JqxButton onClick={this.onComposeButton} theme={'bootstrap'}\n                 width={'75%'} height={35} style={{marginLeft:'10px'}} value={'Compose '+ this.props.Id} \n                 imgSrc={'./../Assets/Create.png'}\n                 imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />\n                 <br/>\n                {/* <TreeMenu source={this.state.source1}></TreeMenu>\n                <JqxWindow ref={this.myWindow} width={'70%'} \n                    height={window.innerHeight-245} resizable={false} draggable={false}\n                    isModal={true} autoOpen={false} >\n                    <div><FormBuilder Id={this.props.Id}/></div>\n                    </JqxWindow> */}\n            </div>\n        );\n    }\n  }\n  export default LeftTreeBuilder;"]},"metadata":{},"sourceType":"module"}