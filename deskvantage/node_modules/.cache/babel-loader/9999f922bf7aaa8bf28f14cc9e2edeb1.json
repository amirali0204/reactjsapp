{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/Layouts/ListScreen.tsx\";\nimport JqxLayout from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport { LeftTreeBuilder } from \"../DVControllers/LeftTreeBuilder\";\nimport { connect } from 'react-redux';\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\n\nclass ListScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.listlayout = [{\n      items: [{\n        alignment: 'left',\n        items: [{\n          contentContainer: 'LeftMenuPanel',\n          initContent: () => {\n            ReactDOM.render(React.createElement(LeftTreeBuilder, {\n              Id: this.props.menuselected,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }), document.getElementById('LeftMenuTree'));\n          },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        orientation: 'vertical',\n        unpinnedWidth: '15%',\n        width: '15%',\n        minWidth: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }, {\n        items: [{\n          height: '95%',\n          items: [{\n            contentContainer: 'Document1Panel',\n            title: 'User Management',\n            type: 'documentPanel',\n            initContent: () => {\n              ReactDOM.render(React.createElement(DVDataGrid, {\n                menuselected: this.props.menuselected,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 38\n                },\n                __self: this\n              }), document.getElementById('Document1PanelExplorer'));\n            }\n          }],\n          minHeight: '55%',\n          type: 'documentGroup'\n        }, {\n          height: '5%',\n          pinnedHeight: '50%',\n          unpinnedHeight: '50%',\n          alignment: 'bottom',\n          items: [{\n            contentContainer: 'MessagesListPanel',\n            title: 'Live Messages',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentActivityListPanel',\n            title: 'Recent Activities',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentFilesPanel',\n            title: 'Recent Updated Files',\n            type: 'layoutPanel'\n          }],\n          type: 'autoHideGroup'\n        }],\n        orientation: 'vertical',\n        type: 'layoutGroup',\n        width: '70%',\n        minWidth: '70%'\n      }, {\n        alignment: 'right',\n        items: [{\n          contentContainer: 'SystemStats',\n          initContent: () => {\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer'));\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer2'));\n            ReactDOM.render(React.createElement(DVBarChart, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer3'));\n          },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        minWidth: '15%',\n        width: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }],\n      orientation: 'horizontal',\n      type: 'layoutGroup'\n    }];\n    this.state = {\n      layout: this.listlayout\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    alert(\"\");\n\n    if (prevState.layout !== this.state.layout) {\n      // you can use isEqual from lodash for a equality check on arrays or objects\n      this.setState({\n        layout: this.listlayout\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        float: 'left',\n        height: '60px',\n        width: '200px'\n      },\n      src: \"./../Assets/system_logo.png\",\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: '300px',\n        paddingTop: \"13px\",\n        width: '75%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(DVMenuList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(JqxLayout, {\n      style: {\n        border: 'none'\n      },\n      theme: \"material\",\n      width: '100%',\n      height: window.innerHeight - 115,\n      layout: this.state.layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-container\": \"Document1Panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Document1PanelExplorer\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '90%',\n        marginTop: '20px',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      \"data-container\": \"MessagesListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"List of Messages\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentActivityListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"List of Recent Activities\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentFilesPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"List of Recent updated Files\"), React.createElement(\"div\", {\n      \"data-container\": \"OutputPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Output\"), React.createElement(\"div\", {\n      \"data-container\": \"LeftMenuPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"LeftMenuTree\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '96%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      \"data-container\": \"ExtraActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Extra Quick Actions\"), React.createElement(\"div\", {\n      \"data-container\": \"SystemStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SystemStatsExplorer3\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer2\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  if (state.rootReducer !== null) {\n    return {\n      state: state,\n      menuselected: state.rootReducer.menuselected\n    };\n  } else {\n    return {\n      state: state,\n      menuselected: \"Orders\"\n    };\n  }\n};\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  menuaction: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListScreen);","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/Layouts/ListScreen.tsx"],"names":["JqxLayout","React","ReactDOM","DVDataGrid","DVMenuList","LeftTreeBuilder","connect","DVBarGuage","DVBarChart","ListScreen","Component","constructor","props","listlayout","items","alignment","contentContainer","initContent","render","menuselected","document","getElementById","title","type","orientation","unpinnedWidth","width","minWidth","allowClose","allowPin","selected","allowUnpin","height","minHeight","pinnedHeight","unpinnedHeight","state","layout","componentDidUpdate","prevProps","prevState","alert","setState","float","marginLeft","paddingTop","border","window","innerHeight","marginTop","mapStateToProps","rootReducer","toggleTodo","id","mapDispatchToProps","dispatch","menuaction"],"mappings":"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","sourcesContent":["import JqxLayout, { ILayoutProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport {LeftTreeBuilder} from \"../DVControllers/LeftTreeBuilder\"\nimport { connect } from 'react-redux'\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\nclass ListScreen extends React.Component<NotesListState&any, ILayoutProps&any> {\n    listlayout = [{\n        items: [{\n            alignment: 'left',\n            items: [{\n                contentContainer: 'LeftMenuPanel',\n                initContent: (): void => {\n                    ReactDOM.render(<LeftTreeBuilder Id={this.props.menuselected}/>, document.getElementById('LeftMenuTree'));},\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            orientation:'vertical',\n            unpinnedWidth: '15%',\n            width: '15%',\n            minWidth:'15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        },{\n            items: [{\n                height: '95%',\n                items: [{\n                    contentContainer: 'Document1Panel',\n                    title: 'User Management',\n                    type: 'documentPanel',\n                    initContent: (): void => {\n                        ReactDOM.render(<DVDataGrid menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n                    }\n                }],\n                minHeight: '55%',\n                type: 'documentGroup'\n            }, {\n                height: '5%',\n                pinnedHeight:'50%',\n                unpinnedHeight:'50%',\n                alignment:'bottom',\n                items: [{\n                    contentContainer: 'MessagesListPanel',\n                    title: 'Live Messages',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentActivityListPanel',\n                    title: 'Recent Activities',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentFilesPanel',\n                    title: 'Recent Updated Files',\n                    type: 'layoutPanel'\n                }],\n                \n                type: 'autoHideGroup',\n            }],\n            orientation: 'vertical',\n            type: 'layoutGroup',\n            width: '70%',\n            minWidth: '70%'\n        },{\n            alignment: 'right',\n            items: [ {\n                contentContainer: 'SystemStats',\n                initContent: (): void => {ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer'));\n                ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer2'));\n                ReactDOM.render(<DVBarChart/>, document.getElementById('SystemStatsExplorer3'));},\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            minWidth: '15%',\n            width: '15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        }],\n        orientation: 'horizontal',\n        type: 'layoutGroup'\n    }];\n\n    constructor(props) {    \n        super(props);\n        this.state = {\n            layout: this.listlayout,\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        alert(\"\");\n        if(prevState.layout !== this.state.layout) { // you can use isEqual from lodash for a equality check on arrays or objects\n            this.setState({layout: this.listlayout})\n        }\n    }\n    public render() {\n        return (\n            <div>\n                <div>\n                    <img style={{float:'left', height:'60px', width:'200px'}} src=\"./../Assets/system_logo.png\" alt=\"Logo\" />\n                    <div style={{marginLeft: '300px',paddingTop:\"13px\", width: '75%'}}><DVMenuList />\n                </div>\n            </div>\n            <br/>\n            <hr></hr>\n            <br/>\n            <JqxLayout style={{border: 'none'}} theme=\"material\" width={'100%'} \n            height={window.innerHeight-115} layout={this.state.layout}>\n                <div data-container=\"Document1Panel\">\n                    <div>\n                        <div id=\"Document1PanelExplorer\" \n                        style={{ border: 'none', width: '99%', height: '90%',marginTop:'20px',float:'left' }} />\n                       \n                    </div>\n                </div>\n                <div data-container=\"MessagesListPanel\">List of Messages</div>\n                <div data-container=\"RecentActivityListPanel\">List of Recent Activities</div>\n                <div data-container=\"RecentFilesPanel\">List of Recent updated Files</div>\n                <div data-container=\"OutputPanel\">Output</div>\n                <div data-container=\"LeftMenuPanel\">\n                    <div id=\"LeftMenuTree\" style={{ border: 'none', width: '99%', height: '96%' }} />\n                </div>\n                <div data-container=\"ExtraActions\">Extra Quick Actions</div>\n                <div data-container=\"SystemStats\">\n                    <div id=\"SystemStatsExplorer3\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                    <div id=\"SystemStatsExplorer\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                    <div id=\"SystemStatsExplorer2\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                </div>\n            </JqxLayout>\n            </div>\n        );\n    }\n}\n\nexport interface IStoreState {\n    type: string\n  };\ninterface NotesListState {\n    menuaction: (id) => (dispatch: React.Dispatch<IStoreState>) => Promise<void>;\n  }\nconst mapStateToProps = state => {\n    if(state.rootReducer !== null){\n        return {\n            state: state,\n            menuselected: state.rootReducer.menuselected,\n        }\n    }else{\n        return {\n            state: state,\n            menuselected: \"Orders\",\n        }\n    }\n  }\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n  })\n\n  const mapDispatchToProps = dispatch => ({\n    menuaction: id => dispatch(toggleTodo(id))\n  })\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )( ListScreen);"]},"metadata":{},"sourceType":"module"}