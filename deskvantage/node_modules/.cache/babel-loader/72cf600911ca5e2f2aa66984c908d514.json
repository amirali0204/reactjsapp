{"ast":null,"code":"/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxDraw\", \"\", {});\n  a.extend(a.jqx._jqxDraw.prototype, {\n    defineInstance: function defineInstance() {\n      var c = {\n        renderEngine: \"\"\n      };\n      a.extend(true, this, c);\n      var d = [\"clear\", \"on\", \"off\", \"removeElement\", \"attr\", \"getAttr\", \"line\", \"circle\", \"rect\", \"path\", \"pieslice\", \"text\", \"measureText\"];\n\n      for (var b in d) {\n        this._addFn(a.jqx._jqxDraw.prototype, d[b]);\n      }\n\n      if (this === a.jqx._jqxDraw.prototype) {\n        return c;\n      }\n\n      return c;\n    },\n    _addFn: function _addFn(c, b) {\n      if (c[b]) {\n        return;\n      }\n\n      c[b] = function () {\n        return this.renderer[b].apply(this.renderer, arguments);\n      };\n    },\n    createInstance: function createInstance(b) {},\n    _initRenderer: function _initRenderer(b) {\n      return a.jqx.createRenderer(this, b);\n    },\n    _internalRefresh: function _internalRefresh() {\n      var b = this;\n\n      if (a.jqx.isHidden(b.host)) {\n        return;\n      }\n\n      if (!b.renderer) {\n        b.host.empty();\n\n        b._initRenderer(b.host);\n      }\n\n      var d = b.renderer;\n\n      if (!d) {\n        return;\n      }\n\n      var c = d.getRect();\n\n      b._render({\n        x: 1,\n        y: 1,\n        width: c.width,\n        height: c.height\n      });\n\n      if (d instanceof a.jqx.HTML5Renderer) {\n        d.refresh();\n      }\n    },\n    _saveAsImage: function _saveAsImage(d, e, b, c) {\n      return a.jqx._widgetToImage(this, d, e, b, c);\n    },\n    _render: function _render(c) {\n      var b = this;\n      var d = b.renderer;\n      b._plotRect = c;\n    },\n    refresh: function refresh() {\n      this._internalRefresh();\n    },\n    getSize: function getSize() {\n      var b = this._plotRect;\n      return {\n        width: b.width,\n        height: b.height\n      };\n    },\n    saveAsPNG: function saveAsPNG(d, b, c) {\n      return this._saveAsImage(\"png\", d, b, c);\n    },\n    saveAsJPEG: function saveAsJPEG(d, b, c) {\n      return this._saveAsImage(\"jpeg\", d, b, c);\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx.toGreyScale = function (b) {\n    if (b.indexOf(\"#\") == -1) {\n      return b;\n    }\n\n    var c = a.jqx.cssToRgb(b);\n    c[0] = c[1] = c[2] = Math.round(0.3 * c[0] + 0.59 * c[1] + 0.11 * c[2]);\n    var d = a.jqx.rgbToHex(c[0], c[1], c[2]);\n    return \"#\" + d[0] + d[1] + d[2];\n  }, a.jqx.adjustColor = function (e, d) {\n    if (typeof e != \"string\") {\n      return \"#000000\";\n    }\n\n    if (e.indexOf(\"#\") == -1) {\n      return e;\n    }\n\n    var f = a.jqx.cssToRgb(e);\n    var b = a.jqx.rgbToHsl(f);\n    b[2] = Math.min(1, b[2] * d);\n    b[1] = Math.min(1, b[1] * d * 1.1);\n    f = a.jqx.hslToRgb(b);\n    var e = \"#\";\n\n    for (var g = 0; g < 3; g++) {\n      var h = Math.round(f[g]);\n      h = a.jqx.decToHex(h);\n\n      if (h.toString().length == 1) {\n        e += \"0\";\n      }\n\n      e += h;\n    }\n\n    return e.toUpperCase();\n  };\n\n  a.jqx.decToHex = function (b) {\n    return b.toString(16);\n  };\n\n  a.jqx.hexToDec = function (b) {\n    return parseInt(b, 16);\n  };\n\n  a.jqx.rgbToHex = function (e, d, c) {\n    return [a.jqx.decToHex(e), a.jqx.decToHex(d), a.jqx.decToHex(c)];\n  };\n\n  a.jqx.hexToRgb = function (c, d, b) {\n    return [a.jqx.hexToDec(c), a.jqx.hexToDec(d), a.jqx.hexToDec(b)];\n  };\n\n  a.jqx.cssToRgb = function (b) {\n    if (b.indexOf(\"rgb\") <= -1) {\n      return a.jqx.hexToRgb(b.substring(1, 3), b.substring(3, 5), b.substring(5, 7));\n    }\n\n    return b.substring(4, b.length - 1).split(\",\");\n  };\n\n  a.jqx.hslToRgb = function (m) {\n    var i = parseFloat(m[0]);\n    var n = parseFloat(m[1]);\n    var f = parseFloat(m[2]);\n\n    if (n == 0) {\n      var c, j, k;\n      c = j = k = f;\n    } else {\n      var d = f < 0.5 ? f * (1 + n) : f + n - f * n;\n      var e = 2 * f - d;\n      var c = a.jqx.hueToRgb(e, d, i + 1 / 3);\n      var j = a.jqx.hueToRgb(e, d, i);\n      var k = a.jqx.hueToRgb(e, d, i - 1 / 3);\n    }\n\n    return [c * 255, j * 255, k * 255];\n  };\n\n  a.jqx.hueToRgb = function (d, c, b) {\n    if (b < 0) {\n      b += 1;\n    }\n\n    if (b > 1) {\n      b -= 1;\n    }\n\n    if (b < 1 / 6) {\n      return d + (c - d) * 6 * b;\n    } else {\n      if (b < 1 / 2) {\n        return c;\n      } else {\n        if (b < 2 / 3) {\n          return d + (c - d) * (2 / 3 - b) * 6;\n        }\n      }\n    }\n\n    return d;\n  };\n\n  a.jqx.rgbToHsl = function (j) {\n    var c = parseFloat(j[0]) / 255;\n    var i = parseFloat(j[1]) / 255;\n    var k = parseFloat(j[2]) / 255;\n    var m = Math.max(c, i, k),\n        e = Math.min(c, i, k);\n    var f,\n        o,\n        d = (m + e) / 2;\n\n    if (m == e) {\n      f = o = 0;\n    } else {\n      var n = m - e;\n      o = d > 0.5 ? n / (2 - m - e) : n / (m + e);\n\n      switch (m) {\n        case c:\n          f = (i - k) / n + (i < k ? 6 : 0);\n          break;\n\n        case i:\n          f = (k - c) / n + 2;\n          break;\n\n        case k:\n          f = (c - i) / n + 4;\n          break;\n      }\n\n      f /= 6;\n    }\n\n    return [f, o, d];\n  };\n\n  a.jqx.swap = function (b, d) {\n    var c = b;\n    b = d;\n    d = c;\n  };\n\n  a.jqx.getNum = function (b) {\n    if (!a.isArray(b)) {\n      if (isNaN(b)) {\n        return 0;\n      }\n    } else {\n      for (var c = 0; c < b.length; c++) {\n        if (!isNaN(b[c])) {\n          return b[c];\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  a.jqx._ptdist = function (c, e, b, d) {\n    return Math.sqrt((b - c) * (b - c) + (d - e) * (d - e));\n  };\n\n  a.jqx._ptrnd = function (c) {\n    if (!document.createElementNS) {\n      if (Math.round(c) == c) {\n        return c;\n      }\n\n      return a.jqx._rnd(c, 1, false, true);\n    }\n\n    var b = a.jqx._rnd(c, 0.5, false, true);\n\n    if (Math.abs(b - Math.round(b)) != 0.5) {\n      return b > c ? b - 0.5 : b + 0.5;\n    }\n\n    return b;\n  };\n\n  a.jqx._ptRotate = function (d, i, c, h, f) {\n    var b = Math.sqrt(Math.pow(Math.abs(d - c), 2) + Math.pow(Math.abs(i - h), 2));\n    var e = Math.asin((d - c) / b);\n    var g = e + f;\n    d = c + Math.cos(g) * b;\n    i = h + Math.sin(g) * b;\n    return {\n      x: d,\n      y: i\n    };\n  };\n\n  a.jqx._rup = function (c) {\n    var b = Math.round(c);\n\n    if (c > b) {\n      b++;\n    }\n\n    return b;\n  };\n\n  a.jqx.log = function (c, b) {\n    return Math.log(c) / (b ? Math.log(b) : 1);\n  };\n\n  a.jqx._mod = function (d, c) {\n    var e = Math.abs(d > c ? c : d);\n    var f = 1;\n\n    if (e != 0) {\n      while (e * f < 100) {\n        f *= 10;\n      }\n    }\n\n    d = d * f;\n    c = c * f;\n    return d % c / f;\n  };\n\n  a.jqx._rnd = function (d, f, e, c) {\n    if (isNaN(d)) {\n      return d;\n    }\n\n    if (undefined === c) {\n      c = true;\n    }\n\n    var b = d - (c == true ? d % f : a.jqx._mod(d, f));\n\n    if (d == b) {\n      return b;\n    }\n\n    if (e) {\n      if (d > b) {\n        b += f;\n      }\n    } else {\n      if (b > d) {\n        b -= f;\n      }\n    }\n\n    return f == 1 ? Math.round(b) : b;\n  };\n\n  a.jqx.commonRenderer = {\n    pieSlicePath: function pieSlicePath(k, j, h, r, A, B, d) {\n      if (!r) {\n        r = 1;\n      }\n\n      var m = Math.abs(A - B);\n      var p = m > 180 ? 1 : 0;\n\n      if (m >= 360) {\n        B = A + 359.99;\n      }\n\n      var q = A * Math.PI * 2 / 360;\n      var i = B * Math.PI * 2 / 360;\n      var w = k,\n          v = k,\n          f = j,\n          e = j;\n      var n = !isNaN(h) && h > 0;\n\n      if (n) {\n        d = 0;\n      }\n\n      if (d + h > 0) {\n        if (d > 0) {\n          var l = m / 2 + A;\n          var z = l * Math.PI * 2 / 360;\n          k += d * Math.cos(z);\n          j -= d * Math.sin(z);\n        }\n\n        if (n) {\n          var u = h;\n          w = k + u * Math.cos(q);\n          f = j - u * Math.sin(q);\n          v = k + u * Math.cos(i);\n          e = j - u * Math.sin(i);\n        }\n      }\n\n      var t = k + r * Math.cos(q);\n      var s = k + r * Math.cos(i);\n      var c = j - r * Math.sin(q);\n      var b = j - r * Math.sin(i);\n      var o = \"\";\n      var g = Math.abs(Math.abs(B - A) - 360) > 0.02;\n\n      if (n) {\n        o = \"M \" + v + \",\" + e;\n        o += \" a\" + h + \",\" + h;\n        o += \" 0 \" + p + \",1 \" + (w - v) + \",\" + (f - e);\n\n        if (g) {\n          o += \" L\" + t + \",\" + c;\n        } else {\n          o += \" M\" + t + \",\" + c;\n        }\n\n        o += \" a\" + r + \",\" + r;\n        o += \" 0 \" + p + \",0 \" + (s - t) + \",\" + (b - c);\n\n        if (g) {\n          o += \" Z\";\n        }\n      } else {\n        o = \"M \" + s + \",\" + b;\n        o += \" a\" + r + \",\" + r;\n        o += \" 0 \" + p + \",1 \" + (t - s) + \",\" + (c - b);\n\n        if (g) {\n          o += \" L\" + k + \",\" + j;\n          o += \" Z\";\n        }\n      }\n\n      return o;\n    },\n    measureText: function measureText(o, f, g, n, l) {\n      var e = l._getTextParts(o, f, g);\n\n      var i = e.width;\n      var b = e.height;\n\n      if (false == n) {\n        b /= 0.6;\n      }\n\n      var c = {};\n\n      if (isNaN(f)) {\n        f = 0;\n      }\n\n      if (f == 0) {\n        c = {\n          width: a.jqx._rup(i),\n          height: a.jqx._rup(b)\n        };\n      } else {\n        var k = f * Math.PI * 2 / 360;\n        var d = Math.abs(Math.sin(k));\n        var j = Math.abs(Math.cos(k));\n        var h = Math.abs(i * d + b * j);\n        var m = Math.abs(i * j + b * d);\n        c = {\n          width: a.jqx._rup(m),\n          height: a.jqx._rup(h)\n        };\n      }\n\n      if (n) {\n        c.textPartsInfo = e;\n      }\n\n      return c;\n    },\n    alignTextInRect: function alignTextInRect(q, n, b, r, m, o, i, p, e, d) {\n      var k = e * Math.PI * 2 / 360;\n      var c = Math.sin(k);\n      var j = Math.cos(k);\n      var l = m * c;\n      var h = m * j;\n\n      if (i == \"center\" || i == \"\" || i == \"undefined\") {\n        q = q + b / 2;\n      } else {\n        if (i == \"right\") {\n          q = q + b;\n        }\n      }\n\n      if (p == \"center\" || p == \"middle\" || p == \"\" || p == \"undefined\") {\n        n = n + r / 2;\n      } else {\n        if (p == \"bottom\") {\n          n += r - o / 2;\n        } else {\n          if (p == \"top\") {\n            n += o / 2;\n          }\n        }\n      }\n\n      d = d || \"\";\n      var f = \"middle\";\n\n      if (d.indexOf(\"top\") != -1) {\n        f = \"top\";\n      } else {\n        if (d.indexOf(\"bottom\") != -1) {\n          f = \"bottom\";\n        }\n      }\n\n      var g = \"center\";\n\n      if (d.indexOf(\"left\") != -1) {\n        g = \"left\";\n      } else {\n        if (d.indexOf(\"right\") != -1) {\n          g = \"right\";\n        }\n      }\n\n      if (g == \"center\") {\n        q -= h / 2;\n        n -= l / 2;\n      } else {\n        if (g == \"right\") {\n          q -= h;\n          n -= l;\n        }\n      }\n\n      if (f == \"top\") {\n        q -= o * c;\n        n += o * j;\n      } else {\n        if (f == \"middle\") {\n          q -= o * c / 2;\n          n += o * j / 2;\n        }\n      }\n\n      q = a.jqx._rup(q);\n      n = a.jqx._rup(n);\n      return {\n        x: q,\n        y: n\n      };\n    }\n  };\n\n  a.jqx.svgRenderer = function () {};\n\n  a.jqx.svgRenderer.prototype = {\n    _svgns: \"http://www.w3.org/2000/svg\",\n    init: function init(f) {\n      var d = \"<table class=tblChart cellspacing='0' cellpadding='0' border='0' align='left' valign='top'><tr><td colspan=2 class=tdTop></td></tr><tr><td class=tdLeft></td><td><div class='chartContainer' style='position:relative' onselectstart='return false;'></div></td></tr></table>\";\n      f.append(d);\n      this.host = f;\n      var b = f.find(\".chartContainer\");\n      b[0].style.width = f.width() + \"px\";\n      b[0].style.height = f.height() + \"px\";\n      var h;\n\n      try {\n        var c = document.createElementNS(this._svgns, \"svg\");\n        c.setAttribute(\"id\", \"svgChart\");\n        c.setAttribute(\"version\", \"1.1\");\n        c.setAttribute(\"width\", \"100%\");\n        c.setAttribute(\"height\", \"100%\");\n        c.setAttribute(\"overflow\", \"hidden\");\n        b[0].appendChild(c);\n        this.canvas = c;\n      } catch (g) {\n        return false;\n      }\n\n      this._id = new Date().getTime();\n      this.clear();\n\n      this._layout();\n\n      this._runLayoutFix();\n\n      return true;\n    },\n    getType: function getType() {\n      return \"SVG\";\n    },\n    refresh: function refresh() {},\n    _runLayoutFix: function _runLayoutFix() {\n      var b = this;\n\n      this._fixLayout();\n    },\n    _fixLayout: function _fixLayout() {\n      var f = this.canvas.getBoundingClientRect();\n      var d = parseFloat(f.left) == parseInt(f.left);\n      var b = parseFloat(f.top) == parseInt(f.top);\n\n      if (a.jqx.browser.msie) {\n        var d = true,\n            b = true;\n        var e = this.host;\n        var c = 0,\n            g = 0;\n\n        while (e && e.position && e[0].parentNode) {\n          var h = e.position();\n          c += parseFloat(h.left) - parseInt(h.left);\n          g += parseFloat(h.top) - parseInt(h.top);\n          e = e.parent();\n        }\n\n        d = parseFloat(c) == parseInt(c);\n        b = parseFloat(g) == parseInt(g);\n      }\n\n      if (!d) {\n        this.host.find(\".tdLeft\")[0].style.width = \"0.5px\";\n      }\n\n      if (!b) {\n        this.host.find(\".tdTop\")[0].style.height = \"0.5px\";\n      }\n    },\n    _layout: function _layout() {\n      var b = this.host.find(\".chartContainer\");\n      this._width = Math.max(a.jqx._rup(this.host.width()) - 1, 0);\n      this._height = Math.max(a.jqx._rup(this.host.height()) - 1, 0);\n      b[0].style.width = this._width;\n      b[0].style.height = this._height;\n\n      this._fixLayout();\n    },\n    getRect: function getRect() {\n      return {\n        x: 0,\n        y: 0,\n        width: this._width,\n        height: this._height\n      };\n    },\n    getContainer: function getContainer() {\n      var b = this.host.find(\".chartContainer\");\n      return b;\n    },\n    clear: function clear() {\n      while (this.canvas.childElementCount > 0) {\n        this.removeElement(this.canvas.firstElementChild);\n      }\n\n      this._defaultParent = undefined;\n      this._defs = document.createElementNS(this._svgns, \"defs\");\n      this._gradients = {};\n      this.canvas.appendChild(this._defs);\n    },\n    removeElement: function removeElement(d) {\n      if (undefined == d) {\n        return;\n      }\n\n      this.removeHandler(d);\n\n      try {\n        while (d.firstChild) {\n          this.removeElement(d.firstChild);\n        }\n\n        if (d.parentNode) {\n          d.parentNode.removeChild(d);\n        } else {\n          this.canvas.removeChild(d);\n        }\n      } catch (c) {\n        var b = c;\n      }\n    },\n    _openGroups: [],\n    beginGroup: function beginGroup() {\n      var b = this._activeParent();\n\n      var c = document.createElementNS(this._svgns, \"g\");\n      b.appendChild(c);\n\n      this._openGroups.push(c);\n\n      return c;\n    },\n    endGroup: function endGroup() {\n      if (this._openGroups.length == 0) {\n        return;\n      }\n\n      this._openGroups.pop();\n    },\n    _activeParent: function _activeParent() {\n      return this._openGroups.length == 0 ? this.canvas : this._openGroups[this._openGroups.length - 1];\n    },\n    createClipRect: function createClipRect(d) {\n      var e = document.createElementNS(this._svgns, \"clipPath\");\n      var b = document.createElementNS(this._svgns, \"rect\");\n      this.attr(b, {\n        x: d.x,\n        y: d.y,\n        width: d.width,\n        height: d.height,\n        fill: \"none\"\n      });\n      this._clipId = this._clipId || 0;\n      e.id = \"cl\" + this._id + \"_\" + (++this._clipId).toString();\n      e.appendChild(b);\n\n      this._defs.appendChild(e);\n\n      return e;\n    },\n    getWindowHref: function getWindowHref() {\n      var c = a.jqx.browser;\n\n      if (c && c.browser == \"msie\" && c.version < 10) {\n        return \"\";\n      }\n\n      var b = window.location.href;\n\n      if (!b) {\n        return b;\n      }\n\n      b = b.replace(/([\\('\\)])/g, \"\\\\$1\");\n      b = b.replace(/#.*$/, \"\");\n      return b;\n    },\n    setClip: function setClip(d, c) {\n      var b = \"url(\" + this.getWindowHref() + \"#\" + c.id + \")\";\n      return this.attr(d, {\n        \"clip-path\": b\n      });\n    },\n    _clipId: 0,\n    addHandler: function addHandler(b, d, c) {\n      if (a(b).on) {\n        a(b).on(d, c);\n      } else {\n        a(b).bind(d, c);\n      }\n    },\n    removeHandler: function removeHandler(b, d, c) {\n      if (a(b).off) {\n        a(b).off(d, c);\n      } else {\n        a(b).unbind(d, c);\n      }\n    },\n    on: function on(b, d, c) {\n      this.addHandler(b, d, c);\n    },\n    off: function off(b, d, c) {\n      this.removeHandler(b, d, c);\n    },\n    shape: function shape(b, e) {\n      var c = document.createElementNS(this._svgns, b);\n\n      if (!c) {\n        return undefined;\n      }\n\n      for (var d in e) {\n        if (e[d] !== undefined && e[d].toString() === \"NaN\") {\n          c.setAttribute(d, 0);\n        } else {\n          c.setAttribute(d, e[d]);\n        }\n      }\n\n      this._activeParent().appendChild(c);\n\n      return c;\n    },\n    _getTextParts: function _getTextParts(q, g, h) {\n      var f = {\n        width: 0,\n        height: 0,\n        parts: []\n      };\n\n      if (undefined === q) {\n        return f;\n      }\n\n      var m = 0.6;\n      var r = q.toString().split(\"<br>\");\n\n      var o = this._activeParent();\n\n      var k = document.createElementNS(this._svgns, \"text\");\n      this.attr(k, h);\n\n      for (var j = 0; j < r.length; j++) {\n        var c = r[j];\n        var d = k.ownerDocument.createTextNode(c);\n        k.appendChild(d);\n        o.appendChild(k);\n        var p;\n\n        try {\n          p = k.getBBox();\n        } catch (n) {}\n\n        var l = a.jqx._rup(p.width);\n\n        var b = a.jqx._rup(p.height * m);\n\n        k.removeChild(d);\n        f.width = Math.max(f.width, l);\n        f.height += b + (j > 0 ? 4 : 0);\n        f.parts.push({\n          width: l,\n          height: b,\n          text: c\n        });\n      }\n\n      o.removeChild(k);\n      return f;\n    },\n    _measureText: function _measureText(e, d, c, b) {\n      return a.jqx.commonRenderer.measureText(e, d, c, b, this);\n    },\n    measureText: function measureText(d, c, b) {\n      return this._measureText(d, c, b, false);\n    },\n    text: function text(t, q, p, B, z, H, J, I, s, k, c) {\n      var v = this._measureText(t, H, J, true);\n\n      var j = v.textPartsInfo;\n      var f = j.parts;\n      var A;\n\n      if (!s) {\n        s = \"center\";\n      }\n\n      if (!k) {\n        k = \"center\";\n      }\n\n      if (f.length > 1 || I) {\n        A = this.beginGroup();\n      }\n\n      if (I) {\n        var g = this.createClipRect({\n          x: a.jqx._rup(q) - 1,\n          y: a.jqx._rup(p) - 1,\n          width: a.jqx._rup(B) + 2,\n          height: a.jqx._rup(z) + 2\n        });\n        this.setClip(A, g);\n      }\n\n      var o = this._activeParent();\n\n      var L = 0,\n          l = 0;\n      var b = 0.6;\n      L = j.width;\n      l = j.height;\n\n      if (isNaN(B) || B <= 0) {\n        B = L;\n      }\n\n      if (isNaN(z) || z <= 0) {\n        z = l;\n      }\n\n      var r = B || 0;\n      var G = z || 0;\n\n      if (!H || H == 0) {\n        p += l;\n\n        if (k == \"center\" || k == \"middle\") {\n          p += (G - l) / 2;\n        } else {\n          if (k == \"bottom\") {\n            p += G - l;\n          }\n        }\n\n        if (!B) {\n          B = L;\n        }\n\n        if (!z) {\n          z = l;\n        }\n\n        var o = this._activeParent();\n\n        var n = 0;\n\n        for (var F = f.length - 1; F >= 0; F--) {\n          var u = document.createElementNS(this._svgns, \"text\");\n          this.attr(u, J);\n          this.attr(u, {\n            cursor: \"default\"\n          });\n          var E = u.ownerDocument.createTextNode(f[F].text);\n          u.appendChild(E);\n          var M = q;\n          var m = f[F].width;\n          var e = f[F].height;\n\n          if (s == \"center\") {\n            M += (r - m) / 2;\n          } else {\n            if (s == \"right\") {\n              M += r - m;\n            }\n          }\n\n          this.attr(u, {\n            x: a.jqx._rup(M),\n            y: a.jqx._rup(p + n),\n            width: a.jqx._rup(m),\n            height: a.jqx._rup(e)\n          });\n          o.appendChild(u);\n          n -= f[F].height + 4;\n        }\n\n        if (A) {\n          this.endGroup();\n          return A;\n        }\n\n        return u;\n      }\n\n      var C = a.jqx.commonRenderer.alignTextInRect(q, p, B, z, L, l, s, k, H, c);\n      q = C.x;\n      p = C.y;\n      var D = this.shape(\"g\", {\n        transform: \"translate(\" + q + \",\" + p + \")\"\n      });\n      var d = this.shape(\"g\", {\n        transform: \"rotate(\" + H + \")\"\n      });\n      D.appendChild(d);\n      var n = 0;\n\n      for (var F = f.length - 1; F >= 0; F--) {\n        var K = document.createElementNS(this._svgns, \"text\");\n        this.attr(K, J);\n        this.attr(K, {\n          cursor: \"default\"\n        });\n        var E = K.ownerDocument.createTextNode(f[F].text);\n        K.appendChild(E);\n        var M = 0;\n        var m = f[F].width;\n        var e = f[F].height;\n\n        if (s == \"center\") {\n          M += (j.width - m) / 2;\n        } else {\n          if (s == \"right\") {\n            M += j.width - m;\n          }\n        }\n\n        this.attr(K, {\n          x: a.jqx._rup(M),\n          y: a.jqx._rup(n),\n          width: a.jqx._rup(m),\n          height: a.jqx._rup(e)\n        });\n        d.appendChild(K);\n        n -= e + 4;\n      }\n\n      o.appendChild(D);\n\n      if (A) {\n        this.endGroup();\n      }\n\n      return D;\n    },\n    line: function line(d, f, c, e, g) {\n      var b = this.shape(\"line\", {\n        x1: d,\n        y1: f,\n        x2: c,\n        y2: e\n      });\n      this.attr(b, g);\n      return b;\n    },\n    path: function path(c, d) {\n      var b = this.shape(\"path\");\n      b.setAttribute(\"d\", c);\n\n      if (d) {\n        this.attr(b, d);\n      }\n\n      return b;\n    },\n    rect: function rect(b, g, c, e, f) {\n      b = a.jqx._ptrnd(b);\n      g = a.jqx._ptrnd(g);\n      c = Math.max(1, a.jqx._rnd(c, 1, false));\n      e = Math.max(1, a.jqx._rnd(e, 1, false));\n      var d = this.shape(\"rect\", {\n        x: b,\n        y: g,\n        width: c,\n        height: e\n      });\n\n      if (f) {\n        this.attr(d, f);\n      }\n\n      return d;\n    },\n    circle: function circle(b, f, d, e) {\n      var c = this.shape(\"circle\", {\n        cx: b,\n        cy: f,\n        r: d\n      });\n\n      if (e) {\n        this.attr(c, e);\n      }\n\n      return c;\n    },\n    pieSlicePath: function pieSlicePath(c, h, g, e, f, d, b) {\n      return a.jqx.commonRenderer.pieSlicePath(c, h, g, e, f, d, b);\n    },\n    pieslice: function pieslice(j, h, g, d, f, b, i, c) {\n      var e = this.pieSlicePath(j, h, g, d, f, b, i);\n      var k = this.shape(\"path\");\n      k.setAttribute(\"d\", e);\n\n      if (c) {\n        this.attr(k, c);\n      }\n\n      return k;\n    },\n    attr: function attr(b, d) {\n      if (!b || !d) {\n        return;\n      }\n\n      for (var c in d) {\n        if (c == \"textContent\") {\n          b.textContent = d[c];\n        } else {\n          b.setAttribute(c, d[c]);\n        }\n      }\n    },\n    removeAttr: function removeAttr(b, d) {\n      if (!b || !d) {\n        return;\n      }\n\n      for (var c in d) {\n        if (c == \"textContent\") {\n          b.textContent = \"\";\n        } else {\n          b.removeAttribute(d[c]);\n        }\n      }\n    },\n    getAttr: function getAttr(c, b) {\n      return c.getAttribute(b);\n    },\n    _gradients: {},\n    _toLinearGradient: function _toLinearGradient(e, h, j) {\n      var c = \"grd\" + this._id + e.replace(\"#\", \"\") + (h ? \"v\" : \"h\");\n      var b = \"url(\" + this.getWindowHref() + \"#\" + c + \")\";\n\n      if (this._gradients[b]) {\n        return b;\n      }\n\n      var d = document.createElementNS(this._svgns, \"linearGradient\");\n      this.attr(d, {\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: h ? \"0%\" : \"100%\",\n        y2: h ? \"100%\" : \"0%\",\n        id: c\n      });\n\n      for (var f = 0; f < j.length; f++) {\n        var g = j[f];\n        var l = document.createElementNS(this._svgns, \"stop\");\n        var k = \"stop-color:\" + a.jqx.adjustColor(e, g[1]);\n        this.attr(l, {\n          offset: g[0] + \"%\",\n          style: k\n        });\n        d.appendChild(l);\n      }\n\n      this._defs.appendChild(d);\n\n      this._gradients[b] = true;\n      return b;\n    },\n    _toRadialGradient: function _toRadialGradient(e, j, h) {\n      var c = \"grd\" + this._id + e.replace(\"#\", \"\") + \"r\" + (h != undefined ? h.key : \"\");\n      var b = \"url(\" + this.getWindowHref() + \"#\" + c + \")\";\n\n      if (this._gradients[b]) {\n        return b;\n      }\n\n      var d = document.createElementNS(this._svgns, \"radialGradient\");\n\n      if (h == undefined) {\n        this.attr(d, {\n          cx: \"50%\",\n          cy: \"50%\",\n          r: \"100%\",\n          fx: \"50%\",\n          fy: \"50%\",\n          id: c\n        });\n      } else {\n        this.attr(d, {\n          cx: h.x,\n          cy: h.y,\n          r: h.outerRadius,\n          id: c,\n          gradientUnits: \"userSpaceOnUse\"\n        });\n      }\n\n      for (var f = 0; f < j.length; f++) {\n        var g = j[f];\n        var l = document.createElementNS(this._svgns, \"stop\");\n        var k = \"stop-color:\" + a.jqx.adjustColor(e, g[1]);\n        this.attr(l, {\n          offset: g[0] + \"%\",\n          style: k\n        });\n        d.appendChild(l);\n      }\n\n      this._defs.appendChild(d);\n\n      this._gradients[b] = true;\n      return b;\n    }\n  };\n\n  a.jqx.vmlRenderer = function () {};\n\n  a.jqx.vmlRenderer.prototype = {\n    init: function init(g) {\n      var f = \"<div class='chartContainer' style=\\\"position:relative;overflow:hidden;\\\"><div>\";\n      g.append(f);\n      this.host = g;\n      var b = g.find(\".chartContainer\");\n      b[0].style.width = g.width() + \"px\";\n      b[0].style.height = g.height() + \"px\";\n      var d = true;\n\n      try {\n        for (var c = 0; c < document.namespaces.length; c++) {\n          if (document.namespaces[c].name == \"v\" && document.namespaces[c].urn == \"urn:schemas-microsoft-com:vml\") {\n            d = false;\n            break;\n          }\n        }\n      } catch (h) {\n        return false;\n      }\n\n      if (a.jqx.browser.msie && parseInt(a.jqx.browser.version) < 9 && document.childNodes && document.childNodes.length > 0 && document.childNodes[0].data && document.childNodes[0].data.indexOf(\"DOCTYPE\") != -1) {\n        if (d) {\n          document.namespaces.add(\"v\", \"urn:schemas-microsoft-com:vml\");\n        }\n\n        this._ie8mode = true;\n      } else {\n        if (d) {\n          document.namespaces.add(\"v\", \"urn:schemas-microsoft-com:vml\");\n          document.createStyleSheet().cssText = \"v\\\\:* { behavior: url(#default#VML); display: inline-block; }\";\n        }\n      }\n\n      this.canvas = b[0];\n      this._width = Math.max(a.jqx._rup(b.width()), 0);\n      this._height = Math.max(a.jqx._rup(b.height()), 0);\n      b[0].style.width = this._width + 2;\n      b[0].style.height = this._height + 2;\n      this._id = new Date().getTime();\n      this.clear();\n      return true;\n    },\n    getType: function getType() {\n      return \"VML\";\n    },\n    refresh: function refresh() {},\n    getRect: function getRect() {\n      return {\n        x: 0,\n        y: 0,\n        width: this._width,\n        height: this._height\n      };\n    },\n    getContainer: function getContainer() {\n      var b = this.host.find(\".chartContainer\");\n      return b;\n    },\n    clear: function clear() {\n      while (this.canvas.childElementCount > 0) {\n        this.removeHandler(this.canvas.firstElementChild);\n        this.canvas.removeChild(this.canvas.firstElementChild);\n      }\n\n      this._gradients = {};\n      this._defaultParent = undefined;\n    },\n    removeElement: function removeElement(b) {\n      if (b != null) {\n        this.removeHandler(b);\n        b.parentNode.removeChild(b);\n      }\n    },\n    _openGroups: [],\n    beginGroup: function beginGroup() {\n      var b = this._activeParent();\n\n      var c = document.createElement(\"v:group\");\n      c.style.position = \"absolute\";\n      c.coordorigin = \"0,0\";\n      c.coordsize = this._width + \",\" + this._height;\n      c.style.left = 0;\n      c.style.top = 0;\n      c.style.width = this._width;\n      c.style.height = this._height;\n      b.appendChild(c);\n\n      this._openGroups.push(c);\n\n      return c;\n    },\n    endGroup: function endGroup() {\n      if (this._openGroups.length == 0) {\n        return;\n      }\n\n      this._openGroups.pop();\n    },\n    _activeParent: function _activeParent() {\n      return this._openGroups.length == 0 ? this.canvas : this._openGroups[this._openGroups.length - 1];\n    },\n    createClipRect: function createClipRect(b) {\n      var c = document.createElement(\"div\");\n      c.style.height = b.height + 1 + \"px\";\n      c.style.width = b.width + 1 + \"px\";\n      c.style.position = \"absolute\";\n      c.style.left = b.x + \"px\";\n      c.style.top = b.y + \"px\";\n      c.style.overflow = \"hidden\";\n      this._clipId = this._clipId || 0;\n      c.id = \"cl\" + this._id + \"_\" + (++this._clipId).toString();\n\n      this._activeParent().appendChild(c);\n\n      return c;\n    },\n    setClip: function setClip(c, b) {},\n    _clipId: 0,\n    addHandler: function addHandler(b, d, c) {\n      if (a(b).on) {\n        a(b).on(d, c);\n      } else {\n        a(b).bind(d, c);\n      }\n    },\n    removeHandler: function removeHandler(b, d, c) {\n      if (a(b).off) {\n        a(b).off(d, c);\n      } else {\n        a(b).unbind(d, c);\n      }\n    },\n    on: function on(b, d, c) {\n      this.addHandler(b, d, c);\n    },\n    off: function off(b, d, c) {\n      this.removeHandler(b, d, c);\n    },\n    _getTextParts: function _getTextParts(o, f, g) {\n      var e = {\n        width: 0,\n        height: 0,\n        parts: []\n      };\n      var m = 0.6;\n      var p = o.toString().split(\"<br>\");\n\n      var n = this._activeParent();\n\n      var j = document.createElement(\"v:textbox\");\n      this.attr(j, g);\n      n.appendChild(j);\n\n      for (var h = 0; h < p.length; h++) {\n        var c = p[h];\n        var d = document.createElement(\"span\");\n        d.appendChild(document.createTextNode(c));\n        j.appendChild(d);\n\n        if (g && g[\"class\"]) {\n          d.className = g[\"class\"];\n        }\n\n        var l = a(j);\n\n        var k = a.jqx._rup(l.width());\n\n        var b = a.jqx._rup(l.height() * m);\n\n        if (b == 0 && a.jqx.browser.msie && parseInt(a.jqx.browser.version) < 9) {\n          var q = l.css(\"font-size\");\n\n          if (q) {\n            b = parseInt(q);\n\n            if (isNaN(b)) {\n              b = 0;\n            }\n          }\n        }\n\n        j.removeChild(d);\n        e.width = Math.max(e.width, k);\n        e.height += b + (h > 0 ? 2 : 0);\n        e.parts.push({\n          width: k,\n          height: b,\n          text: c\n        });\n      }\n\n      n.removeChild(j);\n      return e;\n    },\n    _measureText: function _measureText(e, d, c, b) {\n      if (Math.abs(d) > 45) {\n        d = 90;\n      } else {\n        d = 0;\n      }\n\n      return a.jqx.commonRenderer.measureText(e, d, c, b, this);\n    },\n    measureText: function measureText(d, c, b) {\n      return this._measureText(d, c, b, false);\n    },\n    text: function text(r, n, m, A, t, G, I, H, q, g) {\n      var B;\n\n      if (I && I.stroke) {\n        B = I.stroke;\n      }\n\n      if (B == undefined) {\n        B = \"black\";\n      }\n\n      var s = this._measureText(r, G, I, true);\n\n      var e = s.textPartsInfo;\n      var b = e.parts;\n      var J = s.width;\n      var j = s.height;\n\n      if (isNaN(A) || A == 0) {\n        A = J;\n      }\n\n      if (isNaN(t) || t == 0) {\n        t = j;\n      }\n\n      var v;\n\n      if (!q) {\n        q = \"center\";\n      }\n\n      if (!g) {\n        g = \"center\";\n      }\n\n      if (b.length > 0 || H) {\n        v = this.beginGroup();\n      }\n\n      if (H) {\n        var c = this.createClipRect({\n          x: a.jqx._rup(n),\n          y: a.jqx._rup(m),\n          width: a.jqx._rup(A),\n          height: a.jqx._rup(t)\n        });\n        this.setClip(v, c);\n      }\n\n      var l = this._activeParent();\n\n      var p = A || 0;\n      var F = t || 0;\n\n      if (Math.abs(G) > 45) {\n        G = 90;\n      } else {\n        G = 0;\n      }\n\n      var u = 0,\n          E = 0;\n\n      if (q == \"center\") {\n        u += (p - J) / 2;\n      } else {\n        if (q == \"right\") {\n          u += p - J;\n        }\n      }\n\n      if (g == \"center\") {\n        E = (F - j) / 2;\n      } else {\n        if (g == \"bottom\") {\n          E = F - j;\n        }\n      }\n\n      if (G == 0) {\n        m += j + E;\n        n += u;\n      } else {\n        n += J + u;\n        m += E;\n      }\n\n      var k = 0,\n          K = 0;\n      var d;\n\n      for (var D = b.length - 1; D >= 0; D--) {\n        var z = b[D];\n        var o = (J - z.width) / 2;\n\n        if (G == 0 && q == \"left\") {\n          o = 0;\n        } else {\n          if (G == 0 && q == \"right\") {\n            o = J - z.width;\n          } else {\n            if (G == 90) {\n              o = (j - z.width) / 2;\n            }\n          }\n        }\n\n        var f = k - z.height;\n        E = G == 90 ? o : f;\n        u = G == 90 ? f : o;\n        d = document.createElement(\"v:textbox\");\n        d.style.position = \"absolute\";\n        d.style.left = a.jqx._rup(n + u);\n        d.style.top = a.jqx._rup(m + E);\n        d.style.width = a.jqx._rup(z.width);\n        d.style.height = a.jqx._rup(z.height);\n\n        if (G == 90) {\n          d.style.filter = \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n          d.style.height = a.jqx._rup(z.height) + 5;\n        }\n\n        var C = document.createElement(\"span\");\n        C.appendChild(document.createTextNode(z.text));\n\n        if (I && I[\"class\"]) {\n          C.className = I[\"class\"];\n        }\n\n        d.appendChild(C);\n        l.appendChild(d);\n        k -= z.height + (D > 0 ? 2 : 0);\n      }\n\n      if (v) {\n        this.endGroup();\n        return l;\n      }\n\n      return d;\n    },\n    shape: function shape(b, e) {\n      var c = document.createElement(this._createElementMarkup(b));\n\n      if (!c) {\n        return undefined;\n      }\n\n      for (var d in e) {\n        c.setAttribute(d, e[d]);\n      }\n\n      this._activeParent().appendChild(c);\n\n      return c;\n    },\n    line: function line(e, g, d, f, h) {\n      var b = \"M \" + e + \",\" + g + \" L \" + d + \",\" + f + \" X E\";\n      var c = this.path(b);\n      this.attr(c, h);\n      return c;\n    },\n    _createElementMarkup: function _createElementMarkup(b) {\n      var c = \"<v:\" + b + ' style=\"\"></v:' + b + \">\";\n\n      if (this._ie8mode) {\n        c = c.replace('style=\"\"', 'style=\"behavior: url(#default#VML);\"');\n      }\n\n      return c;\n    },\n    path: function path(c, d) {\n      var b = document.createElement(this._createElementMarkup(\"shape\"));\n      b.style.position = \"absolute\";\n      b.coordsize = this._width + \" \" + this._height;\n      b.coordorigin = \"0 0\";\n      b.style.width = parseInt(this._width);\n      b.style.height = parseInt(this._height);\n      b.style.left = 0 + \"px\";\n      b.style.top = 0 + \"px\";\n      b.setAttribute(\"path\", c);\n\n      this._activeParent().appendChild(b);\n\n      if (d) {\n        this.attr(b, d);\n      }\n\n      return b;\n    },\n    rect: function rect(b, g, c, d, f) {\n      b = a.jqx._ptrnd(b);\n      g = a.jqx._ptrnd(g);\n      c = a.jqx._rup(c);\n      d = a.jqx._rup(d);\n      var e = this.shape(\"rect\", f);\n      e.style.position = \"absolute\";\n      e.style.left = b;\n      e.style.top = g;\n      e.style.width = c;\n      e.style.height = d;\n      e.strokeweight = 0;\n\n      if (f) {\n        this.attr(e, f);\n      }\n\n      return e;\n    },\n    circle: function circle(b, f, d, e) {\n      var c = this.shape(\"oval\");\n      b = a.jqx._ptrnd(b - d);\n      f = a.jqx._ptrnd(f - d);\n      d = a.jqx._rup(d);\n      c.style.position = \"absolute\";\n      c.style.left = b;\n      c.style.top = f;\n      c.style.width = d * 2;\n      c.style.height = d * 2;\n\n      if (e) {\n        this.attr(c, e);\n      }\n\n      return c;\n    },\n    updateCircle: function updateCircle(d, b, e, c) {\n      if (b == undefined) {\n        b = parseFloat(d.style.left) + parseFloat(d.style.width) / 2;\n      }\n\n      if (e == undefined) {\n        e = parseFloat(d.style.top) + parseFloat(d.style.height) / 2;\n      }\n\n      if (c == undefined) {\n        c = parseFloat(d.width) / 2;\n      }\n\n      b = a.jqx._ptrnd(b - c);\n      e = a.jqx._ptrnd(e - c);\n      c = a.jqx._rup(c);\n      d.style.left = b;\n      d.style.top = e;\n      d.style.width = c * 2;\n      d.style.height = c * 2;\n    },\n    pieSlicePath: function pieSlicePath(k, j, h, r, B, C, d) {\n      if (!r) {\n        r = 1;\n      }\n\n      var m = Math.abs(B - C);\n      var p = m > 180 ? 1 : 0;\n\n      if (m > 360) {\n        B = 0;\n        C = 360;\n      }\n\n      var q = B * Math.PI * 2 / 360;\n      var i = C * Math.PI * 2 / 360;\n      var w = k,\n          v = k,\n          f = j,\n          e = j;\n      var n = !isNaN(h) && h > 0;\n\n      if (n) {\n        d = 0;\n      }\n\n      if (d > 0) {\n        var l = m / 2 + B;\n        var A = l * Math.PI * 2 / 360;\n        k += d * Math.cos(A);\n        j -= d * Math.sin(A);\n      }\n\n      if (n) {\n        var u = h;\n        w = a.jqx._ptrnd(k + u * Math.cos(q));\n        f = a.jqx._ptrnd(j - u * Math.sin(q));\n        v = a.jqx._ptrnd(k + u * Math.cos(i));\n        e = a.jqx._ptrnd(j - u * Math.sin(i));\n      }\n\n      var t = a.jqx._ptrnd(k + r * Math.cos(q));\n\n      var s = a.jqx._ptrnd(k + r * Math.cos(i));\n\n      var c = a.jqx._ptrnd(j - r * Math.sin(q));\n\n      var b = a.jqx._ptrnd(j - r * Math.sin(i));\n\n      r = a.jqx._ptrnd(r);\n      h = a.jqx._ptrnd(h);\n      k = a.jqx._ptrnd(k);\n      j = a.jqx._ptrnd(j);\n      var g = Math.round(B * 65535);\n      var z = Math.round((C - B) * 65536);\n\n      if (h < 0) {\n        h = 1;\n      }\n\n      var o = \"\";\n\n      if (n) {\n        o = \"M\" + w + \" \" + f;\n        o += \" AE \" + k + \" \" + j + \" \" + h + \" \" + h + \" \" + g + \" \" + z;\n        o += \" L \" + s + \" \" + b;\n        g = Math.round((B - C) * 65535);\n        z = Math.round(C * 65536);\n        o += \" AE \" + k + \" \" + j + \" \" + r + \" \" + r + \" \" + z + \" \" + g;\n        o += \" L \" + w + \" \" + f;\n      } else {\n        o = \"M\" + k + \" \" + j;\n        o += \" AE \" + k + \" \" + j + \" \" + r + \" \" + r + \" \" + g + \" \" + z;\n      }\n\n      o += \" X E\";\n      return o;\n    },\n    pieslice: function pieslice(k, i, h, e, g, b, j, d) {\n      var f = this.pieSlicePath(k, i, h, e, g, b, j);\n      var c = this.path(f, d);\n\n      if (d) {\n        this.attr(c, d);\n      }\n\n      return c;\n    },\n    _keymap: [{\n      svg: \"fill\",\n      vml: \"fillcolor\"\n    }, {\n      svg: \"stroke\",\n      vml: \"strokecolor\"\n    }, {\n      svg: \"stroke-width\",\n      vml: \"strokeweight\"\n    }, {\n      svg: \"stroke-dasharray\",\n      vml: \"dashstyle\"\n    }, {\n      svg: \"fill-opacity\",\n      vml: \"fillopacity\"\n    }, {\n      svg: \"stroke-opacity\",\n      vml: \"strokeopacity\"\n    }, {\n      svg: \"opacity\",\n      vml: \"opacity\"\n    }, {\n      svg: \"cx\",\n      vml: \"style.left\"\n    }, {\n      svg: \"cy\",\n      vml: \"style.top\"\n    }, {\n      svg: \"height\",\n      vml: \"style.height\"\n    }, {\n      svg: \"width\",\n      vml: \"style.width\"\n    }, {\n      svg: \"x\",\n      vml: \"style.left\"\n    }, {\n      svg: \"y\",\n      vml: \"style.top\"\n    }, {\n      svg: \"d\",\n      vml: \"v\"\n    }, {\n      svg: \"display\",\n      vml: \"style.display\"\n    }],\n    _translateParam: function _translateParam(b) {\n      for (var c in this._keymap) {\n        if (this._keymap[c].svg == b) {\n          return this._keymap[c].vml;\n        }\n      }\n\n      return b;\n    },\n    attr: function attr(c, e) {\n      if (!c || !e) {\n        return;\n      }\n\n      for (var d in e) {\n        var b = this._translateParam(d);\n\n        if (undefined == e[d]) {\n          continue;\n        }\n\n        if (b == \"fillcolor\" && e[d].indexOf(\"grd\") != -1) {\n          c.type = e[d];\n        } else {\n          if (b == \"fillcolor\" && e[d] == \"transparent\") {\n            c.style.filter = \"alpha(opacity=0)\";\n            c[\"-ms-filter\"] = \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n          } else {\n            if (b == \"opacity\" || b == \"fillopacity\") {\n              if (c.fill) {\n                c.fill.opacity = e[d];\n              }\n            } else {\n              if (b == \"textContent\") {\n                c.children[0].innerText = e[d];\n              } else {\n                if (b == \"dashstyle\") {\n                  c.dashstyle = e[d].replace(\",\", \" \");\n                } else {\n                  if (b.indexOf(\"style.\") == -1) {\n                    c[b] = e[d];\n                  } else {\n                    c.style[b.replace(\"style.\", \"\")] = e[d];\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(b, d) {\n      if (!b || !d) {\n        return;\n      }\n\n      for (var c in d) {\n        b.removeAttribute(d[c]);\n      }\n    },\n    getAttr: function getAttr(d, c) {\n      var b = this._translateParam(c);\n\n      if (b == \"opacity\" || b == \"fillopacity\") {\n        if (d.fill) {\n          return d.fill.opacity;\n        } else {\n          return 1;\n        }\n      }\n\n      if (b.indexOf(\"style.\") == -1) {\n        return d[b];\n      }\n\n      return d.style[b.replace(\"style.\", \"\")];\n    },\n    _gradients: {},\n    _toRadialGradient: function _toRadialGradient(b, d, c) {\n      return b;\n    },\n    _toLinearGradient: function _toLinearGradient(g, k, l) {\n      if (this._ie8mode) {\n        return g;\n      }\n\n      var d = \"grd\" + g.replace(\"#\", \"\") + (k ? \"v\" : \"h\");\n      var e = \"#\" + d + \"\";\n\n      if (this._gradients[e]) {\n        return e;\n      }\n\n      var f = document.createElement(this._createElementMarkup(\"fill\"));\n      f.type = \"gradient\";\n      f.method = \"linear\";\n      f.angle = k ? 0 : 90;\n      var c = \"\";\n\n      for (var h = 0; h < l.length; h++) {\n        var j = l[h];\n\n        if (j > 0) {\n          c += \", \";\n        }\n\n        c += j[0] + \"% \" + a.jqx.adjustColor(g, j[1]);\n      }\n\n      f.colors = c;\n      var b = document.createElement(this._createElementMarkup(\"shapetype\"));\n      b.appendChild(f);\n      b.id = d;\n      this.canvas.appendChild(b);\n      return e;\n    }\n  };\n\n  a.jqx.HTML5Renderer = function () {};\n\n  a.jqx.ptrnd = function (c) {\n    if (Math.abs(Math.round(c) - c) == 0.5) {\n      return c;\n    }\n\n    var b = Math.round(c);\n\n    if (b < c) {\n      b = b - 1;\n    }\n\n    return b + 0.5;\n  };\n\n  a.jqx.HTML5Renderer.prototype = {\n    init: function init(b) {\n      try {\n        this.host = b;\n        this.host.append(\"<div class='chartContainer' style='position:relative' onselectstart='return false;'><canvas id='__jqxCanvasWrap' style='width:100%; height: 100%;'/></div>\");\n        this.canvas = b.find(\"#__jqxCanvasWrap\");\n        this.canvas[0].width = b.width();\n        this.canvas[0].height = b.height();\n        this.ctx = this.canvas[0].getContext(\"2d\");\n        this._elements = {};\n        this._maxId = 0;\n        this._gradientId = 0;\n        this._gradients = {};\n        this._currentPoint = {\n          x: 0,\n          y: 0\n        };\n        this._lastCmd = \"\";\n        this._pos = 0;\n      } catch (c) {\n        return false;\n      }\n\n      return true;\n    },\n    getType: function getType() {\n      return \"HTML5\";\n    },\n    getContainer: function getContainer() {\n      var b = this.host.find(\".chartContainer\");\n      return b;\n    },\n    getRect: function getRect() {\n      return {\n        x: 0,\n        y: 0,\n        width: this.canvas[0].width - 1,\n        height: this.canvas[0].height - 1\n      };\n    },\n    beginGroup: function beginGroup() {},\n    endGroup: function endGroup() {},\n    setClip: function setClip() {},\n    createClipRect: function createClipRect(b) {},\n    addHandler: function addHandler(b, d, c) {},\n    removeHandler: function removeHandler(b, d, c) {},\n    on: function on(b, d, c) {\n      this.addHandler(b, d, c);\n    },\n    off: function off(b, d, c) {\n      this.removeHandler(b, d, c);\n    },\n    clear: function clear() {\n      this._elements = {};\n      this._maxId = 0;\n      this._renderers._gradients = {};\n      this._gradientId = 0;\n    },\n    removeElement: function removeElement(b) {\n      if (undefined == b) {\n        return;\n      }\n\n      if (this._elements[b.id]) {\n        delete this._elements[b.id];\n      }\n    },\n    shape: function shape(b, e) {\n      var c = {\n        type: b,\n        id: this._maxId++\n      };\n\n      for (var d in e) {\n        c[d] = e[d];\n      }\n\n      this._elements[c.id] = c;\n      return c;\n    },\n    attr: function attr(b, d) {\n      for (var c in d) {\n        b[c] = d[c];\n      }\n    },\n    removeAttr: function removeAttr(b, d) {\n      for (var c in d) {\n        delete b[d[c]];\n      }\n    },\n    rect: function rect(b, g, c, e, f) {\n      if (isNaN(b)) {\n        throw 'Invalid value for \"x\"';\n      }\n\n      if (isNaN(g)) {\n        throw 'Invalid value for \"y\"';\n      }\n\n      if (isNaN(c)) {\n        throw 'Invalid value for \"width\"';\n      }\n\n      if (isNaN(e)) {\n        throw 'Invalid value for \"height\"';\n      }\n\n      var d = this.shape(\"rect\", {\n        x: b,\n        y: g,\n        width: c,\n        height: e\n      });\n\n      if (f) {\n        this.attr(d, f);\n      }\n\n      return d;\n    },\n    path: function path(b, d) {\n      var c = this.shape(\"path\", d);\n      this.attr(c, {\n        d: b\n      });\n      return c;\n    },\n    line: function line(c, e, b, d, f) {\n      return this.path(\"M \" + c + \",\" + e + \" L \" + b + \",\" + d, f);\n    },\n    circle: function circle(b, f, d, e) {\n      var c = this.shape(\"circle\", {\n        x: b,\n        y: f,\n        r: d\n      });\n\n      if (e) {\n        this.attr(c, e);\n      }\n\n      return c;\n    },\n    pieSlicePath: function pieSlicePath(c, h, g, e, f, d, b) {\n      return a.jqx.commonRenderer.pieSlicePath(c, h, g, e, f, d, b);\n    },\n    pieslice: function pieslice(j, h, g, e, f, b, i, c) {\n      var d = this.path(this.pieSlicePath(j, h, g, e, f, b, i), c);\n      this.attr(d, {\n        x: j,\n        y: h,\n        innerRadius: g,\n        outerRadius: e,\n        angleFrom: f,\n        angleTo: b\n      });\n      return d;\n    },\n    _getCSSStyle: function _getCSSStyle(c) {\n      var g = document.styleSheets;\n\n      try {\n        for (var d = 0; d < g.length; d++) {\n          for (var b = 0; g[d].cssRules && b < g[d].cssRules.length; b++) {\n            if (g[d].cssRules[b].selectorText.indexOf(c) != -1) {\n              return g[d].cssRules[b].style;\n            }\n          }\n        }\n      } catch (f) {}\n\n      return {};\n    },\n    _getTextParts: function _getTextParts(p, f, g) {\n      var l = \"Arial\";\n      var q = \"10pt\";\n      var m = \"\";\n\n      if (g && g[\"class\"]) {\n        var b = this._getCSSStyle(g[\"class\"]);\n\n        if (b.fontSize) {\n          q = b.fontSize;\n        }\n\n        if (b.fontFamily) {\n          l = b.fontFamily;\n        }\n\n        if (b.fontWeight) {\n          m = b.fontWeight;\n        }\n      }\n\n      this.ctx.font = m + \" \" + q + \" \" + l;\n      var e = {\n        width: 0,\n        height: 0,\n        parts: []\n      };\n      var k = 0.6;\n      var o = p.toString().split(\"<br>\");\n\n      for (var h = 0; h < o.length; h++) {\n        var d = o[h];\n        var j = this.ctx.measureText(d).width;\n        var n = document.createElement(\"span.jqxchart\");\n        n.font = this.ctx.font;\n        n.textContent = d;\n        document.body.appendChild(n);\n        var c = n.offsetHeight * k;\n        document.body.removeChild(n);\n        e.width = Math.max(e.width, a.jqx._rup(j));\n        e.height += c + (h > 0 ? 4 : 0);\n        e.parts.push({\n          width: j,\n          height: c,\n          text: d\n        });\n      }\n\n      return e;\n    },\n    _measureText: function _measureText(e, d, c, b) {\n      return a.jqx.commonRenderer.measureText(e, d, c, b, this);\n    },\n    measureText: function measureText(d, c, b) {\n      return this._measureText(d, c, b, false);\n    },\n    text: function text(m, l, j, c, n, f, g, d, h, k, e) {\n      var o = this.shape(\"text\", {\n        text: m,\n        x: l,\n        y: j,\n        width: c,\n        height: n,\n        angle: f,\n        clip: d,\n        halign: h,\n        valign: k,\n        rotateAround: e\n      });\n\n      if (g) {\n        this.attr(o, g);\n      }\n\n      o.fontFamily = \"Arial\";\n      o.fontSize = \"10pt\";\n      o.fontWeight = \"\";\n      o.color = \"#000000\";\n\n      if (g && g[\"class\"]) {\n        var b = this._getCSSStyle(g[\"class\"]);\n\n        o.fontFamily = b.fontFamily || o.fontFamily;\n        o.fontSize = b.fontSize || o.fontSize;\n        o.fontWeight = b.fontWeight || o.fontWeight;\n        o.color = b.color || o.color;\n      }\n\n      var i = this._measureText(m, 0, g, true);\n\n      this.attr(o, {\n        textPartsInfo: i.textPartsInfo,\n        textWidth: i.width,\n        textHeight: i.height\n      });\n\n      if (c <= 0 || isNaN(c)) {\n        this.attr(o, {\n          width: i.width\n        });\n      }\n\n      if (n <= 0 || isNaN(n)) {\n        this.attr(o, {\n          height: i.height\n        });\n      }\n\n      return o;\n    },\n    _toLinearGradient: function _toLinearGradient(c, g, f) {\n      if (this._renderers._gradients[c]) {\n        return c;\n      }\n\n      var b = [];\n\n      for (var e = 0; e < f.length; e++) {\n        b.push({\n          percent: f[e][0] / 100,\n          color: a.jqx.adjustColor(c, f[e][1])\n        });\n      }\n\n      var d = \"gr\" + this._gradientId++;\n      this.createGradient(d, g ? \"vertical\" : \"horizontal\", b);\n      return d;\n    },\n    _toRadialGradient: function _toRadialGradient(c, f) {\n      if (this._renderers._gradients[c]) {\n        return c;\n      }\n\n      var b = [];\n\n      for (var e = 0; e < f.length; e++) {\n        b.push({\n          percent: f[e][0] / 100,\n          color: a.jqx.adjustColor(c, f[e][1])\n        });\n      }\n\n      var d = \"gr\" + this._gradientId++;\n      this.createGradient(d, \"radial\", b);\n      return d;\n    },\n    createGradient: function createGradient(d, c, b) {\n      this._renderers.createGradient(this, d, c, b);\n    },\n    _renderers: {\n      createGradient: function createGradient(e, d, c, b) {\n        e._gradients[d] = {\n          orientation: c,\n          colorStops: b\n        };\n      },\n      setStroke: function setStroke(c, d) {\n        var b = c.ctx;\n        b.strokeStyle = d.stroke || \"transparent\";\n        b.lineWidth = d[\"stroke-width\"] || 1;\n\n        if (d[\"fill-opacity\"] != undefined) {\n          b.globalAlpha = d[\"fill-opacity\"];\n        } else {\n          if (d.opacity != undefined) {\n            b.globalAlpha = d.opacity;\n          } else {\n            b.globalAlpha = 1;\n          }\n        }\n\n        if (b.setLineDash) {\n          if (d[\"stroke-dasharray\"]) {\n            b.setLineDash(d[\"stroke-dasharray\"].split(\",\"));\n          } else {\n            b.setLineDash([]);\n          }\n        }\n      },\n      setFillStyle: function setFillStyle(c, h) {\n        var r = c.ctx;\n        r.fillStyle = \"transparent\";\n\n        if (h[\"fill-opacity\"] != undefined) {\n          r.globalAlpha = h[\"fill-opacity\"];\n        } else {\n          if (h.opacity != undefined) {\n            r.globalAlpha = h.opacity;\n          } else {\n            r.globalAlpha = 1;\n          }\n        }\n\n        if (h.fill && h.fill.indexOf(\"#\") == -1 && c._gradients[h.fill]) {\n          var p = c._gradients[h.fill].orientation != \"horizontal\";\n          var k = c._gradients[h.fill].orientation == \"radial\";\n          var d = a.jqx.ptrnd(h.x);\n          var q = a.jqx.ptrnd(h.y);\n          var b = a.jqx.ptrnd(h.x + (p ? 0 : h.width));\n          var m = a.jqx.ptrnd(h.y + (p ? h.height : 0));\n          var o;\n\n          if ((h.type == \"circle\" || h.type == \"path\" || h.type == \"rect\") && k) {\n            var n = a.jqx.ptrnd(h.x);\n            var l = a.jqx.ptrnd(h.y);\n            var g = h.innerRadius || 0;\n            var f = h.outerRadius || h.r || 0;\n\n            if (h.type == \"rect\") {\n              n += h.width / 2;\n              l += h.height / 2;\n            }\n\n            o = r.createRadialGradient(n, l, g, n, l, f);\n          }\n\n          if (!k) {\n            if (isNaN(d) || isNaN(b) || isNaN(q) || isNaN(m)) {\n              d = 0;\n              q = 0;\n              b = p ? 0 : r.canvas.width;\n              m = p ? r.canvas.height : 0;\n            }\n\n            o = r.createLinearGradient(d, q, b, m);\n          }\n\n          var e = c._gradients[h.fill].colorStops;\n\n          for (var j = 0; j < e.length; j++) {\n            o.addColorStop(e[j].percent, e[j].color);\n          }\n\n          r.fillStyle = o;\n        } else {\n          if (h.fill) {\n            r.fillStyle = h.fill;\n          }\n        }\n      },\n      rect: function rect(b, c) {\n        if (c.width == 0 || c.height == 0) {\n          return;\n        }\n\n        b.fillRect(a.jqx.ptrnd(c.x), a.jqx.ptrnd(c.y), c.width, c.height);\n        b.strokeRect(a.jqx.ptrnd(c.x), a.jqx.ptrnd(c.y), c.width, c.height);\n      },\n      circle: function circle(b, c) {\n        if (c.r == 0) {\n          return;\n        }\n\n        b.beginPath();\n        b.arc(a.jqx.ptrnd(c.x), a.jqx.ptrnd(c.y), c.r, 0, Math.PI * 2, false);\n        b.closePath();\n        b.fill();\n        b.stroke();\n      },\n      _parsePoint: function _parsePoint(c) {\n        var b = this._parseNumber(c);\n\n        var d = this._parseNumber(c);\n\n        return {\n          x: b,\n          y: d\n        };\n      },\n      _parseNumber: function _parseNumber(d) {\n        var e = false;\n\n        for (var b = this._pos; b < d.length; b++) {\n          if (d[b] >= \"0\" && d[b] <= \"9\" || d[b] == \".\" || d[b] == \"e\" || d[b] == \"-\" && !e || d[b] == \"-\" && b >= 1 && d[b - 1] == \"e\") {\n            e = true;\n            continue;\n          }\n\n          if (!e && (d[b] == \" \" || d[b] == \",\")) {\n            this._pos++;\n            continue;\n          }\n\n          break;\n        }\n\n        var c = parseFloat(d.substring(this._pos, b));\n\n        if (isNaN(c)) {\n          return undefined;\n        }\n\n        this._pos = b;\n        return c;\n      },\n      _cmds: \"mlcazq\",\n      _isRelativeCmd: function _isRelativeCmd(b) {\n        return a.jqx.string.contains(this._cmds, b);\n      },\n      _parseCmd: function _parseCmd(b) {\n        for (var c = this._pos; c < b.length; c++) {\n          if (a.jqx.string.containsIgnoreCase(this._cmds, b[c])) {\n            this._pos = c + 1;\n            this._lastCmd = b[c];\n            return this._lastCmd;\n          }\n\n          if (b[c] == \" \") {\n            this._pos++;\n            continue;\n          }\n\n          if (b[c] >= \"0\" && b[c] <= \"9\") {\n            this._pos = c;\n\n            if (this._lastCmd == \"\") {\n              break;\n            } else {\n              return this._lastCmd;\n            }\n          }\n        }\n\n        return undefined;\n      },\n      _toAbsolutePoint: function _toAbsolutePoint(b) {\n        return {\n          x: this._currentPoint.x + b.x,\n          y: this._currentPoint.y + b.y\n        };\n      },\n      path: function path(A, J) {\n        var x = J.d;\n        this._pos = 0;\n        this._lastCmd = \"\";\n        var k = undefined;\n        this._currentPoint = {\n          x: 0,\n          y: 0\n        };\n        A.beginPath();\n        var E = 0;\n\n        while (this._pos < x.length) {\n          var D = this._parseCmd(x);\n\n          if (D == undefined) {\n            break;\n          }\n\n          if (D == \"M\" || D == \"m\") {\n            var B = this._parsePoint(x);\n\n            if (B == undefined) {\n              break;\n            }\n\n            A.moveTo(B.x, B.y);\n            this._currentPoint = B;\n\n            if (k == undefined) {\n              k = B;\n            }\n\n            continue;\n          }\n\n          if (D == \"L\" || D == \"l\") {\n            var B = this._parsePoint(x);\n\n            if (B == undefined) {\n              break;\n            }\n\n            A.lineTo(B.x, B.y);\n            this._currentPoint = B;\n            continue;\n          }\n\n          if (D == \"A\" || D == \"a\") {\n            var g = this._parseNumber(x);\n\n            var f = this._parseNumber(x);\n\n            var H = this._parseNumber(x) * (Math.PI / 180);\n\n            var L = this._parseNumber(x);\n\n            var e = this._parseNumber(x);\n\n            var o = this._parsePoint(x);\n\n            if (this._isRelativeCmd(D)) {\n              o = this._toAbsolutePoint(o);\n            }\n\n            if (g == 0 || f == 0) {\n              continue;\n            }\n\n            var h = this._currentPoint;\n            var G = {\n              x: Math.cos(H) * (h.x - o.x) / 2 + Math.sin(H) * (h.y - o.y) / 2,\n              y: -Math.sin(H) * (h.x - o.x) / 2 + Math.cos(H) * (h.y - o.y) / 2\n            };\n            var j = Math.pow(G.x, 2) / Math.pow(g, 2) + Math.pow(G.y, 2) / Math.pow(f, 2);\n\n            if (j > 1) {\n              g *= Math.sqrt(j);\n              f *= Math.sqrt(j);\n            }\n\n            var p = (L == e ? -1 : 1) * Math.sqrt((Math.pow(g, 2) * Math.pow(f, 2) - Math.pow(g, 2) * Math.pow(G.y, 2) - Math.pow(f, 2) * Math.pow(G.x, 2)) / (Math.pow(g, 2) * Math.pow(G.y, 2) + Math.pow(f, 2) * Math.pow(G.x, 2)));\n\n            if (isNaN(p)) {\n              p = 0;\n            }\n\n            var F = {\n              x: p * g * G.y / f,\n              y: p * -f * G.x / g\n            };\n            var z = {\n              x: (h.x + o.x) / 2 + Math.cos(H) * F.x - Math.sin(H) * F.y,\n              y: (h.y + o.y) / 2 + Math.sin(H) * F.x + Math.cos(H) * F.y\n            };\n\n            var y = function y(i) {\n              return Math.sqrt(Math.pow(i[0], 2) + Math.pow(i[1], 2));\n            };\n\n            var t = function t(m, i) {\n              return (m[0] * i[0] + m[1] * i[1]) / (y(m) * y(i));\n            };\n\n            var K = function K(m, i) {\n              return (m[0] * i[1] < m[1] * i[0] ? -1 : 1) * Math.acos(t(m, i));\n            };\n\n            var C = K([1, 0], [(G.x - F.x) / g, (G.y - F.y) / f]);\n            var n = [(G.x - F.x) / g, (G.y - F.y) / f];\n            var l = [(-G.x - F.x) / g, (-G.y - F.y) / f];\n            var I = K(n, l);\n\n            if (t(n, l) <= -1) {\n              I = Math.PI;\n            }\n\n            if (t(n, l) >= 1) {\n              I = 0;\n            }\n\n            if (e == 0 && I > 0) {\n              I = I - 2 * Math.PI;\n            }\n\n            if (e == 1 && I < 0) {\n              I = I + 2 * Math.PI;\n            }\n\n            var t = g > f ? g : f;\n            var w = g > f ? 1 : g / f;\n            var q = g > f ? f / g : 1;\n            A.translate(z.x, z.y);\n            A.rotate(H);\n            A.scale(w, q);\n            A.arc(0, 0, t, C, C + I, 1 - e);\n            A.scale(1 / w, 1 / q);\n            A.rotate(-H);\n            A.translate(-z.x, -z.y);\n            continue;\n          }\n\n          if ((D == \"Z\" || D == \"z\") && k != undefined) {\n            A.lineTo(k.x, k.y);\n            this._currentPoint = k;\n            continue;\n          }\n\n          if (D == \"C\" || D == \"c\") {\n            var d = this._parsePoint(x);\n\n            var c = this._parsePoint(x);\n\n            var b = this._parsePoint(x);\n\n            A.bezierCurveTo(d.x, d.y, c.x, c.y, b.x, b.y);\n            this._currentPoint = b;\n            continue;\n          }\n\n          if (D == \"Q\" || D == \"q\") {\n            var d = this._parsePoint(x);\n\n            var c = this._parsePoint(x);\n\n            A.quadraticCurveTo(d.x, d.y, c.x, c.y);\n            this._currentPoint = c;\n            continue;\n          }\n        }\n\n        A.fill();\n        A.stroke();\n        A.closePath();\n      },\n      text: function text(u, D) {\n        var n = a.jqx.ptrnd(D.x);\n        var m = a.jqx.ptrnd(D.y);\n        var s = a.jqx.ptrnd(D.width);\n        var q = a.jqx.ptrnd(D.height);\n        var p = D.halign;\n        var g = D.valign;\n        var A = D.angle;\n        var b = D.rotateAround;\n        var e = D.textPartsInfo;\n        var d = e.parts;\n        var B = D.clip;\n\n        if (B == undefined) {\n          B = true;\n        }\n\n        u.save();\n\n        if (!p) {\n          p = \"center\";\n        }\n\n        if (!g) {\n          g = \"center\";\n        }\n\n        if (B) {\n          u.rect(n, m, s, q);\n          u.clip();\n        }\n\n        var E = D.textWidth;\n        var j = D.textHeight;\n        var o = s || 0;\n        var z = q || 0;\n        u.fillStyle = D.color;\n        u.font = D.fontWeight + \" \" + D.fontSize + \" \" + D.fontFamily;\n\n        if (!A || A == 0) {\n          m += j;\n\n          if (g == \"center\" || g == \"middle\") {\n            m += (z - j) / 2;\n          } else {\n            if (g == \"bottom\") {\n              m += z - j;\n            }\n          }\n\n          if (!s) {\n            s = E;\n          }\n\n          if (!q) {\n            q = j;\n          }\n\n          var l = 0;\n\n          for (var v = d.length - 1; v >= 0; v--) {\n            var r = d[v];\n            var F = n;\n            var k = d[v].width;\n            var c = d[v].height;\n\n            if (p == \"center\") {\n              F += (o - k) / 2;\n            } else {\n              if (p == \"right\") {\n                F += o - k;\n              }\n            }\n\n            u.fillText(r.text, F, m + l);\n            l -= r.height + (v > 0 ? 4 : 0);\n          }\n\n          u.restore();\n          return;\n        }\n\n        var t = a.jqx.commonRenderer.alignTextInRect(n, m, s, q, E, j, p, g, A, b);\n        n = t.x;\n        m = t.y;\n        var f = A * Math.PI * 2 / 360;\n        u.translate(n, m);\n        u.rotate(f);\n        var l = 0;\n        var C = e.width;\n\n        for (var v = d.length - 1; v >= 0; v--) {\n          var F = 0;\n\n          if (p == \"center\") {\n            F += (C - d[v].width) / 2;\n          } else {\n            if (p == \"right\") {\n              F += C - d[v].width;\n            }\n          }\n\n          u.fillText(d[v].text, F, l);\n          l -= d[v].height + 4;\n        }\n\n        u.restore();\n      }\n    },\n    refresh: function refresh() {\n      this.ctx.clearRect(0, 0, this.canvas[0].width, this.canvas[0].height);\n\n      for (var b in this._elements) {\n        var c = this._elements[b];\n\n        this._renderers.setFillStyle(this, c);\n\n        this._renderers.setStroke(this, c);\n\n        this._renderers[this._elements[b].type](this.ctx, c);\n      }\n    }\n  };\n  a.jqx.createRenderer = function (b, d) {\n    var c = b;\n    var e = c.renderer = null;\n\n    if (document.createElementNS && c.renderEngine != \"HTML5\" && c.renderEngine != \"VML\") {\n      e = new a.jqx.svgRenderer();\n\n      if (!e.init(d)) {\n        if (c.renderEngine == \"SVG\") {\n          throw \"Your browser does not support SVG\";\n        }\n\n        return null;\n      }\n    }\n\n    if (e == null && c.renderEngine != \"HTML5\") {\n      e = new a.jqx.vmlRenderer();\n\n      if (!e.init(d)) {\n        if (c.renderEngine == \"VML\") {\n          throw \"Your browser does not support VML\";\n        }\n\n        return null;\n      }\n\n      c._isVML = true;\n    }\n\n    if (e == null && (c.renderEngine == \"HTML5\" || c.renderEngine == undefined)) {\n      e = new a.jqx.HTML5Renderer();\n\n      if (!e.init(d)) {\n        throw \"Your browser does not support HTML5 Canvas\";\n      }\n    }\n\n    c.renderer = e;\n    return e;\n  }, a.jqx._widgetToImage = function (o, i, d, m, g, f) {\n    var k = o;\n\n    if (!k) {\n      return false;\n    }\n\n    if (d == undefined || d == \"\") {\n      d = \"image.\" + i;\n    }\n\n    var l = k.renderEngine;\n    var c = k.enableAnimations;\n    k.enableAnimations = false;\n    k.renderEngine = \"HTML5\";\n\n    if (k.renderEngine != l) {\n      try {\n        k.refresh();\n      } catch (h) {\n        k.renderEngine = l;\n        k.refresh();\n        k.enableAnimations = c;\n        return false;\n      }\n    }\n\n    var b = k.renderer.getContainer().find(\"canvas\")[0];\n    var j = true;\n\n    if (a.isFunction(f)) {\n      j = f(o, b);\n    }\n\n    var n = true;\n\n    if (j) {\n      n = a.jqx.exportImage(b, i, d, m, g);\n    }\n\n    if (k.renderEngine != l) {\n      k.renderEngine = l;\n      k.refresh();\n      k.enableAnimations = c;\n    }\n\n    return n;\n  };\n\n  a.jqx.getByPriority = function (b) {\n    var d = undefined;\n\n    for (var c = 0; c < b.length && d == undefined; c++) {\n      if (d == undefined && b[c] != undefined) {\n        d = b[c];\n      }\n    }\n\n    return d;\n  };\n\n  a.jqx.exportImage = function (d, n, f, q, i) {\n    if (!d) {\n      return false;\n    }\n\n    var k = n.toLowerCase() === \"pdf\";\n\n    if (k) {\n      n = \"jpeg\";\n    }\n\n    if (f == undefined || f == \"\") {\n      f = \"image.\" + n;\n    }\n\n    if (q == undefined || q == \"\") {\n      throw \"Please specifiy export server\";\n    }\n\n    var s = true;\n\n    try {\n      if (d) {\n        var g = d.toDataURL(\"image/\" + n);\n\n        if (k) {\n          if (!a.jqx.pdfExport) {\n            a.jqx.pdfExport = {\n              orientation: \"portrait\",\n              paperSize: \"a4\"\n            };\n          }\n\n          var h = 595;\n\n          switch (a.jqx.pdfExport.paperSize) {\n            case \"legal\":\n              var h = 612;\n\n              if (a.jqx.pdfExport.orientation !== \"portrait\") {\n                h = 1008;\n              }\n\n              break;\n\n            case \"letter\":\n              var h = 612;\n\n              if (a.jqx.pdfExport.orientation !== \"portrait\") {\n                h = 792;\n              }\n\n              break;\n\n            case \"a3\":\n              var h = 841;\n\n              if (a.jqx.pdfExport.orientation !== \"portrait\") {\n                h = 1190;\n              }\n\n              break;\n\n            case \"a4\":\n              var h = 595;\n\n              if (a.jqx.pdfExport.orientation !== \"portrait\") {\n                h = 842;\n              }\n\n              break;\n\n            case \"a5\":\n              var h = 420;\n\n              if (a.jqx.pdfExport.orientation !== \"portrait\") {\n                h = 595;\n              }\n\n              break;\n          }\n\n          var j = a(d).width();\n          var o = j * 72 / 96;\n\n          if (o >= h - 20) {\n            o = h - 20;\n          }\n\n          var p;\n\n          try {\n            var p = new window.pdfDataExport(a.jqx.pdfExport.orientation, \"pt\", a.jqx.pdfExport.paperSize);\n          } catch (m) {\n            var p = new window.jqxPdfDataExport(a.jqx.pdfExport.orientation, \"pt\", a.jqx.pdfExport.paperSize);\n          }\n\n          p.addImage(g, \"JPEG\", 10, 10, o, 0);\n          p.save(f);\n          return;\n        }\n\n        g = g.replace(\"data:image/\" + n + \";base64,\", \"\");\n\n        if (i) {\n          a.ajax({\n            dataType: \"string\",\n            url: q,\n            type: \"POST\",\n            data: {\n              content: g,\n              fname: f\n            },\n            async: false,\n            success: function success(t, e, u) {\n              s = true;\n            },\n            error: function error(t, e, u) {\n              s = false;\n            }\n          });\n        } else {\n          var c = document.createElement(\"form\");\n          c.method = \"POST\";\n          c.action = q;\n          c.style.display = \"none\";\n          document.body.appendChild(c);\n          var r = document.createElement(\"input\");\n          r.name = \"fname\";\n          r.value = f;\n          r.style.display = \"none\";\n          var b = document.createElement(\"input\");\n          b.name = \"content\";\n          b.value = g;\n          b.style.display = \"none\";\n          c.appendChild(r);\n          c.appendChild(b);\n          c.submit();\n          document.body.removeChild(c);\n          s = true;\n        }\n      }\n    } catch (l) {\n      s = false;\n    }\n\n    return s;\n  };\n})(jqxBaseFramework);\n\n(function (a) {\n  window.jqxPlot = function () {};\n\n  window.jqxPlot.prototype = {\n    get: function get(d, b, c) {\n      return c !== undefined ? d[b][c] : d[b];\n    },\n    min: function min(f, d) {\n      var c = NaN;\n\n      for (var b = 0; b < f.length; b++) {\n        var e = this.get(f, b, d);\n\n        if (isNaN(c) || e < c) {\n          c = e;\n        }\n      }\n\n      return c;\n    },\n    max: function max(f, d) {\n      var b = NaN;\n\n      for (var c = 0; c < f.length; c++) {\n        var e = this.get(f, c, d);\n\n        if (isNaN(b) || e > b) {\n          b = e;\n        }\n      }\n\n      return b;\n    },\n    sum: function sum(f, c) {\n      var d = 0;\n\n      for (var b = 0; b < f.length; b++) {\n        var e = this.get(f, b, c);\n\n        if (!isNaN(e)) {\n          d += e;\n        }\n      }\n\n      return d;\n    },\n    count: function count(f, c) {\n      var d = 0;\n\n      for (var b = 0; b < f.length; b++) {\n        var e = this.get(f, b, c);\n\n        if (!isNaN(e)) {\n          d++;\n        }\n      }\n\n      return d;\n    },\n    avg: function avg(c, b) {\n      return this.sum(c, b) / Math.max(1, this.count(c, b));\n    },\n    filter: function filter(e, d) {\n      if (!d) {\n        return e;\n      }\n\n      var b = [];\n\n      for (var c = 0; c < e.length; c++) {\n        if (d(e[c])) {\n          b.push(e[c]);\n        }\n      }\n\n      return b;\n    },\n    scale: function scale(d, i, j, g) {\n      if (isNaN(d)) {\n        return NaN;\n      }\n\n      if (d < Math.min(i.min, i.max) || d > Math.max(i.min, i.max)) {\n        if (!g || g.ignore_range !== true) {\n          return NaN;\n        }\n      }\n\n      var n = NaN;\n      var l = 1;\n\n      if (i.type === undefined || i.type != \"logarithmic\") {\n        var k = Math.abs(i.max - i.min);\n\n        if (!k) {\n          k = 1;\n        }\n\n        l = Math.abs(d - Math.min(i.min, i.max)) / k;\n      } else {\n        if (i.type === \"logarithmic\") {\n          var e = i.base;\n\n          if (isNaN(e)) {\n            e = 10;\n          }\n\n          var h = Math.min(i.min, i.max);\n\n          if (h <= 0) {\n            h = 1;\n          }\n\n          var m = Math.max(i.min, i.max);\n\n          if (m <= 0) {\n            m = 1;\n          }\n\n          var f = a.jqx.log(m, e);\n          m = Math.pow(e, f);\n          var c = a.jqx.log(h, e);\n          h = Math.pow(e, c);\n          var b = a.jqx.log(d, e);\n          l = Math.abs(b - c) / (f - c);\n        }\n      }\n\n      if (j.type === \"logarithmic\") {\n        var e = j.base;\n\n        if (isNaN(e)) {\n          e = 10;\n        }\n\n        var f = a.jqx.log(j.max, e);\n        var c = a.jqx.log(j.min, e);\n\n        if (j.flip) {\n          l = 1 - l;\n        }\n\n        var b = Math.min(c, f) + l * Math.abs(f - c);\n        n = Math.pow(e, b);\n      } else {\n        n = Math.min(j.min, j.max) + l * Math.abs(j.max - j.min);\n\n        if (j.flip) {\n          n = Math.max(j.min, j.max) - n + j.min;\n        }\n      }\n\n      return n;\n    },\n    axis: function axis(o, p, k) {\n      if (k <= 1) {\n        return [p, o];\n      }\n\n      var f = o;\n      var h = p;\n\n      if (isNaN(k) || k < 2) {\n        k = 2;\n      }\n\n      var b = 0;\n\n      while (Math.round(o) != o && Math.round(p) != p && b < 10) {\n        o *= 10;\n        p *= 10;\n        b++;\n      }\n\n      var l = (p - o) / k;\n\n      while (b < 10 && Math.round(l) != l) {\n        o *= 10;\n        p *= 10;\n        l *= 10;\n        b++;\n      }\n\n      var t = [1, 2, 5];\n      var g = 0;\n      var q = 0;\n\n      while (true) {\n        var m = q % t.length;\n        var e = Math.floor(q / t.length);\n        var n = Math.pow(10, e) * t[m];\n        m = (q + 1) % t.length;\n        e = Math.floor((q + 1) / t.length);\n        var j = Math.pow(10, e) * t[m];\n\n        if (l >= n && l < j) {\n          break;\n        }\n\n        q++;\n      }\n\n      var d = j;\n      var r = [];\n\n      var s = a.jqx._rnd(o, d, false);\n\n      var c = b <= 0 ? 1 : Math.pow(10, b);\n\n      while (s < p + d) {\n        r.push(s / c);\n        s += d;\n      }\n\n      return r;\n    }\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}