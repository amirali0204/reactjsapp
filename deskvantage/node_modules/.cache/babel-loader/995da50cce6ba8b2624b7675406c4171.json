{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVDataGrid.tsx\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { griddata } from \"./beverages\";\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport { dvGridColumns, dvGridDataFields } from \"../DVComponents/ComponentData/GridList/index\";\nimport JqxWindow from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxwindow';\n\nclass DVDataGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myGrid = React.createRef();\n    this.myGridOnRowSelect = this.myGridOnRowSelect.bind(this);\n\n    const rendertoolbar = statusbar => {\n      const style = {\n        float: 'left',\n        marginLeft: '5px'\n      };\n      const buttonsContainer = React.createElement(\"div\", {\n        style: {\n          overflow: 'hidden',\n          position: 'relative',\n          margin: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: 'PreviewButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'deleteButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'EditButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'addButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      ReactDOM.render(buttonsContainer, statusbar[0]);\n    };\n\n    var rendertoolbarflag = true;\n    const source = {\n      datafields: dvGridDataFields[this.props.menuselected],\n      datatype: 'json',\n      id: 'id',\n      pagesize: 15,\n      localdata: griddata,\n      sortcolumn: 'name',\n      sortdirection: 'asc'\n    };\n    this.state = {\n      columns: dvGridColumns[this.props.menuselected],\n      source: new jqx.dataAdapter(source),\n      rendertoolbar,\n      rendertoolbarflag\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.createButtons();\n    });\n  }\n\n  render() {\n    return React.createElement(JqxGrid, {\n      theme: 'bootstrap',\n      sortable: true,\n      altrows: true,\n      showtoolbar: this.state.rendertoolbarflag,\n      rendertoolbar: this.state.rendertoolbar,\n      pageable: true,\n      onSort: this.myGridOnSort,\n      filterable: true,\n      autoshowcolumnsmenubutton: true,\n      width: '100%',\n      height: window.innerHeight - 245,\n      ref: this.myGrid,\n      onRowselect: this.myGridOnRowSelect,\n      selectionmode: 'singlerow',\n      showcolumnlines: false,\n      showcolumnheaderlines: false,\n      source: this.state.source,\n      columns: this.state.columns,\n      columnsresize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(JqxWindow, {\n      ref: this.myWindow,\n      width: 250,\n      height: 230,\n      resizable: false,\n      isModal: false,\n      autoOpen: false,\n      modalOpacity: '0.01',\n      position: {\n        x: 68,\n        y: 368\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Edit\")));\n  }\n\n  createButtons() {\n    const deleteButtonClick = event => {};\n\n    const EditButtonClick = event => {};\n\n    const PreviewButtonClick = event => {};\n\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: PreviewButtonClick,\n      width: 35,\n      height: 25,\n      value: '',\n      imgSrc: './../Assets/folder-preview.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), document.getElementById('PreviewButton'));\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: EditButtonClick,\n      width: 35,\n      height: 25,\n      value: '',\n      imgSrc: './../Assets/YEdit.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), document.getElementById('EditButton'));\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: deleteButtonClick,\n      width: 35,\n      height: 25,\n      value: '',\n      imgSrc: './../Assets/trash.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), document.getElementById('deleteButton'));\n  }\n\n  myGridOnSort(event) {}\n\n  myGridOnRowSelect(event) {// alert(event.args.rowindex);\n    //     this.setState({rendertoolbarflag: !this.state.rendertoolbarflag});\n    //     this.myGrid.current.refresh();\n  }\n\n}\n\nexport default DVDataGrid;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVDataGrid.tsx"],"names":["React","ReactDOM","JqxGrid","jqx","griddata","JqxButton","dvGridColumns","dvGridDataFields","JqxWindow","DVDataGrid","Component","constructor","props","myGrid","createRef","myGridOnRowSelect","bind","rendertoolbar","statusbar","style","float","marginLeft","buttonsContainer","overflow","position","margin","render","rendertoolbarflag","source","datafields","menuselected","datatype","id","pagesize","localdata","sortcolumn","sortdirection","state","columns","dataAdapter","componentDidMount","setTimeout","createButtons","myGridOnSort","window","innerHeight","myWindow","x","y","deleteButtonClick","event","EditButtonClick","PreviewButtonClick","document","getElementById"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport {griddata} from \"./beverages\";\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport {dvGridColumns,dvGridDataFields} from \"../DVComponents/ComponentData/GridList/index\"\nimport JqxWindow from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxwindow';\n\nclass DVDataGrid extends React.Component<{}&any, IGridProps&any> {\n    private myGrid = React.createRef<JqxGrid>();\n    constructor(props) {\n        super(props);\n        this.myGridOnRowSelect = this.myGridOnRowSelect.bind(this);\n        const rendertoolbar = (statusbar: any): void => {\n            const style: React.CSSProperties = { float: 'left', marginLeft: '5px' };\n            const buttonsContainer = (\n                <div style={{ overflow: 'hidden', position: 'relative', margin: '5px' }}>\n                    <div id={'PreviewButton'} style={style} />\n                    <div id={'deleteButton'} style={style} />\n                    <div id={'EditButton'} style={style} />\n                    <div id={'addButton'} style={style} />\n                </div>\n            );\n            ReactDOM.render(buttonsContainer, statusbar[0]);\n        }\n        var rendertoolbarflag = true;\n        const source: any =\n        {\n            datafields: dvGridDataFields[this.props.menuselected],\n            datatype: 'json',\n            id: 'id',\n            pagesize: 15,\n            localdata: griddata,\n            sortcolumn: 'name',\n            sortdirection: 'asc'\n        };\n        this.state = {\n            columns: dvGridColumns[this.props.menuselected],\n            source: new jqx.dataAdapter(source),\n            rendertoolbar,\n            rendertoolbarflag,\n        }\n    }\n    public componentDidMount() {\n        setTimeout(() => {\n            this.createButtons();\n        });    \n    }\n \n    public render() {\n        return (\n            <JqxGrid theme={'bootstrap'} sortable={true} altrows={true}  showtoolbar={this.state.rendertoolbarflag}\n            rendertoolbar={this.state.rendertoolbar} pageable={true}\n            onSort={this.myGridOnSort} filterable={true} autoshowcolumnsmenubutton={true}\n                width={'100%'} height={window.innerHeight-245} ref={this.myGrid}\n                onRowselect={this.myGridOnRowSelect} selectionmode={'singlerow'} showcolumnlines={false}\n                showcolumnheaderlines={false}\n                source={this.state.source} columns={this.state.columns} columnsresize={true} >\n                    <JqxWindow ref={this.myWindow} width={250} height={230} resizable={false}\n                    isModal={false} autoOpen={false} modalOpacity={'0.01'} position={{ x: 68, y: 368 }}>\n                    <div>Edit</div>\n                    </JqxWindow>\n\n\n                </JqxGrid>\n        );\n    }\n    private createButtons(): void {\n       \n        const deleteButtonClick = (event?: any) => {\n\n        };\n        const EditButtonClick = (event?: any) => {\n        };\n        const PreviewButtonClick = (event?: any) => {\n\n        };\n        ReactDOM.render(\n            <JqxButton onClick={PreviewButtonClick}\n                width={35} height={25} value={''} imgSrc={'./../Assets/folder-preview.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('PreviewButton')\n        );\n        ReactDOM.render(\n            <JqxButton onClick={EditButtonClick}\n                width={35} height={25} value={''} imgSrc={'./../Assets/YEdit.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('EditButton')\n        );\n        ReactDOM.render(\n            <JqxButton onClick={deleteButtonClick}\n                width={35} height={25} value={''} imgSrc={'./../Assets/trash.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('deleteButton')\n        );\n        \n        \n    }\n    private myGridOnSort(event: any): void {\n    }\n    private myGridOnRowSelect(event: any): void {\n       // alert(event.args.rowindex);\n   //     this.setState({rendertoolbarflag: !this.state.rendertoolbarflag});\n   //     this.myGrid.current.refresh();\n    };\n}\nexport default (DVDataGrid)"]},"metadata":{},"sourceType":"module"}