{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar __1 = require(\"../../\");\n\nexports.FlowChart = function (props) {\n  var _a = React.useState({\n    width: 0,\n    height: 0\n  }),\n      canvasSize = _a[0],\n      setCanvasSize = _a[1];\n\n  var chart = props.chart,\n      _b = props.callbacks,\n      onDragNode = _b.onDragNode,\n      onDragCanvas = _b.onDragCanvas,\n      onCanvasDrop = _b.onCanvasDrop,\n      onLinkStart = _b.onLinkStart,\n      onLinkMove = _b.onLinkMove,\n      onLinkComplete = _b.onLinkComplete,\n      onLinkCancel = _b.onLinkCancel,\n      onPortPositionChange = _b.onPortPositionChange,\n      onLinkMouseEnter = _b.onLinkMouseEnter,\n      onLinkMouseLeave = _b.onLinkMouseLeave,\n      onLinkClick = _b.onLinkClick,\n      onCanvasClick = _b.onCanvasClick,\n      onDeleteKey = _b.onDeleteKey,\n      onNodeClick = _b.onNodeClick,\n      onNodeSizeChange = _b.onNodeSizeChange,\n      _c = props.Components,\n      _d = _c === void 0 ? {} : _c,\n      _e = _d.CanvasOuter,\n      CanvasOuter = _e === void 0 ? __1.CanvasOuterDefault : _e,\n      _f = _d.CanvasInner,\n      CanvasInner = _f === void 0 ? __1.CanvasInnerDefault : _f,\n      _g = _d.NodeInner,\n      NodeInner = _g === void 0 ? __1.NodeInnerDefault : _g,\n      _h = _d.Ports,\n      Ports = _h === void 0 ? __1.PortsDefault : _h,\n      _j = _d.Port,\n      Port = _j === void 0 ? __1.PortDefault : _j,\n      _k = _d.Node,\n      Node = _k === void 0 ? __1.NodeDefault : _k,\n      _l = _d.Link,\n      Link = _l === void 0 ? __1.LinkDefault : _l,\n      _m = props.config,\n      config = _m === void 0 ? {} : _m;\n\n  var links = chart.links,\n      nodes = chart.nodes,\n      selected = chart.selected,\n      hovered = chart.hovered,\n      offset = chart.offset;\n  var canvasCallbacks = {\n    onDragCanvas: onDragCanvas,\n    onCanvasClick: onCanvasClick,\n    onDeleteKey: onDeleteKey,\n    onCanvasDrop: onCanvasDrop\n  };\n  var linkCallbacks = {\n    onLinkMouseEnter: onLinkMouseEnter,\n    onLinkMouseLeave: onLinkMouseLeave,\n    onLinkClick: onLinkClick\n  };\n  var nodeCallbacks = {\n    onDragNode: onDragNode,\n    onNodeClick: onNodeClick,\n    onNodeSizeChange: onNodeSizeChange\n  };\n  var portCallbacks = {\n    onPortPositionChange: onPortPositionChange,\n    onLinkStart: onLinkStart,\n    onLinkMove: onLinkMove,\n    onLinkComplete: onLinkComplete,\n    onLinkCancel: onLinkCancel\n  };\n  var nodesInView = Object.keys(nodes).filter(function (nodeId) {\n    // TODO: define this in chart?\n    var defaultNodeSize = {\n      width: 500,\n      height: 500\n    };\n    var _a = nodes[nodeId].position,\n        x = _a.x,\n        y = _a.y;\n    var size = nodes[nodeId].size || defaultNodeSize;\n    return x + offset.x + size.width > 0 && x + offset.x < canvasSize.width && y + offset.y + size.height > 0 && y + offset.y < canvasSize.height;\n  });\n  var linksInView = Object.keys(links).filter(function (linkId) {\n    var from = links[linkId].from;\n    var to = links[linkId].to;\n    return !to.nodeId || nodesInView.indexOf(from.nodeId) !== -1 || nodesInView.indexOf(to.nodeId) !== -1;\n  });\n  return React.createElement(__1.CanvasWrapper, __assign({\n    config: config,\n    position: chart.offset,\n    ComponentInner: CanvasInner,\n    ComponentOuter: CanvasOuter,\n    onSizeChange: function (width, height) {\n      return setCanvasSize({\n        width: width,\n        height: height\n      });\n    }\n  }, canvasCallbacks), linksInView.map(function (linkId) {\n    var isSelected = !config.readonly && selected.type === 'link' && selected.id === linkId;\n    var isHovered = !config.readonly && hovered.type === 'link' && hovered.id === linkId;\n    var fromNodeId = links[linkId].from.nodeId;\n    var toNodeId = links[linkId].to.nodeId;\n    return React.createElement(__1.LinkWrapper, __assign({\n      config: config,\n      key: linkId,\n      link: links[linkId],\n      Component: Link,\n      isSelected: isSelected,\n      isHovered: isHovered,\n      fromNode: nodes[fromNodeId],\n      toNode: toNodeId ? nodes[toNodeId] : undefined\n    }, linkCallbacks));\n  }), nodesInView.map(function (nodeId) {\n    var isSelected = selected.type === 'node' && selected.id === nodeId;\n    var selectedLink = getSelectedLinkForNode(selected, nodeId, links);\n    var hoveredLink = getSelectedLinkForNode(hovered, nodeId, links);\n    return React.createElement(__1.NodeWrapper, __assign({\n      config: config,\n      key: nodeId,\n      Component: Node,\n      node: nodes[nodeId],\n      offset: chart.offset,\n      isSelected: isSelected,\n      selected: selectedLink ? selected : undefined,\n      hovered: hoveredLink ? hovered : undefined,\n      selectedLink: selectedLink,\n      hoveredLink: hoveredLink,\n      NodeInner: NodeInner,\n      Ports: Ports,\n      Port: Port\n    }, nodeCallbacks, portCallbacks));\n  }));\n};\n\nvar getSelectedLinkForNode = function (selected, nodeId, links) {\n  var link = selected.type === 'link' && selected.id ? links[selected.id] : undefined;\n\n  if (link && (link.from.nodeId === nodeId || link.to.nodeId === nodeId)) {\n    return link;\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["../../../../src/components/FlowChart/FlowChart.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar __1 = require(\"../../\");\nexports.FlowChart = function (props) {\n    var _a = React.useState({ width: 0, height: 0 }), canvasSize = _a[0], setCanvasSize = _a[1];\n    var chart = props.chart, _b = props.callbacks, onDragNode = _b.onDragNode, onDragCanvas = _b.onDragCanvas, onCanvasDrop = _b.onCanvasDrop, onLinkStart = _b.onLinkStart, onLinkMove = _b.onLinkMove, onLinkComplete = _b.onLinkComplete, onLinkCancel = _b.onLinkCancel, onPortPositionChange = _b.onPortPositionChange, onLinkMouseEnter = _b.onLinkMouseEnter, onLinkMouseLeave = _b.onLinkMouseLeave, onLinkClick = _b.onLinkClick, onCanvasClick = _b.onCanvasClick, onDeleteKey = _b.onDeleteKey, onNodeClick = _b.onNodeClick, onNodeSizeChange = _b.onNodeSizeChange, _c = props.Components, _d = _c === void 0 ? {} : _c, _e = _d.CanvasOuter, CanvasOuter = _e === void 0 ? __1.CanvasOuterDefault : _e, _f = _d.CanvasInner, CanvasInner = _f === void 0 ? __1.CanvasInnerDefault : _f, _g = _d.NodeInner, NodeInner = _g === void 0 ? __1.NodeInnerDefault : _g, _h = _d.Ports, Ports = _h === void 0 ? __1.PortsDefault : _h, _j = _d.Port, Port = _j === void 0 ? __1.PortDefault : _j, _k = _d.Node, Node = _k === void 0 ? __1.NodeDefault : _k, _l = _d.Link, Link = _l === void 0 ? __1.LinkDefault : _l, _m = props.config, config = _m === void 0 ? {} : _m;\n    var links = chart.links, nodes = chart.nodes, selected = chart.selected, hovered = chart.hovered, offset = chart.offset;\n    var canvasCallbacks = { onDragCanvas: onDragCanvas, onCanvasClick: onCanvasClick, onDeleteKey: onDeleteKey, onCanvasDrop: onCanvasDrop };\n    var linkCallbacks = { onLinkMouseEnter: onLinkMouseEnter, onLinkMouseLeave: onLinkMouseLeave, onLinkClick: onLinkClick };\n    var nodeCallbacks = { onDragNode: onDragNode, onNodeClick: onNodeClick, onNodeSizeChange: onNodeSizeChange };\n    var portCallbacks = { onPortPositionChange: onPortPositionChange, onLinkStart: onLinkStart, onLinkMove: onLinkMove, onLinkComplete: onLinkComplete, onLinkCancel: onLinkCancel };\n    var nodesInView = Object.keys(nodes).filter(function (nodeId) {\n        // TODO: define this in chart?\n        var defaultNodeSize = { width: 500, height: 500 };\n        var _a = nodes[nodeId].position, x = _a.x, y = _a.y;\n        var size = nodes[nodeId].size || defaultNodeSize;\n        return x + offset.x + size.width > 0 && x + offset.x < canvasSize.width &&\n            y + offset.y + size.height > 0 && y + offset.y < canvasSize.height;\n    });\n    var linksInView = Object.keys(links).filter(function (linkId) {\n        var from = links[linkId].from;\n        var to = links[linkId].to;\n        return (!to.nodeId ||\n            nodesInView.indexOf(from.nodeId) !== -1 ||\n            nodesInView.indexOf(to.nodeId) !== -1);\n    });\n    return (React.createElement(__1.CanvasWrapper, __assign({ config: config, position: chart.offset, ComponentInner: CanvasInner, ComponentOuter: CanvasOuter, onSizeChange: function (width, height) { return setCanvasSize({ width: width, height: height }); } }, canvasCallbacks),\n        linksInView.map(function (linkId) {\n            var isSelected = !config.readonly && selected.type === 'link' && selected.id === linkId;\n            var isHovered = !config.readonly && hovered.type === 'link' && hovered.id === linkId;\n            var fromNodeId = links[linkId].from.nodeId;\n            var toNodeId = links[linkId].to.nodeId;\n            return (React.createElement(__1.LinkWrapper, __assign({ config: config, key: linkId, link: links[linkId], Component: Link, isSelected: isSelected, isHovered: isHovered, fromNode: nodes[fromNodeId], toNode: toNodeId ? nodes[toNodeId] : undefined }, linkCallbacks)));\n        }),\n        nodesInView.map(function (nodeId) {\n            var isSelected = selected.type === 'node' && selected.id === nodeId;\n            var selectedLink = getSelectedLinkForNode(selected, nodeId, links);\n            var hoveredLink = getSelectedLinkForNode(hovered, nodeId, links);\n            return (React.createElement(__1.NodeWrapper, __assign({ config: config, key: nodeId, Component: Node, node: nodes[nodeId], offset: chart.offset, isSelected: isSelected, selected: selectedLink ? selected : undefined, hovered: hoveredLink ? hovered : undefined, selectedLink: selectedLink, hoveredLink: hoveredLink, NodeInner: NodeInner, Ports: Ports, Port: Port }, nodeCallbacks, portCallbacks)));\n        })));\n};\nvar getSelectedLinkForNode = function (selected, nodeId, links) {\n    var link = selected.type === 'link' && selected.id ? links[selected.id] : undefined;\n    if (link && (link.from.nodeId === nodeId || link.to.nodeId === nodeId)) {\n        return link;\n    }\n    return undefined;\n};\n//# sourceMappingURL=FlowChart.js.map"]},"metadata":{},"sourceType":"script"}