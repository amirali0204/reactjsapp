{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVDataGrid.tsx\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { griddata } from \"./beverages\";\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport { dvGridColumns, dvGridDataFields } from \"../DVComponents/ComponentData/GridList/index\";\n\nclass DVDataGrid extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const rendertoolbar = statusbar => {\n      const style = {\n        float: 'right',\n        marginLeft: '5px'\n      };\n      const buttonsContainer = React.createElement(\"div\", {\n        style: {\n          overflow: 'hidden',\n          position: 'relative',\n          margin: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: 'PreviewButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'deleteButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'EditButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: 'addButton',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n      ReactDOM.render(buttonsContainer, statusbar[0]);\n    };\n\n    const source = {\n      datafields: dvGridDataFields[this.props.menuselected],\n      datatype: 'json',\n      id: 'id',\n      pagesize: 15,\n      localdata: griddata,\n      sortcolumn: 'name',\n      sortdirection: 'asc'\n    };\n    this.state = {\n      columns: dvGridColumns.Order,\n      source: new jqx.dataAdapter(source),\n      rendertoolbar\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.createButtons();\n    });\n  }\n\n  render() {\n    return React.createElement(JqxGrid, {\n      theme: 'bootstrap',\n      sortable: true,\n      altrows: true,\n      showtoolbar: true,\n      rendertoolbar: this.state.rendertoolbar,\n      pageable: true,\n      onSort: this.myGridOnSort,\n      filterable: true,\n      selectionmode: 'checkbox',\n      width: '100%',\n      height: window.innerHeight - 245,\n      source: this.state.source,\n      columns: this.state.columns,\n      columnsresize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n  createButtons() {\n    const addButtonClick = event => {};\n\n    const deleteButtonClick = event => {};\n\n    const EditButtonClick = event => {};\n\n    const PreviewButtonClick = event => {};\n\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: addButtonClick,\n      width: 105,\n      height: 25,\n      value: 'Create New',\n      imgSrc: './../Assets/BNewCreate.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), document.getElementById('addButton'));\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: EditButtonClick,\n      width: 105,\n      height: 25,\n      value: 'Edit Record',\n      imgSrc: './../Assets/YEdit.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), document.getElementById('EditButton'));\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: deleteButtonClick,\n      width: 130,\n      height: 25,\n      value: 'Delete Selected',\n      imgSrc: './../Assets/Delete.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), document.getElementById('deleteButton'));\n    ReactDOM.render(React.createElement(JqxButton, {\n      onClick: PreviewButtonClick,\n      width: 100,\n      height: 25,\n      value: 'Preview',\n      imgSrc: './../Assets/BPreview.png',\n      imgPosition: 'center',\n      textPosition: 'center',\n      textImageRelation: 'imageBeforeText',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), document.getElementById('PreviewButton'));\n  }\n\n  myGridOnSort(event) {}\n\n}\n\nconst mapStateToProps = state => {\n  if (state.rootReducer !== null) {\n    return {\n      state: state,\n      menuselected: state.rootReducer.menuselected\n    };\n  } else {\n    return {\n      state: state,\n      menuselected: \"Staff\"\n    };\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DVDataGrid);","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVDataGrid.tsx"],"names":["React","ReactDOM","connect","JqxGrid","jqx","griddata","JqxButton","dvGridColumns","dvGridDataFields","DVDataGrid","PureComponent","constructor","props","rendertoolbar","statusbar","style","float","marginLeft","buttonsContainer","overflow","position","margin","render","source","datafields","menuselected","datatype","id","pagesize","localdata","sortcolumn","sortdirection","state","columns","Order","dataAdapter","componentDidMount","setTimeout","createButtons","myGridOnSort","window","innerHeight","addButtonClick","event","deleteButtonClick","EditButtonClick","PreviewButtonClick","document","getElementById","mapStateToProps","rootReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { connect } from 'react-redux'\n\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport {griddata} from \"./beverages\";\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport {dvGridColumns,dvGridDataFields} from \"../DVComponents/ComponentData/GridList/index\"\nclass DVDataGrid extends React.PureComponent<{}&any, IGridProps> {\n    constructor(props: {}) {\n        super(props);\n        const rendertoolbar = (statusbar: any): void => {\n            const style: React.CSSProperties = { float: 'right', marginLeft: '5px' };\n            const buttonsContainer = (\n                <div style={{ overflow: 'hidden', position: 'relative', margin: '5px' }}>\n                    <div id={'PreviewButton'} style={style} />\n                    <div id={'deleteButton'} style={style} />\n                    <div id={'EditButton'} style={style} />\n                    <div id={'addButton'} style={style} />\n                </div>\n            );\n            ReactDOM.render(buttonsContainer, statusbar[0]);\n        }\n        const source: any =\n        {\n            datafields: dvGridDataFields[this.props.menuselected],\n            datatype: 'json',\n            id: 'id',\n            pagesize: 15,\n            localdata: griddata,\n            sortcolumn: 'name',\n            sortdirection: 'asc'\n        };\n        this.state = {\n            columns: dvGridColumns.Order,\n            source: new jqx.dataAdapter(source),\n            rendertoolbar,\n        }\n    }\n    public componentDidMount() {\n        setTimeout(() => {\n            this.createButtons();\n        });      \n    }\n \n    public render() {\n        return (\n            <JqxGrid theme={'bootstrap'} sortable={true} altrows={true}  showtoolbar={true}\n            rendertoolbar={this.state.rendertoolbar} pageable={true}\n            onSort={this.myGridOnSort} filterable={true} selectionmode={'checkbox'}\n                width={'100%'} height={window.innerHeight-245} \n                source={this.state.source} columns={this.state.columns} columnsresize={true} />\n        );\n    }\n    private createButtons(): void {\n        const addButtonClick = (event?: any) => {\n\n        };\n        const deleteButtonClick = (event?: any) => {\n\n        };\n        const EditButtonClick = (event?: any) => {\n        };\n        const PreviewButtonClick = (event?: any) => {\n\n        };\n        ReactDOM.render(\n            <JqxButton onClick={addButtonClick}\n                width={105} height={25} value={'Create New'} imgSrc={'./../Assets/BNewCreate.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('addButton')\n        );\n        ReactDOM.render(\n            <JqxButton onClick={EditButtonClick}\n                width={105} height={25} value={'Edit Record'} imgSrc={'./../Assets/YEdit.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('EditButton')\n        );\n        ReactDOM.render(\n            <JqxButton onClick={deleteButtonClick}\n                width={130} height={25} value={'Delete Selected'} imgSrc={'./../Assets/Delete.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('deleteButton')\n        );\n        \n        ReactDOM.render(\n            <JqxButton onClick={PreviewButtonClick}\n                width={100} height={25} value={'Preview'} imgSrc={'./../Assets/BPreview.png'}\n                imgPosition={'center'} textPosition={'center'} textImageRelation={'imageBeforeText'} />,\n            document.getElementById('PreviewButton')\n        );\n    }\n    private myGridOnSort(event: any): void {\n    }\n\n}\nconst mapStateToProps = state => {\n    if(state.rootReducer !== null){\n        return {\n            state: state,\n            menuselected: state.rootReducer.menuselected,\n        }\n    }else{\n        return {\n            state: state,\n            menuselected: \"Staff\",\n        }\n    }\n  }\n  const mapDispatchToProps = dispatch => ({\n  })\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(DVDataGrid)"]},"metadata":{},"sourceType":"module"}