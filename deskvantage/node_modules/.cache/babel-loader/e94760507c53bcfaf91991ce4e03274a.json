{"ast":null,"code":"/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxPasswordInput\", \"\", {});\n  a.extend(a.jqx._jqxPasswordInput.prototype, {\n    defineInstance: function defineInstance() {\n      var b = {\n        width: null,\n        height: null,\n        disabled: false,\n        rtl: false,\n        placeHolder: null,\n        showStrength: false,\n        showStrengthPosition: \"right\",\n        maxLength: null,\n        minLength: null,\n        showPasswordIcon: true,\n        strengthTypeRenderer: null,\n        passwordStrength: null,\n        changeType: null,\n        hint: true,\n        localization: {\n          passwordStrengthString: \"Password strength\",\n          tooShort: \"Too short\",\n          weak: \"Weak\",\n          fair: \"Fair\",\n          good: \"Good\",\n          strong: \"Strong\",\n          showPasswordString: \"Show Password\"\n        },\n        strengthColors: {\n          tooShort: \"rgb(170, 0, 51)\",\n          weak: \"rgb(170, 0, 51)\",\n          fair: \"rgb(255, 204, 51)\",\n          good: \"rgb(45, 152, 243)\",\n          strong: \"rgb(118, 194, 97)\"\n        }\n      };\n\n      if (this === a.jqx._jqxPasswordInput.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function createInstance() {\n      var b = this;\n      b._inDOM = document.body.contains(b.element);\n      b.render();\n    },\n    render: function render() {\n      var e = this;\n      var d = a.jqx.browser.browser;\n      var g = a.jqx.browser.version;\n      this._browserCheck = d != \"msie\" || g != \"7.0\" && g != \"8.0\";\n      this.widgetID = e.element.id;\n      var b = \"Invalid input type. Please set the type attribute of the input element to password.\";\n\n      if (this.element.getAttribute(\"type\") != \"password\") {\n        throw b;\n      }\n\n      this.input = this.element;\n\n      if (e.isMaterialized()) {\n        var j = a(\"<div></div>\");\n        j.addClass(e.toThemeProperty(\"jqx-input-group\"));\n        this.host.after(j);\n        var i = this.element;\n        var c = this.host.data();\n        j.append(i);\n        var h = a(\"<label></label\");\n\n        if (this.hint) {\n          h[0].innerHTML = this.placeHolder;\n        }\n\n        h.addClass(e.toThemeProperty(\"jqx-input-label\"));\n        j.append(h);\n        var f = a(\"<span></span>\");\n        j.append(f);\n        f.addClass(e.toThemeProperty(\"jqx-input-bar\"));\n        j[0].id = this.element.id;\n        this.element.removeAttribute(\"id\");\n        j[0].style.cssText = this.element.style.cssText;\n        e.input = e.element;\n        this.element.style.cssText = \"\";\n        this.bar = f;\n        this.label = h;\n        this.host = j;\n        this.element = j[0];\n        this.host.data(c);\n        var e = this;\n\n        if (e.template) {\n          e.bar.addClass(e.toThemeProperty(\"jqx-\" + e.template));\n          e.label.addClass(e.toThemeProperty(\"jqx-\" + e.template));\n        }\n      }\n\n      e._hidden = true;\n\n      e._setTheme();\n\n      e._setAttributes();\n\n      e._showPassword();\n\n      e._showStrength();\n\n      a.jqx.utilities.resize(this.host, function () {\n        if (!e._inDOM) {\n          var k = e.element.parentNode;\n\n          if (e.element.nextSibling) {\n            k.insertBefore(e.icon, e.element.nextSibling);\n          } else {\n            k.appendChild(e.icon);\n          }\n\n          e._inDOM = true;\n          return;\n        }\n\n        if (e.element === document.activeElement || e.isMaterialized()) {\n          e._positionIcon();\n\n          if (e.showStrength) {\n            e.host.jqxTooltip(\"close\");\n          }\n        }\n      });\n    },\n    refresh: function refresh(c) {\n      var b = this;\n\n      if (c) {\n        return;\n      }\n\n      b.removeHandler(b.host, \"change.passwordinput\" + b.widgetID);\n      b.removeHandler(b.host, \"focus.passwordinput\" + b.widgetID);\n      b.removeHandler(b.host, \"blur.passwordinput\" + b.widgetID);\n      b.removeHandler(b.host, \"click.passwordinput\" + b.widgetID);\n      b.removeHandler(b.host, \"keyup.passwordinput\" + b.widgetID);\n      b.removeHandler(b.icon, \"mousedown.passwordinput\" + b.widgetID);\n      b.removeHandler(a(document), \"mouseup.passwordinput\" + b.widgetID);\n      b.removeHandler(a(document), \"mousedown.passwordinput\" + b.widgetID);\n\n      b._setAttributes();\n\n      b._setTheme();\n\n      b._showPassword();\n\n      b._showStrength();\n    },\n    val: function val(d) {\n      var c = this,\n          e = c.input.value,\n          b = \"placeholder\" in c.input;\n\n      if (a.isEmptyObject(d) && d !== \"\") {\n        if (!b && e === c.placeHolder) {\n          e = \"\";\n        }\n\n        return e;\n      } else {\n        if (b && d === e) {\n          return;\n        }\n\n        if (!b) {\n          if (d === \"\") {\n            if (e !== c.placeHolder) {\n              c.input.value = c.placeHolder;\n              c.input.setAttribute(\"type\", \"text\");\n            }\n\n            return;\n          } else {\n            c.input.setAttribute(\"type\", \"password\");\n          }\n        }\n\n        c.input.value = d;\n\n        if (b && c.isMaterialized()) {\n          c._refreshPlaceHolder();\n        }\n\n        if (c.showStrength === true) {\n          c._evaluateStrength();\n        }\n      }\n    },\n    propertyChangedHandler: function propertyChangedHandler(b, c, e, d) {\n      if (c === \"theme\") {\n        a.jqx.utilities.setTheme(e, d, b.host);\n        return;\n      }\n\n      if (c == \"disabled\") {\n        if (b.disabled) {\n          b.element.setAttribute(\"disabled\", \"disabled\");\n          b.element.className += \" \" + b.toThemeProperty(\"jqx-fill-state-disabled\");\n        } else {\n          b.host.removeAttr(\"disabled\");\n          b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-disabled\"));\n        }\n\n        return;\n      }\n\n      if (c == \"placeHolder\") {\n        if (this._browserCheck) {\n          if (\"placeholder\" in this.element) {\n            b.element.setAttribute(\"placeholder\", b.placeHolder);\n          } else {\n            if (b.input.value === \"\") {\n              b.input.setAttribute(\"type\", \"text\");\n              b.input.value = d;\n            } else {\n              if (b.input.value == e) {\n                b.input.value = d;\n              }\n            }\n          }\n        }\n      } else {\n        this.refresh();\n      }\n    },\n    resize: function resize(c, b) {\n      this.width = c;\n      this.height = b;\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = this.width;\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = this.width + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = this.height;\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = this.height + \"px\";\n        }\n      }\n    },\n    _setAttributes: function _setAttributes() {\n      var b = this;\n      var c = b.element;\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = this.width;\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = this.width + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = this.height;\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = this.height + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        this.element.style.height = this.height;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        this.element.style.width = this.width;\n      }\n\n      if (b.maxLength) {\n        c.setAttribute(\"maxlength\", b.maxLength);\n      }\n\n      if (b.minLength) {\n        c.setAttribute(\"minLength\", b.minLength);\n      }\n\n      if (b.placeHolder && b._browserCheck) {\n        if (\"placeholder\" in b.element) {\n          c.setAttribute(\"placeholder\", b.placeHolder);\n        } else {\n          if (c.value === \"\") {\n            c.setAttribute(\"type\", \"text\");\n            c.value = b.placeHolder;\n          }\n        }\n      }\n\n      if (b.disabled) {\n        c.setAttribute(\"disabled\", \"disabled\");\n        c.className += \" \" + this.toThemeProperty(\"jqx-fill-state-disabled\");\n      } else {\n        c.removeAttribute(\"disabled\");\n        b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n\n      var d = false;\n      b.addHandler(c, \"change.passwordinput\" + b.widgetID, function (e) {\n        if (!d) {\n          e.preventDefault();\n          e.stopPropagation();\n          d = true;\n\n          b._raiseEvent();\n\n          d = false;\n        }\n\n        b._refreshPlaceHolder();\n      });\n      b.addHandler(c, \"click.passwordinput\" + b.widgetID, function () {\n        if (b.showPasswordIcon && b.icon) {\n          b.icon.style.display = \"inline\";\n\n          b._positionIcon();\n        }\n      });\n      b.interval = null;\n      b.addHandler(c, \"keydown.passwordinput\" + b.widgetID, function () {\n        b.changeType = \"keyboard\";\n\n        if (b.showPasswordIcon && b.icon) {\n          if (b.interval) {\n            clearInterval(b.interval);\n          }\n\n          var e = 0;\n          b.interval = setInterval(function () {\n            if (b.icon.style.display != \"none\") {\n              b._positionIcon();\n\n              e++;\n\n              if (e > 5) {\n                clearInterval(b.interval);\n              }\n            } else {\n              clearInterval(b.interval);\n            }\n          }, 100);\n        }\n      });\n      b.addHandler(c, \"focus.passwordinput\" + b.widgetID, function () {\n        b._focused = true;\n        c.className += \" \" + b.toThemeProperty(\"jqx-fill-state-focus\");\n\n        if (b.placeHolder && b._browserCheck && !(\"placeholder\" in b.element) && c.value == b.placeHolder) {\n          c.value = \"\";\n\n          if (b._hidden) {\n            c.setAttribute(\"type\", \"password\");\n          }\n        }\n\n        if (b.val().length > 0) {\n          if (b.showStrength) {\n            var e = b.host.jqxTooltip(\"content\");\n\n            if (e) {\n              b.host.jqxTooltip(\"open\");\n            }\n          }\n        }\n\n        if (b.showPasswordIcon && b.icon) {\n          b.icon.style.display = \"inline\";\n\n          b._positionIcon();\n        }\n      });\n      b.addHandler(c, \"blur.passwordinput\" + b.widgetID, function () {\n        b._focused = false;\n        b.host.removeClass(b.toThemeProperty(\"jqx-fill-state-focus\"));\n\n        if (b.placeHolder && b._browserCheck && !(\"placeholder\" in b.input) && c.value === \"\") {\n          b.input.value = b.placeHolder;\n          b.input.setAttribute(\"type\", \"text\");\n        }\n\n        if (b.showPasswordIcon && b._browserCheck) {\n          if (b.rtl === false) {\n            b.host.removeClass(b.toThemeProperty(\"jqx-passwordinput-password-icon-ltr\"));\n          } else {\n            b.host.removeClass(b.toThemeProperty(\"jqx-passwordinput-password-icon-rtl\"));\n          }\n        }\n\n        if (b.showStrength) {\n          b.host.jqxTooltip(\"close\");\n        }\n\n        if (b.showPasswordIcon && b.icon) {\n          b.icon.style.display = \"none\";\n        }\n      });\n    },\n    _refreshPlaceHolder: function _refreshPlaceHolder() {\n      var b = this;\n\n      if (!b.isMaterialized()) {\n        if (\"placeholder\" in this.input && !(a.jqx.browser.msie && a.jqx.browser.version < 9)) {\n          b.input.setAttribute(\"placeHolder\", b.placeHolder);\n        } else {\n          if (b.input.value === \"\") {\n            b.input.value = b.placeHolder;\n          }\n        }\n      }\n\n      if (b.input.value !== \"\") {\n        b.element.setAttribute(\"hint\", true);\n      } else {\n        b.element.removeAttribute(\"hint\");\n      }\n\n      if (b.label) {\n        b.label.innerHTML = b.placeHolder;\n      }\n    },\n    destroy: function destroy() {\n      if (this.host.jqxTooltip) {\n        this.host.jqxTooltip(\"destroy\");\n      }\n\n      this.host.remove();\n    },\n    _setTheme: function _setTheme() {\n      var c = this,\n          b = \"jqx-widget jqx-widget-content jqx-input jqx-input-widget jqx-rc-all\";\n\n      if (c.rtl) {\n        b += \" jqx-rtl\";\n        c.element.style.direction = \"rtl\";\n      } else {\n        c.host.removeClass(c.toThemeProperty(\"jqx-rtl\"));\n        c.element.style.direction = \"ltr\";\n      }\n\n      c.element.className += \" \" + c.toThemeProperty(b);\n    },\n    _showPassword: function _showPassword() {\n      if (this.showPasswordIcon && this._browserCheck) {\n        var h = this,\n            g = document.createElement(\"span\"),\n            d = \".passwordinput\" + h.widgetID;\n        g.setAttribute(\"tabindex\", -1);\n        g.setAttribute(\"hasfocus\", false);\n        g.setAttribute(\"title\", h.localization.showPasswordString);\n        g.style.position = \"absolute\";\n        g.style.display = \"none\";\n        g.className = h.toThemeProperty(\"jqx-passwordinput-password-icon\");\n        var c = h.element.parentNode;\n\n        if (c) {\n          if (h.element.nextSibling) {\n            c.insertBefore(g, h.element.nextSibling);\n          } else {\n            c.appendChild(g);\n          }\n        }\n\n        h.icon = g;\n\n        h._positionIcon();\n\n        var f = function f() {\n          h.element.setAttribute(\"type\", \"password\");\n\n          if (h.input) {\n            h.input.setAttribute(\"type\", \"password\");\n          }\n\n          h._hidden = true;\n        };\n\n        var b = function b() {\n          if (h._hidden === false) {\n            f();\n          } else {\n            if (h._hidden) {\n              h.element.setAttribute(\"type\", \"text\");\n\n              if (h.input) {\n                h.input.setAttribute(\"type\", \"text\");\n              }\n\n              h._hidden = false;\n            }\n          }\n        };\n\n        var e = a.jqx.mobile.isTouchDevice();\n\n        if (e) {\n          h.addHandler(h.icon, \"mousedown\" + d, function () {\n            b();\n            return false;\n          });\n        } else {\n          h.addHandler(h.icon, \"mousedown\" + d, function () {\n            b();\n            return false;\n          });\n          h.addHandler(a(document), \"mouseup\" + d, function () {\n            f();\n            return false;\n          });\n          h.addHandler(a(document), \"mousedown\" + d, function () {\n            if (h._focused) {\n              f();\n            }\n          });\n        }\n      }\n    },\n    _positionIcon: function _positionIcon() {\n      var c = this.host.offset(),\n          b = this.element.offsetWidth,\n          e = this.element.offsetHeight,\n          d = a(this.icon);\n\n      if (this.rtl) {\n        d.offset({\n          top: parseInt(c.top + e / 2 - 10 / 2, 10),\n          left: c.left + 2\n        });\n      } else {\n        d.offset({\n          top: parseInt(c.top + e / 2 - 10 / 2, 10),\n          left: c.left + b - 18\n        });\n      }\n    },\n    _showStrength: function _showStrength() {\n      var e = this;\n\n      if (e.showStrength) {\n        if (e.host.jqxTooltip) {\n          var d = e.widgetID + \"Strength\",\n              c = d + \"Value\",\n              j = d + \"Indicator\";\n          var f;\n\n          if (!e.strengthTypeRenderer) {\n            f = '<div style=\"width: 220px;\"><div><span style=\"font-weight: bold;\">' + e.localization.passwordStrengthString + ': </span><span id=\"' + c + '\"></span></div><div id=\"' + j + '\"></div></div>';\n          } else {\n            var i = e.input.value;\n\n            if (!(\"placeholder\" in e.input) && e._browserCheck && i == e.placeHolder) {\n              i = \"\";\n            }\n\n            e._countCharacters();\n\n            var g = e.localization.tooShort;\n            var b = e.strengthTypeRenderer(i, {\n              letters: e.letters,\n              numbers: e.numbers,\n              specialKeys: e.specials\n            }, g);\n            f = b;\n          }\n\n          e.host.jqxTooltip({\n            theme: e.theme,\n            position: e.showStrengthPosition,\n            content: f,\n            trigger: \"none\",\n            autoHide: false,\n            rtl: e.rtl\n          });\n\n          if (!e.strengthTypeRenderer) {\n            var h = document.getElementById(j);\n            document.getElementById(c).innerHTML = e.localization.tooShort;\n            h.className += \" jqx-passwordinput-password-strength-inicator\";\n            h.style.backgroundColor = e.strengthColors.tooShort;\n\n            if (e.rtl === false) {\n              h.style[\"float\"] = \"left\";\n            } else {\n              h.style[\"float\"] = \"right\";\n            }\n          }\n\n          e._checkStrength();\n        } else {\n          throw new Error(\"jqxPasswordInput: Missing reference to jqxtooltip.js\");\n        }\n      }\n    },\n    _checkStrength: function _checkStrength() {\n      var b = this;\n      b.addHandler(b.host, \"keyup.passwordinput\" + b.widgetID, function () {\n        b._evaluateStrength();\n      });\n    },\n    _raiseEvent: function _raiseEvent() {\n      var c = new a.Event(\"change\");\n      c.args = {\n        type: this.changeType\n      };\n      this.changeType = null;\n      c.owner = this;\n      var b = this.host.trigger(c);\n      return b;\n    },\n    _evaluateStrength: function _evaluateStrength() {\n      var g = this;\n      var k = g.input.value;\n      var d = k.length;\n\n      g._countCharacters();\n\n      if (d > 0) {\n        if (g.showStrength) {\n          var e = !g.host.jqxTooltip(\"opened\");\n\n          if (e) {\n            g.host.jqxTooltip(\"open\");\n          }\n        }\n      }\n\n      var i = g.letters + g.numbers + 2 * g.specials + g.letters * g.numbers / 2 + d;\n      var h;\n\n      if (d < 8) {\n        h = g.localization.tooShort;\n      } else {\n        if (i < 20) {\n          h = g.localization.weak;\n        } else {\n          if (i < 30) {\n            h = g.localization.fair;\n          } else {\n            if (i < 40) {\n              h = g.localization.good;\n            } else {\n              h = g.localization.strong;\n            }\n          }\n        }\n      }\n\n      var c;\n\n      if (g.strengthTypeRenderer) {\n        c = g.strengthTypeRenderer(k, {\n          letters: g.letters,\n          numbers: g.numbers,\n          specialKeys: g.specials\n        }, h);\n        g.host.jqxTooltip({\n          content: c\n        });\n      } else {\n        if (g.passwordStrength) {\n          c = g.passwordStrength(k, {\n            letters: g.letters,\n            numbers: g.numbers,\n            specialKeys: g.specials\n          }, h);\n          a.each(g.localization, function () {\n            var l = this;\n\n            if (c == l) {\n              h = c;\n              return false;\n            }\n          });\n        }\n\n        document.getElementById(g.widgetID + \"StrengthValue\").innerHTML = h;\n        var f = document.getElementById(g.widgetID + \"StrengthIndicator\"),\n            b,\n            j;\n\n        switch (h) {\n          case g.localization.tooShort:\n            b = \"20%\";\n            j = g.strengthColors.tooShort;\n            break;\n\n          case g.localization.weak:\n            b = \"40%\";\n            j = g.strengthColors.weak;\n            break;\n\n          case g.localization.fair:\n            b = \"60%\";\n            j = g.strengthColors.fair;\n            break;\n\n          case g.localization.good:\n            b = \"80%\";\n            j = g.strengthColors.good;\n            break;\n\n          case g.localization.strong:\n            b = \"100%\";\n            j = g.strengthColors.strong;\n            break;\n        }\n\n        f.style.width = b;\n        f.style.backgroundColor = j;\n      }\n    },\n    _countCharacters: function _countCharacters() {\n      var g = this;\n      g.letters = 0;\n      g.numbers = 0;\n      g.specials = 0;\n      var d = \"<>@!#$%^&*()_+[]{}?:;|'\\\"\\\\,./~`-=\";\n      var b = g.input.value;\n      var f = b.length;\n\n      for (var c = 0; c < f; c++) {\n        var h = b.charAt(c);\n        var e = b.charCodeAt(c);\n\n        if (e > 64 && e < 91 || e > 96 && e < 123 || e > 127 && e < 155 || e > 159 && e < 166) {\n          g.letters += 1;\n          continue;\n        }\n\n        if (isNaN(h) === false) {\n          g.numbers += 1;\n          continue;\n        }\n\n        if (d.indexOf(h) != -1) {\n          g.specials += 1;\n          continue;\n        }\n      }\n    },\n    _toPx: function _toPx(b) {\n      if (typeof b === \"number\") {\n        return b + \"px\";\n      } else {\n        return b;\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}