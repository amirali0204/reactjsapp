{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVForms.tsx\";\nimport React from 'react';\nimport JQXform from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxform\";\n\nclass DVForms extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const columns = [{\n      align: 'left',\n      bind: 'checkboxValue1',\n      columnWidth: '140px',\n      label: 'Checkbox 1',\n      labelPadding: {\n        left: 0,\n        top: 5,\n        right: 0,\n        bottom: 5\n      },\n      labelPosition: 'right',\n      type: 'boolean'\n    }, {\n      align: 'left',\n      bind: 'checkboxValue2',\n      columnWidth: '140px',\n      label: 'Checkbox 2',\n      labelPadding: {\n        left: 0,\n        top: 5,\n        right: 0,\n        bottom: 5\n      },\n      labelPosition: 'right',\n      type: 'boolean'\n    }, {\n      align: 'left',\n      bind: 'checkboxValue3',\n      columnWidth: '140px',\n      label: 'Checkbox 3',\n      labelPadding: {\n        left: 0,\n        top: 5,\n        right: 0,\n        bottom: 5\n      },\n      labelPosition: 'right',\n      type: 'boolean'\n    }];\n    this.state = {\n      template: [{\n        columns: [{\n          align: 'left',\n          bind: 'checkboxValue1',\n          columnWidth: '140px',\n          label: 'Checkbox 1',\n          labelPadding: {\n            left: 0,\n            top: 5,\n            right: 0,\n            bottom: 5\n          },\n          labelPosition: 'left',\n          type: 'text'\n        }, {\n          align: 'left',\n          bind: 'checkboxValue2',\n          columnWidth: '140px',\n          label: 'Checkbox 2',\n          labelPadding: {\n            left: 0,\n            top: 5,\n            right: 0,\n            bottom: 5\n          },\n          labelPosition: 'left',\n          type: 'text'\n        }, {\n          align: 'left',\n          bind: 'checkboxValue3',\n          columnWidth: '140px',\n          label: 'Checkbox 3',\n          labelPadding: {\n            left: 0,\n            top: 5,\n            right: 0,\n            bottom: 5\n          },\n          labelPosition: 'left',\n          type: 'text'\n        }]\n      }, {\n        align: 'left',\n        bind: 'textBoxValue',\n        label: 'Text input',\n        labelPosition: 'left',\n        labelWidth: '30%',\n        required: true,\n        type: 'text',\n        width: '250px'\n      }, {\n        align: 'left',\n        bind: 'passwordBoxValue',\n        label: 'Password input',\n        labelPosition: 'left',\n        labelWidth: '30%',\n        required: true,\n        type: 'password',\n        width: '250px'\n      }, {\n        align: 'left',\n        bind: 'nubmberBoxValue',\n        label: 'Number input',\n        labelPosition: 'left',\n        labelWidth: '30%',\n        required: true,\n        type: 'number',\n        width: '250px'\n      }, {\n        align: 'left',\n        bind: 'dropdownValue',\n        label: 'Drop down list',\n        labelPosition: 'left',\n        labelWidth: '30%',\n        // options: [\n        //     { label: 'Option 1', value: 'value1' },\n        //     { label: 'Option 2', value: 'value2' },\n        //     { label: 'Option 3', value: 'value3' }\n        // ],\n        required: true,\n        type: 'custom',\n        width: '950px',\n        init: function (component) {\n          component.jqxInput({});\n        }\n      }, {\n        label: 'Radio buttons:',\n        rowHeight: '90px',\n        type: 'label'\n      }, {\n        align: 'left',\n        bind: 'radiobuttonValue',\n        columnWidth: '150px',\n        label: 'Radio buttons',\n        labelPosition: 'right',\n        options: [{\n          label: 'Option 1',\n          value: 'value1'\n        }, {\n          label: 'Option 2',\n          value: 'value2'\n        }, {\n          label: 'Option 3',\n          value: 'value3'\n        }],\n        optionsLayout: 'horizontal',\n        type: 'option'\n      }, {\n        label: 'Boolean options / checkboxes:',\n        rowHeight: '40px',\n        type: 'label'\n      }, {\n        columns\n      }],\n      value: {\n        checkboxValue1: false,\n        checkboxValue2: false,\n        checkboxValue3: true,\n        dropdownValue: 'value3',\n        nubmberBoxValue: 67.44,\n        passwordBoxValue: 'password box',\n        radiobuttonValue: 'value2',\n        textBoxValue: 'text box value',\n        textBoxValue1: 'text box value',\n        textBoxValue2: 'text box value'\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(JQXform, {\n      style: {\n        width: '100%',\n        height: 'auto'\n      },\n      template: this.state.template,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      \"data-container\": \"SystemStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"solutionExplorerTree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DVForms;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVComponents/DVForms.tsx"],"names":["React","JQXform","DVForms","PureComponent","constructor","props","columns","align","bind","columnWidth","label","labelPadding","left","top","right","bottom","labelPosition","type","state","template","labelWidth","required","width","init","component","jqxInput","rowHeight","options","value","optionsLayout","checkboxValue1","checkboxValue2","checkboxValue3","dropdownValue","nubmberBoxValue","passwordBoxValue","radiobuttonValue","textBoxValue","textBoxValue1","textBoxValue2","render","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport JQXform,  { IFormProps } from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxform\"\nimport DVMenuList from \"../DVComponents/DVMenuList\"\nimport ReactDOM from 'react-dom';\nimport TreeMenu from './TreeMenu';\nimport JqxTree, { ITreeProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\n\nclass DVForms extends React.PureComponent<{}, IFormProps> {\n    constructor(props: {}) {\n        super(props);\n        \n        const columns: IFormProps['template'] = [\n            {\n                align: 'left',\n                bind: 'checkboxValue1',\n                columnWidth: '140px',                                \n                label: 'Checkbox 1',                                \n                labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                labelPosition: 'right',\n                type: 'boolean'\n            },\n            {\n                align: 'left',                \n                bind: 'checkboxValue2',\n                columnWidth: '140px',                \n                label: 'Checkbox 2',\n                labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                labelPosition: 'right',                                \n                type: 'boolean',\n            },\n            {\n                align: 'left',                \n                bind: 'checkboxValue3',\n                columnWidth: '140px',                \n                label: 'Checkbox 3',\n                labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                labelPosition: 'right',                                \n                type: 'boolean'\n            }\n        ];\n\n        this.state = {\n            template: [\n                {\n                    columns: [{\n                        align: 'left',\n                        bind: 'checkboxValue1',\n                        columnWidth: '140px',                                \n                        label: 'Checkbox 1',                                \n                        labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                        labelPosition: 'left',\n                        type: 'text'\n                    },\n                    {\n                        align: 'left',                \n                        bind: 'checkboxValue2',\n                        columnWidth: '140px',                \n                        label: 'Checkbox 2',\n                        labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                        labelPosition: 'left',                                \n                        type: 'text',\n                    },\n                    {\n                        align: 'left',                \n                        bind: 'checkboxValue3',\n                        columnWidth: '140px',                \n                        label: 'Checkbox 3',\n                        labelPadding: { left: 0, top: 5, right: 0, bottom: 5 },\n                        labelPosition: 'left',                                \n                        type: 'text'\n                    }]\n                },\n                {\n                    align: 'left',\n                    bind: 'textBoxValue',                    \n                    label: 'Text input',\n                    labelPosition: 'left',\n                    labelWidth: '30%',\n                    required: true,\n                    type: 'text',\n                    width: '250px'                   \n                },\n                {\n                    align: 'left',\n                    bind: 'passwordBoxValue',                    \n                    label: 'Password input',\n                    labelPosition: 'left',\n                    labelWidth: '30%',\n                    required: true,\n                    type: 'password',\n                    width: '250px'                    \n                },\n                {\n                    align: 'left',\n                    bind: 'nubmberBoxValue',                   \n                    label: 'Number input',\n                    labelPosition: 'left',\n                    labelWidth: '30%',\n                    required: true,\n                    type: 'number',\n                    width: '250px'                    \n                },\n                {\n                    align: 'left',\n                    bind: 'dropdownValue',\n                    label: 'Drop down list',\n                    labelPosition: 'left',\n                    labelWidth: '30%',                                        \n                    // options: [\n                    //     { label: 'Option 1', value: 'value1' },\n                    //     { label: 'Option 2', value: 'value2' },\n                    //     { label: 'Option 3', value: 'value3' }\n                    // ],\n                    required: true,\n                    type: 'custom',\n                    width: '950px',\n                    init: function(component) {\n                        component.jqxInput({})\n                    },\n                },\n                {\n                    label: 'Radio buttons:',\n                    rowHeight: '90px',\n                    type: 'label'                    \n                },\n                {\n                    align: 'left',\n                    bind: 'radiobuttonValue',\n                    columnWidth: '150px',                    \n                    label: 'Radio buttons',\n                    labelPosition: 'right',                                        \n                    options: [\n                        { label: 'Option 1', value: 'value1' },\n                        { label: 'Option 2', value: 'value2' },\n                        { label: 'Option 3', value: 'value3' }\n                    ],\n                    optionsLayout: 'horizontal',\n                    type: 'option'                    \n                },\n                {\n                    label: 'Boolean options / checkboxes:',\n                    rowHeight: '40px',\n                    type: 'label'                    \n                },\n                {\n                    columns\n                }\n                \n            ],\n            value: {\n                checkboxValue1: false,\n                checkboxValue2: false,\n                checkboxValue3: true,\n                dropdownValue: 'value3',\n                nubmberBoxValue: 67.44,\n                passwordBoxValue: 'password box',\n                radiobuttonValue: 'value2',\n                textBoxValue: 'text box value' ,\n                textBoxValue1: 'text box value'  ,\n                textBoxValue2: 'text box value'                                                                \n            }\n        };\n    }\n\n    public render() {\n        return (\n            <div>\n                <JQXform style={{ width: '100%', height: 'auto' }}\n                template={this.state.template} value={this.state.value}></JQXform>\n                <div data-container=\"SystemStats\">\n                <div id=\"solutionExplorerTree\"></div></div>\n            </div>\n        );\n    }\n}\nexport default DVForms;"]},"metadata":{},"sourceType":"module"}