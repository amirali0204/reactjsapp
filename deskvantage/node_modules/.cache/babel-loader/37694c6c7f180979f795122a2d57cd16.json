{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVLayouts/ListScreen.tsx\";\nimport JqxLayout from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport { LeftTreeBuilder } from \"../DVControllers/LeftTreeBuilder\";\nimport { connect } from 'react-redux';\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\nimport JqxDropDownButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdropdownbutton';\nimport JqxTree from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\n\nclass ListScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myLayout = React.createRef();\n    this.listlayout = [{\n      items: [{\n        alignment: 'left',\n        items: [{\n          contentContainer: 'LeftMenuPanel',\n          initContent: () => {//      ReactDOM.render(<LeftTreeBuilder Id={this.props.menuselected}/>\n            //     , document.getElementById('LeftMenuTree'));\n          },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        orientation: 'vertical',\n        unpinnedWidth: '15%',\n        width: '15%',\n        minWidth: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }, {\n        items: [{\n          height: '95%',\n          items: [{\n            contentContainer: 'Document1Panel',\n            title: this.props.menuselected + ' Management',\n            type: 'documentPanel' // initContent: (): void => {\n            //  // ReactDOM.render(<DVDataGrid menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n            //   //  ReactDOM.render(<DVKanban menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n            //  // ReactDOM.render(<DVTimeline menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n            // }\n\n          }],\n          minHeight: '55%',\n          type: 'documentGroup'\n        }, {\n          height: '5%',\n          pinnedHeight: '50%',\n          unpinnedHeight: '50%',\n          alignment: 'bottom',\n          items: [{\n            contentContainer: 'MessagesListPanel',\n            title: 'Live Messages',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentActivityListPanel',\n            title: 'Recent Activities',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentFilesPanel',\n            title: 'Recent Updated Files',\n            type: 'layoutPanel'\n          }],\n          type: 'autoHideGroup'\n        }],\n        orientation: 'vertical',\n        type: 'layoutGroup',\n        width: '70%',\n        minWidth: '70%'\n      }, {\n        alignment: 'right',\n        items: [{\n          contentContainer: 'SystemStats',\n          initContent: () => {\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer'));\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer2'));\n            ReactDOM.render(React.createElement(DVBarChart, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer3'));\n          },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        minWidth: '15%',\n        width: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }],\n      orientation: 'horizontal',\n      type: 'layoutGroup'\n    }];\n    this.state = {\n      layout: this.listlayout\n    };\n  } // public componentDidUpdate(): void {\n  //     this.myLayout.current!.refresh();\n  //     this.myLayout.current!.render();\n  //   }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.menuselected != this.props.menuselected) {\n      this.myLayout.current.refresh();\n      alert('sssss' + this.props.menuselected);\n      this.myLayout.current.forceUpdate(); // render();\n\n      this.setState({\n        layout: this.listlayout\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '85%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        float: 'left',\n        height: '60px',\n        width: '15%'\n      },\n      src: \"./../Assets/system_logo.png\",\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginLeft: '20px',\n        marginTop: '13px',\n        width: '82%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(DVMenuList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        height: '43px',\n        float: 'right',\n        marginTop: '17px',\n        width: '15%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(JqxDropDownButton, {\n      theme: 'material-purple',\n      width: 200,\n      height: 25,\n      autoOpen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(JqxTree, {\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      \"item-selected\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"li\", {\n      \"item-selected\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Account Configurations\")))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(JqxLayout, {\n      style: {\n        border: 'none'\n      },\n      theme: \"material\",\n      width: '100%',\n      ref: this.myLayout,\n      height: window.innerHeight - 115,\n      layout: this.state.layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-container\": \"Document1Panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Document1PanelExplorer\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '90%',\n        marginTop: '20px',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(DVDataGrid, {\n      menuselected: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      \"data-container\": \"MessagesListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"List of Messages\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentActivityListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"List of Recent Activities\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentFilesPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"List of Recent updated Files\"), React.createElement(\"div\", {\n      \"data-container\": \"OutputPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Output\"), React.createElement(\"div\", {\n      \"data-container\": \"LeftMenuPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"LeftMenuTree\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '96%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(LeftTreeBuilder, {\n      Id: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      \"data-container\": \"ExtraActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Extra Quick Actions\"), React.createElement(\"div\", {\n      \"data-container\": \"SystemStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SystemStatsExplorer3\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer2\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  if (state.rootReducer !== null) {\n    return {\n      state: state,\n      menuselected: state.rootReducer.menuselected\n    };\n  } else {\n    return {\n      state: state,\n      menuselected: \"Orders\"\n    };\n  }\n};\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  menuaction: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListScreen);","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVLayouts/ListScreen.tsx"],"names":["JqxLayout","React","ReactDOM","DVDataGrid","DVMenuList","LeftTreeBuilder","connect","DVBarGuage","DVBarChart","JqxDropDownButton","JqxTree","ListScreen","Component","constructor","props","myLayout","createRef","listlayout","items","alignment","contentContainer","initContent","title","type","orientation","unpinnedWidth","width","minWidth","allowClose","allowPin","selected","allowUnpin","height","menuselected","minHeight","pinnedHeight","unpinnedHeight","render","document","getElementById","state","layout","componentDidUpdate","prevProps","prevState","current","refresh","alert","forceUpdate","setState","float","marginLeft","marginTop","border","window","innerHeight","mapStateToProps","rootReducer","toggleTodo","id","mapDispatchToProps","dispatch","menuaction"],"mappings":"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","sourcesContent":["import JqxLayout, { ILayoutProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVKanban from '../DVComponents/DVKanban';\nimport DVTimeline from '../DVComponents/DVTimeline';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport {LeftTreeBuilder} from \"../DVControllers/LeftTreeBuilder\"\nimport { connect } from 'react-redux'\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\nimport JqxDropDownButton, { IDropDownButtonProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdropdownbutton';\n\nimport JqxTree from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nclass ListScreen extends React.Component<NotesListState&any, ILayoutProps&any&IDropDownButtonProps> {\n    private myLayout = React.createRef<JqxLayout>();\n    listlayout = [{\n        items: [\n            {\n            alignment: 'left',\n            items: [{\n                contentContainer: 'LeftMenuPanel',\n                initContent: (): void => {\n              //      ReactDOM.render(<LeftTreeBuilder Id={this.props.menuselected}/>\n               //     , document.getElementById('LeftMenuTree'));\n                },\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            orientation:'vertical',\n            unpinnedWidth: '15%',\n            width: '15%',\n            minWidth:'15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        },{\n            items: [{\n                height: '95%',\n                items: [{\n                    contentContainer: 'Document1Panel',\n                    title: this.props.menuselected+' Management',\n                    type: 'documentPanel',\n                    // initContent: (): void => {\n                    //  // ReactDOM.render(<DVDataGrid menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n                    //   //  ReactDOM.render(<DVKanban menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n                    //  // ReactDOM.render(<DVTimeline menuselected={this.props.menuselected}/>, document.getElementById('Document1PanelExplorer'));\n                    // }\n                }],\n                minHeight: '55%',\n                type: 'documentGroup'\n            }, {\n                height: '5%',\n                pinnedHeight:'50%',\n                unpinnedHeight:'50%',\n                alignment:'bottom',\n                items: [{\n                    contentContainer: 'MessagesListPanel',\n                    title: 'Live Messages',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentActivityListPanel',\n                    title: 'Recent Activities',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentFilesPanel',\n                    title: 'Recent Updated Files',\n                    type: 'layoutPanel'\n                }],\n                \n                type: 'autoHideGroup',\n            }],\n            orientation: 'vertical',\n            type: 'layoutGroup',\n            width: '70%',\n            minWidth: '70%'\n        },{\n            alignment: 'right',\n            items: [ {\n                contentContainer: 'SystemStats',\n                initContent: (): void => {ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer'));\n                ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer2'));\n                ReactDOM.render(<DVBarChart/>, document.getElementById('SystemStatsExplorer3'));},\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            minWidth: '15%',\n            width: '15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        }],\n        orientation: 'horizontal',\n        type: 'layoutGroup'\n    }];\n\n    constructor(props) {    \n        super(props);\n        \n        this.state = {\n            layout: this.listlayout,\n        }\n       \n    }\n    // public componentDidUpdate(): void {\n    //     this.myLayout.current!.refresh();\n    //     this.myLayout.current!.render();\n    //   }\n    componentDidUpdate(prevProps, prevState) {\n        if((prevProps.menuselected != this.props.menuselected)) { \n            this.myLayout.current!.refresh();\n            alert('sssss'+this.props.menuselected)\n            this.myLayout.current!.forceUpdate();// render();\n            this.setState({layout: this.listlayout})\n        }\n    }\n\n    public render() {\n        return (\n            <div>\n                <div>\n                    <div style={{float:'left', width: '85%'}}>\n                        <img style={{float:'left', height:'60px', width:'15%'}} src=\"./../Assets/system_logo.png\" alt=\"Logo\" />\n                        <div style={{float:'right', marginLeft: '20px', marginTop:'13px',width: '82%'}}>\n                            <DVMenuList /></div>\n                    </div>\n                    <div style={{ height:'43px', float: 'right' , marginTop:'17px',width: '15%'}}>\n                        <JqxDropDownButton theme={'material-purple'} width={200} height={25} autoOpen={true}>\n                            <JqxTree  width={200}>\n                        <ul>\n                            <li item-selected='true'>Logout</li>\n                            <li item-selected='false'>\n                                Account Configurations\n                            </li>\n                        </ul>\n                    </JqxTree>\n                        </JqxDropDownButton>\n                    </div>\n                </div>\n                <br/>\n                <hr/> <br/>\n                <div>\n                <JqxLayout style={{border: 'none'}} theme=\"material\" width={'100%'} ref={this.myLayout}\n                height={window.innerHeight-115} layout={this.state.layout}>\n                    <div data-container=\"Document1Panel\">\n                        <div>\n                            <div id=\"Document1PanelExplorer\" \n                            style={{ border: 'none', width: '99%', height: '90%',marginTop:'20px',float:'left' }} >\n                                <DVDataGrid menuselected={this.props.menuselected}/>\n                                </div>\n                        \n                        </div>\n                    </div>\n                    <div data-container=\"MessagesListPanel\">List of Messages</div>\n                    <div data-container=\"RecentActivityListPanel\">List of Recent Activities</div>\n                    <div data-container=\"RecentFilesPanel\">List of Recent updated Files</div>\n                    <div data-container=\"OutputPanel\">Output</div>\n                    <div data-container=\"LeftMenuPanel\">\n                        <div id=\"LeftMenuTree\" style={{ border: 'none', width: '99%', height: '96%' }} >\n                        <LeftTreeBuilder Id={this.props.menuselected}/>\n                            </div>\n                    </div>\n                    <div data-container=\"ExtraActions\">Extra Quick Actions</div>\n                    <div data-container=\"SystemStats\">\n                        <div id=\"SystemStatsExplorer3\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                        <div id=\"SystemStatsExplorer\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                        <div id=\"SystemStatsExplorer2\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                    </div>\n                </JqxLayout>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport interface IStoreState {\n    type: string\n  };\ninterface NotesListState {\n    menuaction: (id) => (dispatch: React.Dispatch<IStoreState>) => Promise<void>;\n  }\nconst mapStateToProps = state => {\n    if(state.rootReducer !== null){\n        return {\n            state: state,\n            menuselected: state.rootReducer.menuselected,\n        }\n    }else{\n        return {\n            state: state,\n            menuselected: \"Orders\",\n        }\n    }\n  }\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n  })\n\n  const mapDispatchToProps = dispatch => ({\n    menuaction: id => dispatch(toggleTodo(id))\n  })\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )( ListScreen);"]},"metadata":{},"sourceType":"module"}