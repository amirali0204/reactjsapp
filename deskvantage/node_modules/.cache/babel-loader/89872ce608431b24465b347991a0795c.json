{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n(function ($) {\n  $.extend($.jqx._jqxGrid.prototype, {\n    _getChartDataFields: function (data) {\n      var that = this;\n      var record = data[0];\n      var stringOnly = true,\n          xAxisDataField,\n          series = [];\n\n      for (var dataField in record) {\n        if (dataField === '$' || dataField === 'uid' || dataField === 'boundindex' || dataField === 'uniqueid' || dataField === 'visibleindex') {\n          continue;\n        }\n\n        var dataType = that.source._source.dataFields.find(gridField => gridField.name === dataField).type;\n\n        if (dataType === 'string') {\n          var index = that.columns.records.findIndex(col => col.datafield === dataField);\n\n          if (index === 0) {\n            xAxisDataField = dataField;\n          }\n        } else {\n          stringOnly = false;\n          series.push({\n            dataField: dataField,\n            displayText: dataField\n          });\n        }\n      }\n\n      return {\n        xAxisDataField: xAxisDataField,\n        series: series,\n        stringOnly: stringOnly\n      };\n    },\n    createChart: function (type, dataSource) {\n      var that = this;\n      var gridSelection = that.getselection(),\n          selectedRows = gridSelection.rows,\n          selectedCells = gridSelection.cells,\n          chartElement = document.createElement('div'),\n          chartData = [],\n          seriesGroup = {};\n      var rowsToPlot = [],\n          columnsToPlot = [],\n          series;\n\n      if (selectedCells && selectedCells.length > 1) {\n        selectedCells.forEach(cell => {\n          if (rowsToPlot.indexOf(cell.rowindex) === -1) {\n            rowsToPlot.push(cell.rowindex);\n          }\n\n          if (columnsToPlot.indexOf(cell.datafield) === -1) {\n            columnsToPlot.push(cell.datafield);\n          }\n        });\n      }\n\n      if (selectedRows.length === 0 && selectedCells.length === 0) {\n        var dataSource = that.source.records;\n      }\n\n      if (dataSource) {\n        chartData = chartData.concat(dataSource);\n      } else {\n        var dataSource = that.source.records;\n\n        for (var i = 0; i < dataSource.length; i++) {\n          var record = {};\n\n          if (selectedRows.length > 0) {\n            if (selectedRows.indexOf(i) === -1) {\n              continue;\n            }\n          } else if (selectedCells.length > 0) {\n            if (selectedCells.length > 1) {\n              if (rowsToPlot.indexOf(i) === -1) {\n                continue;\n              }\n\n              columnsToPlot.forEach(dataField => {\n                record[dataField] = dataSource[i][dataField];\n              });\n              chartData.push(record);\n              continue;\n            }\n          }\n\n          that.columns.records.forEach(col => record[col.datafield] = dataSource[i][col.datafield]);\n          chartData.push(record);\n        }\n      }\n\n      var chartDataFields = that._getChartDataFields(chartData);\n\n      if (chartDataFields.stringOnly) {\n        if (that.showheader) {\n          var chartIcon = that.element.querySelector('#' + type);\n          that.toolbar[0].firstElementChild.classList.add('warning');\n\n          if (chartIcon) {\n            chartIcon.classList.add('warning');\n          }\n\n          setTimeout(function () {\n            that.toolbar[0].firstElementChild.classList.remove('warning');\n\n            if (chartIcon) {\n              chartIcon.classList.remove('warning');\n            }\n          }, 1000);\n        }\n\n        return;\n      }\n\n      series = chartDataFields.series;\n      var chart = {};\n      chart.title = '';\n      chart.description = '';\n      chart.showLegend = true;\n      chart.showBorderLine = false;\n      chart.padding = {\n        left: 5,\n        top: 10,\n        right: 5,\n        bottom: 5\n      };\n      chart.source = chartData;\n      chart.xAxis = {\n        dataField: chartDataFields.xAxisDataField,\n        gridLines: {\n          visible: true\n        }\n      };\n      chart.valueAxis = {\n        displayValueAxis: true,\n        description: that.charting.description,\n        axisSize: 'auto',\n        formatSettings: that.charting.formatSettings\n      };\n      chart.colorScheme = that.charting.colorScheme;\n      chart.seriesGroups = [seriesGroup];\n      seriesGroup.formatSettings = that.charting.formatSettings;\n      seriesGroup.series = series;\n\n      if (type === 'line') {\n        series.forEach(function (serie) {\n          serie.symbolSize = 8;\n          serie.symbolType = 'square';\n        });\n      } else if (type === 'pie') {\n        var pieDataField = series[0].dataField;\n        delete seriesGroup.formatSettings;\n\n        seriesGroup.formatFunction = function (value, index) {\n          if (isNaN(value)) {\n            if (typeof value === 'object') {\n              return index;\n            }\n\n            return value;\n          }\n\n          return value;\n        };\n\n        seriesGroup.showLabels = true;\n        series.length = 0;\n        series.push({\n          dataField: pieDataField,\n          displayText: chartDataFields.xAxisDataField,\n          initialAngle: 0\n        });\n      } else if (type === 'bar') {\n        type = 'column';\n        seriesGroup.orientation = 'horizontal';\n        chart.xAxis.textRotationAngle = 90;\n        chart.valueAxis.textRotationAngle = 30;\n        chart.valueAxis.flip = true;\n      } else if (type === 'area') {\n        var opacity = 1;\n\n        for (var i = 0; i < series.length; i++) {\n          series[i].opacity = opacity;\n          opacity -= 0.2;\n          opacity = Math.max(0.3, opacity);\n        }\n      }\n\n      seriesGroup.type = type;\n\n      if (that.charting.ready) {\n        that.charting.ready(chart);\n      }\n\n      if (that.charting.appendTo) {\n        var container = that.charting.appendTo === 'string' ? document.querySelector(that.charting.appendTo) : that.charting.appendTo;\n\n        if (container) {\n          var chartInstance = new jqxChart(chartElement, chart);\n          container.appendChild(chartElement);\n        }\n      } else {\n        that._openChartDialog(chartElement, type, chart);\n      }\n    },\n    _openChartDialog: function (chart, chartType, settings) {\n      var that = this;\n\n      if (!that.charting.dialog.enabled) {\n        return false;\n      }\n\n      var dialogElement = document.createElement('div');\n      dialogElement.innerHTML = '<div>' + that.charting.dialog.header + '</div><div style=\"overflow:hidden;\"></div>';\n      var chartLabel = chartType.substring(0, 1).toUpperCase() + chartType.substring(1);\n      chart.style.width = '100%';\n      chart.style.height = '100%';\n      var dialog = new jqxWindow(dialogElement, {\n        width: that.charting.dialog.width,\n        height: that.charting.dialog.height,\n        position: that.charting.dialog.position,\n        isModal: true\n      });\n      dialog.open();\n      setTimeout(function () {\n        dialogElement.querySelector('.jqx-widget-content').appendChild(chart);\n        var chartInstance = new jqxChart(chart, settings);\n      }, 100);\n      dialog.on('close', function () {\n        dialog.destroy();\n      });\n    }\n  });\n})(jqxBaseFramework);","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/node_modules/jqwidgets-scripts/jqwidgets/jqxgrid.chart.js"],"names":["$","extend","jqx","_jqxGrid","prototype","_getChartDataFields","data","that","record","stringOnly","xAxisDataField","series","dataField","dataType","source","_source","dataFields","find","gridField","name","type","index","columns","records","findIndex","col","datafield","push","displayText","createChart","dataSource","gridSelection","getselection","selectedRows","rows","selectedCells","cells","chartElement","document","createElement","chartData","seriesGroup","rowsToPlot","columnsToPlot","length","forEach","cell","indexOf","rowindex","concat","i","chartDataFields","showheader","chartIcon","element","querySelector","toolbar","firstElementChild","classList","add","setTimeout","remove","chart","title","description","showLegend","showBorderLine","padding","left","top","right","bottom","xAxis","gridLines","visible","valueAxis","displayValueAxis","charting","axisSize","formatSettings","colorScheme","seriesGroups","serie","symbolSize","symbolType","pieDataField","formatFunction","value","isNaN","showLabels","initialAngle","orientation","textRotationAngle","flip","opacity","Math","max","ready","appendTo","container","chartInstance","jqxChart","appendChild","_openChartDialog","chartType","settings","dialog","enabled","dialogElement","innerHTML","header","chartLabel","substring","toUpperCase","style","width","height","jqxWindow","position","isModal","open","on","destroy","jqxBaseFramework"],"mappings":"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","sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\n(function ($) {\r\n    $.extend($.jqx._jqxGrid.prototype, {\r\n\t   _getChartDataFields: function(data) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar record = data[0];\r\n\t\t\tvar stringOnly = true,\r\n\t\t\t\txAxisDataField,\r\n\t\t\t\tseries = [];\r\n\r\n\t\t\tfor (var dataField in record) {\r\n\t\t\t\tif (dataField === '$' || dataField === 'uid' || dataField === 'boundindex' || dataField === 'uniqueid' || dataField === 'visibleindex') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dataType = that.source._source.dataFields.find(gridField => gridField.name === dataField).type;\r\n\r\n\t\t\t\tif (dataType === 'string') {\r\n\t\t\t\t\tvar index = that.columns.records.findIndex(col => col.datafield === dataField);\r\n\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\txAxisDataField = dataField;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstringOnly = false;\r\n\t\t\t\t\tseries.push({ dataField: dataField, displayText: dataField });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { xAxisDataField: xAxisDataField, series: series, stringOnly: stringOnly };\r\n\t\t},\r\n\r\n\t\tcreateChart: function(type, dataSource) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar gridSelection = that.getselection(),\r\n\t\t\t\tselectedRows = gridSelection.rows,\r\n\t\t\t\tselectedCells = gridSelection.cells,\r\n\t\t\t\tchartElement = document.createElement('div'),\r\n\t\t\t\tchartData = [],\r\n\t\t\t\tseriesGroup = {};\r\n\t\t\tvar rowsToPlot = [],\r\n\t\t\t\tcolumnsToPlot = [],\r\n\t\t\t\tseries;\r\n\r\n\t\t\tif (selectedCells && selectedCells.length > 1) {\r\n\t\t\t\tselectedCells.forEach(cell => {\r\n\t\t\t\t\tif (rowsToPlot.indexOf(cell.rowindex) === -1) {\r\n\t\t\t\t\t\trowsToPlot.push(cell.rowindex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (columnsToPlot.indexOf(cell.datafield) === -1) {\r\n\t\t\t\t\t\tcolumnsToPlot.push(cell.datafield);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedRows.length === 0 && selectedCells.length === 0) {\r\n\t\t\t\tvar dataSource = that.source.records;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (dataSource) {\r\n\t\t\t\tchartData = chartData.concat(dataSource);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar dataSource = that.source.records;\r\n\t\t\t\t\r\n\t\t\t\tfor (var i = 0; i < dataSource.length; i++) {\r\n\t\t\t\t\tvar record = {};\r\n\r\n\t\t\t\t\tif (selectedRows.length > 0) {\r\n\t\t\t\t\t\tif (selectedRows.indexOf(i) === -1) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (selectedCells.length > 0) {\r\n\t\t\t\t\t\tif (selectedCells.length > 1) {\r\n\t\t\t\t\t\t\tif (rowsToPlot.indexOf(i) === -1) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcolumnsToPlot.forEach(dataField => {\r\n\t\t\t\t\t\t\t\trecord[dataField] = dataSource[i][dataField];\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tchartData.push(record);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthat.columns.records.forEach(col => record[col.datafield] = dataSource[i][col.datafield]);\r\n\t\t\t\t\tchartData.push(record);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar chartDataFields = that._getChartDataFields(chartData);\r\n\r\n\t\t\tif (chartDataFields.stringOnly) {\r\n\t\t\t\tif (that.showheader) {\r\n\t\t\t\t\tvar chartIcon = that.element.querySelector('#' + type);\r\n\r\n\t\t\t\t\tthat.toolbar[0].firstElementChild.classList.add('warning');\r\n\r\n\t\t\t\t\tif (chartIcon) {\r\n\t\t\t\t\t\tchartIcon.classList.add('warning');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tthat.toolbar[0].firstElementChild.classList.remove('warning');\r\n\r\n\t\t\t\t\t\tif (chartIcon) {\r\n\t\t\t\t\t\t\tchartIcon.classList.remove('warning');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tseries = chartDataFields.series;\r\n\t\t\t\r\n\t\t\tvar chart = {};\r\n\t\t\t\r\n\t\t\tchart.title = '';\r\n\t\t\tchart.description = '';\r\n\t\t\tchart.showLegend = true;\r\n\t\t\tchart.showBorderLine = false;\r\n\t\t\tchart.padding = { left: 5, top: 10, right: 5, bottom: 5 };\r\n\t\t\tchart.source = chartData;\r\n\t\t\tchart.xAxis =\r\n\t\t\t\t{\r\n\t\t\t\t\tdataField: chartDataFields.xAxisDataField,\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tvisible: true\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tchart.valueAxis =\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplayValueAxis: true,\r\n\t\t\t\t\tdescription: that.charting.description,\r\n\t\t\t\t\taxisSize: 'auto',\r\n\t\t\t\t\tformatSettings: that.charting.formatSettings\r\n\t\t\t\t};\r\n\t\t\tchart.colorScheme = that.charting.colorScheme;\r\n\t\t\tchart.seriesGroups = [seriesGroup];\r\n\r\n\t\t\tseriesGroup.formatSettings = that.charting.formatSettings;\r\n\t\t\tseriesGroup.series = series;\r\n\r\n\t\t\tif (type === 'line') {\r\n\t\t\t\tseries.forEach(function (serie) {\r\n\t\t\t\t\tserie.symbolSize = 8;\r\n\t\t\t\t\tserie.symbolType = 'square';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (type === 'pie') {\r\n\t\t\t\tvar pieDataField = series[0].dataField;\r\n\r\n\t\t\t\tdelete seriesGroup.formatSettings;\r\n\t\t\t\tseriesGroup.formatFunction = function (value, index) {\r\n\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\tif (typeof value === 'object') {\r\n\t\t\t\t\t\t\treturn index;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t};\r\n\t\t\t\tseriesGroup.showLabels = true;\r\n\t\t\t\tseries.length = 0;\r\n\t\t\t\tseries.push({\r\n\t\t\t\t\tdataField: pieDataField,\r\n\t\t\t\t\tdisplayText: chartDataFields.xAxisDataField,\r\n\t\t\t\t\tinitialAngle: 0\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (type === 'bar') {\r\n\t\t\t\ttype = 'column';\r\n\t\t\t\tseriesGroup.orientation = 'horizontal';\r\n\t\t\t\tchart.xAxis.textRotationAngle = 90;\r\n\t\t\t\tchart.valueAxis.textRotationAngle = 30;\r\n\t\t\t\tchart.valueAxis.flip = true;\r\n\t\t\t}\r\n\t\t\telse if (type === 'area') {\r\n\t\t\t\tvar opacity = 1;\r\n\r\n\t\t\t\tfor (var i = 0; i < series.length; i++) {\r\n\t\t\t\t\tseries[i].opacity = opacity;\r\n\t\t\t\t\topacity -= 0.2;\r\n\t\t\t\t\topacity = Math.max(0.3, opacity);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tseriesGroup.type = type;\r\n\r\n\t\t\tif (that.charting.ready) {\r\n\t\t\t\tthat.charting.ready(chart);\r\n\t\t\t}\r\n\r\n\t\t\tif (that.charting.appendTo) {\r\n\t\t\t\tvar container = that.charting.appendTo === 'string' ? document.querySelector(that.charting.appendTo) : that.charting.appendTo;\r\n\r\n\t\t\t\tif (container) {\r\n\t\t\t\t\tvar chartInstance = new jqxChart(chartElement, chart);\t\r\n\t\t\t\t\tcontainer.appendChild(chartElement);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\t\t\t\t\r\n\t\t\t\tthat._openChartDialog(chartElement, type, chart);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openChartDialog: function(chart, chartType, settings) {\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tif (!that.charting.dialog.enabled) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar dialogElement =  document.createElement('div');\r\n\t\t\t\r\n\t\t\tdialogElement.innerHTML = '<div>' + that.charting.dialog.header + '</div><div style=\"overflow:hidden;\"></div>';\r\n\t\t\t\r\n\t\t\tvar chartLabel = chartType.substring(0, 1).toUpperCase() + chartType.substring(1);\r\n\t\t\r\n\t\t\tchart.style.width = '100%';\r\n\t\t\tchart.style.height = '100%';\r\n\r\n\t\t\tvar dialog = new jqxWindow(dialogElement, {\r\n\t\t\t\twidth: that.charting.dialog.width,\r\n\t\t\t\theight: that.charting.dialog.height,\r\n\t\t\t\tposition: that.charting.dialog.position,\r\n\t\t\t\tisModal: true\r\n\t\t\t});\r\n\r\n\t\t\tdialog.open();\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tdialogElement.querySelector('.jqx-widget-content').appendChild(chart);\r\n\t\t\t\tvar chartInstance = new jqxChart(chart, settings);\t\r\n\t\t\t}, 100);\r\n\t\t\t\r\n\t\t\tdialog.on('close', function() {\r\n\t\t\t\tdialog.destroy();\r\n\t\t\t});\r\n\t    },\r\n\t\r\n\t});\r\n})(jqxBaseFramework);\r\n"]},"metadata":{},"sourceType":"script"}