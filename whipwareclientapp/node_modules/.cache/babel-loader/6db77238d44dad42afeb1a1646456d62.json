{"ast":null,"code":"/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (f) {\n  f.jqx.timeSpan = function () {\n    var q = {\n      ticksPerMillisecond: 10000,\n      millisecondsPerTick: 1 / 10000,\n      ticksPerSecond: 1000 * 10000,\n      secondsPerTick: 1 / (1000 * 10000),\n      ticksPerMinute: 1000 * 10000 * 60,\n      minutesPerTick: 1 / (1000 * 10000 * 60),\n      ticksPerHour: 1000 * 10000 * 3600,\n      hoursPerTick: 1 / (1000 * 10000 * 3600),\n      ticksPerDay: 1000 * 10000 * 3600 * 24,\n      daysPerTick: 1 / (1000 * 10000 * 3600 * 24),\n      millisPerSecond: 1000,\n      millisPerMinute: 1000 * 60,\n      millisPerHour: 1000 * 60 * 60,\n      millisPerDay: 1000 * 60 * 60 * 24,\n      _ticks: 0\n    };\n    f.extend(true, this, q);\n    var r = this;\n\n    r.ticks = function () {\n      return r._ticks;\n    };\n\n    r.days = function () {\n      return parseInt(r._ticks / r.ticksPerDay);\n    };\n\n    r.timeToMS = function (v, z, x, w) {\n      var y = v * 3600 + z * 60 + x + w / 1000;\n      return parseInt(y * r.ticksPerSecond);\n    };\n\n    r.hours = function () {\n      return parseInt(r._ticks / r.ticksPerHour) % 24;\n    };\n\n    r.milliseconds = function () {\n      return parseInt(r._ticks / r.ticksPerMillisecond) % 1000;\n    };\n\n    r.minutes = function () {\n      return parseInt(r._ticks / r.ticksPerMinute) % 60;\n    };\n\n    r.seconds = function () {\n      return parseInt(r._ticks / r.ticksPerSecond) % 60;\n    };\n\n    r.totalDays = function () {\n      return parseInt(r._ticks * r.daysPerTick);\n    };\n\n    r.totalHours = function () {\n      return parseInt(r._ticks * r.hoursPerTick);\n    };\n\n    r.totalMilliseconds = function () {\n      var v = r._ticks * r.millisecondsPerTick;\n      return parseInt(v);\n    };\n\n    r.totalMinutes = function () {\n      return parseInt(r._ticks * r.minutesPerTick);\n    };\n\n    r.totalSeconds = function () {\n      return parseInt(r._ticks * r.secondsPerTick);\n    };\n\n    if (arguments.length === 1) {\n      r._ticks = arguments[0];\n    } else {\n      if (arguments.length === 3) {\n        r._ticks = r.timeToMS(arguments[0], arguments[1], arguments[2]);\n      } else {\n        if (arguments.length === 4) {\n          var u = arguments[0];\n          var n = arguments[1];\n          var p = arguments[2];\n          var t = arguments[3];\n          var o = 0;\n          var s = (u * 3600 * 24 + n * 3600 + p * 60 + t) * 1000 + o;\n          r._ticks = s * r.ticksPerMillisecond;\n        } else {\n          if (arguments.length === 5) {\n            var u = arguments[0];\n            var n = arguments[1];\n            var p = arguments[2];\n            var t = arguments[3];\n            var o = arguments[4];\n            var s = (u * 3600 * 24 + n * 3600 + p * 60 + t) * 1000 + o;\n            r._ticks = s * r.ticksPerMillisecond;\n          }\n        }\n      }\n    }\n\n    r.add = function (w) {\n      var v = r._ticks + w._ticks;\n      var x = new f.jqx.timeSpan(v);\n      return x;\n    };\n\n    r.substract = function (w) {\n      var v = r._ticks - w._ticks;\n      return new f.jqx.timeSpan(v);\n    };\n\n    r.duration = function () {\n      if (r._ticks >= 0) {\n        return new f.jqx.timeSpan(r._ticks);\n      } else {\n        return new f.jqx.timeSpan(-r._ticks);\n      }\n    };\n\n    r.equals = function (v) {\n      return r._ticks == v._ticks;\n    };\n\n    r.valueOf = function () {\n      return r._ticks;\n    };\n\n    r.compare = function (w, v) {\n      if (w._ticks > v._ticks) {\n        return 1;\n      }\n\n      if (w._ticks < v._ticks) {\n        return -1;\n      }\n\n      return 0;\n    };\n\n    r.interval = function (x, y) {\n      var w = x * y;\n      var v = w + (x >= 0 ? 0.5 : -0.5);\n      return new f.jqx.timeSpan(v * r.ticksPerMillisecond);\n    };\n\n    r.fromDays = function (v) {\n      return r.interval(v, r.millisPerDay);\n    };\n\n    r.fromHours = function (v) {\n      return r.interval(v, r.millisPerHour);\n    };\n\n    r.fromMilliseconds = function (v) {\n      return r.interval(v, 1);\n    };\n\n    r.fromMinutes = function (v) {\n      return r.interval(v, r.millisPerMinute);\n    };\n\n    r.fromSeconds = function (v) {\n      return r.interval(v, r.millisPerSecond);\n    };\n\n    r.fromTicks = function (v) {\n      return new f.jqx.timeSpan(v);\n    };\n\n    return r;\n  };\n\n  var g = [{\n    id: \"Local\",\n    offset: 0,\n    offsetHours: 0,\n    displayName: \"\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Dateline Standard Time\",\n    offset: -720,\n    offsetHours: -12,\n    displayName: \"(UTC-12:00) International Date Line West\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"UTC-11\",\n    offset: -660,\n    offsetHours: -11,\n    displayName: \"(UTC-11:00) Coordinated Universal Time-11\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Hawaiteratoran Standard Time\",\n    offset: -600,\n    offsetHours: -10,\n    displayName: \"(UTC-10:00) Hawaiterator\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Alaskan Standard Time\",\n    offset: -540,\n    offsetHours: -9,\n    displayName: \"(UTC-09:00) Alaska\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Pacific Standard Time (Mexico)\",\n    offset: -480,\n    offsetHours: -8,\n    displayName: \"(UTC-08:00) Baja California\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Pacific Standard Time\",\n    offset: -480,\n    offsetHours: -8,\n    displayName: \"(UTC-08:00) Pacific Time (US & Canada)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"US Mountain Standard Time\",\n    offset: -420,\n    offsetHours: -7,\n    displayName: \"(UTC-07:00) Arizona\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Mountain Standard Time (Mexico)\",\n    offset: -420,\n    offsetHours: -7,\n    displayName: \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Mountain Standard Time\",\n    offset: -420,\n    offsetHours: -7,\n    displayName: \"(UTC-07:00) Mountain Time (US & Canada)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Central Standard Time\",\n    offset: -360,\n    offsetHours: -6,\n    displayName: \"(UTC-06:00) Central Time (US & Canada)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Central America Standard Time\",\n    offset: -360,\n    offsetHours: -6,\n    displayName: \"(UTC-06:00) Central America\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Canada Central Standard Time\",\n    offset: -360,\n    offsetHours: -6,\n    displayName: \"(UTC-06:00) Saskatchewan\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Central Standard Time (Mexico)\",\n    offset: -360,\n    offsetHours: -6,\n    displayName: \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"SA Pacific Standard Time\",\n    offset: -300,\n    offsetHours: -5,\n    displayName: \"(UTC-05:00) Bogota, Lima, Quito, Rio Branco\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Eastern Standard Time\",\n    offset: -300,\n    offsetHours: -5,\n    displayName: \"(UTC-05:00) Eastern Time (US & Canada)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"US Eastern Standard Time\",\n    offset: -300,\n    offsetHours: -5,\n    displayName: \"(UTC-05:00) Indiana (East)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Venezuela Standard Time\",\n    offset: -270,\n    offsetHours: -4.5,\n    displayName: \"(UTC-04:30) Caracas\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Atlantic Standard Time\",\n    offset: -240,\n    offsetHours: -4,\n    displayName: \"(UTC-04:00) Atlantic Time (Canada)\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Paraguay Standard Time\",\n    offset: -240,\n    offsetHours: -4,\n    displayName: \"(UTC-04:00) Asuncion\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Central Brazilian Standard Time\",\n    offset: -240,\n    offsetHours: -4,\n    displayName: \"(UTC-04:00) Cuiaba\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Pacific SA Standard Time\",\n    offset: -240,\n    offsetHours: -4,\n    displayName: \"(UTC-04:00) Santiago\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"SA Western Standard Time\",\n    offset: -240,\n    offsetHours: -4,\n    displayName: \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Newfoundland Standard Time\",\n    offset: -210,\n    offsetHours: -3.5,\n    displayName: \"(UTC-03:30) Newfoundland\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"SA Eastern Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Cayenne, Fortaleza\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Argentina Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Buenos Aires\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"E. South America Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Brasilia\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Bahia Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Salvador\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Montevideo Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Montevideo\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Greenland Standard Time\",\n    offset: -180,\n    offsetHours: -3,\n    displayName: \"(UTC-03:00) Greenland\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"UTC-02\",\n    offset: -120,\n    offsetHours: -2,\n    displayName: \"(UTC-02:00) Coordinated Universal Time-02\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Mid-Atlantic Standard Time\",\n    offset: -120,\n    offsetHours: -2,\n    displayName: \"(UTC-02:00) Mid-Atlantic - Old\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Azores Standard Time\",\n    offset: -60,\n    offsetHours: -1,\n    displayName: \"(UTC-01:00) Azores\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Cape Verde Standard Time\",\n    offset: -60,\n    offsetHours: -1,\n    displayName: \"(UTC-01:00) Cape Verde Is.\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Morocco Standard Time\",\n    offset: 0,\n    offsetHours: 0,\n    displayName: \"(UTC) Casablanca\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"UTC\",\n    offset: 0,\n    offsetHours: 0,\n    displayName: \"(UTC) Coordinated Universal Time\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"GMT Standard Time\",\n    offset: 0,\n    offsetHours: 0,\n    displayName: \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Greenwich Standard Time\",\n    offset: 0,\n    offsetHours: 0,\n    displayName: \"(UTC) Monrovia, Reykjavik\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Central European Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Namibia Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) Windhoek\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"W. Central Africa Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) West Central Africa\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"W. Europe Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Central Europe Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Romance Standard Time\",\n    offset: 60,\n    offsetHours: 1,\n    displayName: \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"FLE Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"South Africa Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Harare, Pretoria\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Turkey Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Istanbul\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"GTB Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Athens, Bucharest\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Libya Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Tripoli\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"E. Europe Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) E. Europe\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Jordan Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Amman\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Middle East Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Beirut\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Egypt Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Cairo\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Syria Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Damascus\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Israel Standard Time\",\n    offset: 120,\n    offsetHours: 2,\n    displayName: \"(UTC+02:00) Jerusalem\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Arab Standard Time\",\n    offset: 180,\n    offsetHours: 3,\n    displayName: \"(UTC+03:00) Kuwait, Riyadh\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"E. Africa Standard Time\",\n    offset: 180,\n    offsetHours: 3,\n    displayName: \"(UTC+03:00) Nairobi\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Arabic Standard Time\",\n    offset: 180,\n    offsetHours: 3,\n    displayName: \"(UTC+03:00) Baghdad\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Kaliningrad Standard Time\",\n    offset: 180,\n    offsetHours: 3,\n    displayName: \"(UTC+03:00) Kaliningrad, Minsk\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Iran Standard Time\",\n    offset: 210,\n    offsetHours: 3.5,\n    displayName: \"(UTC+03:30) Tehran\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Mauritius Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Port Louis\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Georgian Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Tbilisi\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Caucasus Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Yerevan\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Arabian Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Abu Dhabi, Muscat\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Azerbaijan Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Baku\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Russian Standard Time\",\n    offset: 240,\n    offsetHours: 4,\n    displayName: \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Afghanistan Standard Time\",\n    offset: 270,\n    offsetHours: 4.5,\n    displayName: \"(UTC+04:30) Kabul\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Pakistan Standard Time\",\n    offset: 300,\n    offsetHours: 5,\n    displayName: \"(UTC+05:00) Islamabad, Karachi\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"West Asia Standard Time\",\n    offset: 300,\n    offsetHours: 5,\n    displayName: \"(UTC+05:00) Ashgabat, Tashkent\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"India Standard Time\",\n    offset: 330,\n    offsetHours: 5.5,\n    displayName: \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Sri Lanka Standard Time\",\n    offset: 330,\n    offsetHours: 5.5,\n    displayName: \"(UTC+05:30) Sri Jayawardenepura\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Nepal Standard Time\",\n    offset: 345,\n    offsetHours: 5.75,\n    displayName: \"(UTC+05:45) Kathmandu\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Central Asia Standard Time\",\n    offset: 360,\n    offsetHours: 6,\n    displayName: \"(UTC+06:00) Astana\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Bangladesh Standard Time\",\n    offset: 360,\n    offsetHours: 6,\n    displayName: \"(UTC+06:00) Dhaka\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Ekaterinburg Standard Time\",\n    offset: 360,\n    offsetHours: 6,\n    displayName: \"(UTC+06:00) Ekaterinburg\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Myanmar Standard Time\",\n    offset: 390,\n    offsetHours: 6.5,\n    displayName: \"(UTC+06:30) Yangon (Rangoon)\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"SE Asia Standard Time\",\n    offset: 420,\n    offsetHours: 7,\n    displayName: \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"N. Central Asia Standard Time\",\n    offset: 420,\n    offsetHours: 7,\n    displayName: \"(UTC+07:00) Novosibirsk\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Ulaanbaatar Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Ulaanbaatar\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"China Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Singapore Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Kuala Lumpur, Singapore\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"North Asia Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Krasnoyarsk\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Taipei Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Taipei\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"W. Australia Standard Time\",\n    offset: 480,\n    offsetHours: 8,\n    displayName: \"(UTC+08:00) Perth\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Korea Standard Time\",\n    offset: 540,\n    offsetHours: 9,\n    displayName: \"(UTC+09:00) Seoul\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"North Asia East Standard Time\",\n    offset: 540,\n    offsetHours: 9,\n    displayName: \"(UTC+09:00) Irkutsk\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Tokyo Standard Time\",\n    offset: 540,\n    offsetHours: 9,\n    displayName: \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"AUS Central Standard Time\",\n    offset: 570,\n    offsetHours: 9.5,\n    displayName: \"(UTC+09:30) Darwin\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Cen. Australia Standard Time\",\n    offset: 570,\n    offsetHours: 9.5,\n    displayName: \"(UTC+09:30) Adelaide\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"West Pacific Standard Time\",\n    offset: 600,\n    offsetHours: 10,\n    displayName: \"(UTC+10:00) Guam, Port Moresby\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Tasmania Standard Time\",\n    offset: 600,\n    offsetHours: 10,\n    displayName: \"(UTC+10:00) Hobart\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"E. Australia Standard Time\",\n    offset: 600,\n    offsetHours: 10,\n    displayName: \"(UTC+10:00) Brisbane\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"AUS Eastern Standard Time\",\n    offset: 600,\n    offsetHours: 10,\n    displayName: \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Yakutsk Standard Time\",\n    offset: 600,\n    offsetHours: 10,\n    displayName: \"(UTC+10:00) Yakutsk\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Vladivostok Standard Time\",\n    offset: 660,\n    offsetHours: 11,\n    displayName: \"(UTC+11:00) Vladivostok\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Central Pacific Standard Time\",\n    offset: 660,\n    offsetHours: 11,\n    displayName: \"(UTC+11:00) Solomon Is., New Caledonia\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Magadan Standard Time\",\n    offset: 720,\n    offsetHours: 12,\n    displayName: \"(UTC+12:00) Magadan\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Kamchatka Standard Time\",\n    offset: 720,\n    offsetHours: 12,\n    displayName: \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"Fiji Standard Time\",\n    offset: 720,\n    offsetHours: 12,\n    displayName: \"(UTC+12:00) Fiji\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"New Zealand Standard Time\",\n    offset: 720,\n    offsetHours: 12,\n    displayName: \"(UTC+12:00) Auckland, Wellington\",\n    supportsDaylightSavingTime: true\n  }, {\n    id: \"UTC+12\",\n    offset: 720,\n    offsetHours: 12,\n    displayName: \"(UTC+12:00) Coordinated Universal Time+12\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Tonga Standard Time\",\n    offset: 780,\n    offsetHours: 13,\n    displayName: \"(UTC+13:00) Nuku'alofa\",\n    supportsDaylightSavingTime: false\n  }, {\n    id: \"Samoa Standard Time\",\n    offset: 780,\n    offsetHours: 13,\n    displayName: \"(UTC+13:00) Samoa\",\n    supportsDaylightSavingTime: true\n  }];\n  var a = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n  var m = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n  var j = 365 * 4 + 1;\n  var c = (365 * 4 + 1) * 25 - 1;\n  var h = ((365 * 4 + 1) * 25 - 1) * 4 + 1;\n  var d = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4;\n  var b = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n  var l = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 25 - 366;\n  var k = 0;\n  var i = ((((365 * 4 + 1) * 25 - 1) * 4 + 1) * 25 - 366) * (1000 * 10000 * 3600 * 24) - 1;\n  var e = ((((365 * 4 + 1) * 25 - 1) * 4 + 1) * 25 - 366) * (1000 * 60 * 60 * 24);\n\n  f.jqx.date = function () {\n    var r = this;\n    r.ticksPerMillisecond = 10000;\n    r.millisecondsPerTick = 1 / 10000;\n    r.ticksPerSecond = 1000 * 10000;\n    r.secondsPerTick = 1 / (1000 * 10000);\n    r.ticksPerMinute = 1000 * 10000 * 60;\n    r.minutesPerTick = 1 / (1000 * 10000 * 60);\n    r.ticksPerHour = 1000 * 10000 * 3600;\n    r.hoursPerTick = 1 / (1000 * 10000 * 3600);\n    r.ticksPerDay = 1000 * 10000 * 3600 * 24;\n    r.daysPerTick = 1 / (1000 * 10000 * 3600 * 24);\n    r.millisPerSecond = 1000;\n    r.millisPerMinute = 1000 * 60;\n    r.millisPerHour = 1000 * 60 * 60;\n    r.millisPerDay = 1000 * 60 * 60 * 24;\n    r.daysPerYear = 365;\n    r.daysPer4Years = j;\n    r.daysPer100Years = c;\n    r.daysPer400Years = h;\n    r.daysTo1601 = d;\n    r.daysTo1899 = b;\n    r.daysTo10000 = l;\n    r.minTicks = 0;\n    r.maxTicks = i;\n    r.maxMillis = e;\n    r.datePartYear = 0;\n    r.datePartDayOfYear = 1;\n    r.datePartMonth = 2;\n    r.datePartDay = 3;\n    r.daysToMonth365 = a;\n    r.daysToMonth366 = m;\n    r.minValue = new Date(0);\n    r.maxValue = new Date(((((365 * 4 + 1) * 25 - 1) * 4 + 1) * 25 - 366) * (1000 * 10000 * 3600 * 24) - 1);\n    r.ticksMask = 4611686018427388000;\n    r.flagsMask = 13835058055282164000;\n    r.localMask = 9223372036854776000;\n    r.ticksCeiling = 4611686018427388000;\n    r.kindUnspecified = 0;\n    r.kindUtc = 4611686018427388000;\n    r.kindLocal = 9223372036854776000;\n    r.kindLocalAmbiguousDst = 13835058055282164000;\n    r.kindShift = 62;\n    r.regexTrim = /^\\s+|\\s+$/g;\n    r.regexInfinity = /^[+-]?infinity$/i;\n    r.regexHex = /^0x[a-f0-9]+$/i;\n    r.regexParseFloat = /^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/;\n    r.calendar = {\n      \"/\": \"/\",\n      \":\": \":\",\n      firstDay: 0,\n      days: {\n        names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n      },\n      months: {\n        names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n        namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n      },\n      AM: [\"AM\", \"am\", \"AM\"],\n      PM: [\"PM\", \"pm\", \"PM\"],\n      eras: [{\n        name: \"A.D.\",\n        start: null,\n        offset: 0\n      }],\n      twoDigitYearMax: 2029,\n      patterns: {\n        d: \"M/d/yyyy\",\n        D: \"dddd, MMMM dd, yyyy\",\n        t: \"h:mm tt\",\n        T: \"h:mm:ss tt\",\n        f: \"dddd, MMMM dd, yyyy h:mm tt\",\n        F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n        M: \"MMMM dd\",\n        Y: \"yyyy MMMM\",\n        S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n        ISO: \"yyyy-MM-dd hh:mm:ss\",\n        ISO2: \"yyyy-MM-dd HH:mm:ss\",\n        d1: \"dd.MM.yyyy\",\n        d2: \"dd-MM-yyyy\",\n        zone1: \"yyyy-MM-ddTHH:mm:ss-HH:mm\",\n        zone2: \"yyyy-MM-ddTHH:mm:ss+HH:mm\",\n        custom: \"yyyy-MM-ddTHH:mm:ss.fff\",\n        custom2: \"yyyy-MM-dd HH:mm:ss.fff\"\n      },\n      percentsymbol: \"%\",\n      currencysymbol: \"$\",\n      currencysymbolposition: \"before\",\n      decimalseparator: \".\",\n      thousandsseparator: \",\"\n    };\n    r.dateData = 0;\n    r.timeZone = null;\n    r.timeZones = g;\n\n    r.internalMS = function () {\n      return r.dateData;\n    };\n\n    r.getDatePart = function (y) {\n      var x = r.internalMS();\n      var z = parseInt(x / r.millisPerDay);\n      var G = parseInt(z / r.daysPer400Years);\n      z -= G * r.daysPer400Years;\n      var B = parseInt(z / r.daysPer100Years);\n\n      if (B == 4) {\n        B = 3;\n      }\n\n      z -= B * r.daysPer100Years;\n      var D = parseInt(z / r.daysPer4Years);\n      z -= D * r.daysPer4Years;\n      var E = parseInt(z / r.daysPerYear);\n\n      if (E == 4) {\n        E = 3;\n      }\n\n      if (y == r.datePartYear) {\n        return parseInt(G * 400 + B * 100 + D * 4 + E + 1);\n      }\n\n      z -= E * r.daysPerYear;\n\n      if (y == r.datePartDayOfYear) {\n        return parseInt(z + 1);\n      }\n\n      var C = E == 3 && (D != 24 || B == 3);\n      var F = C ? r.daysToMonth366 : r.daysToMonth365;\n      var A = z >> 5 + 1;\n\n      while (z >= F[A]) {\n        A++;\n      }\n\n      if (y == r.datePartMonth) {\n        return parseInt(A);\n      }\n\n      return parseInt(z - F[A - 1] + 1);\n    };\n\n    r.dayOfWeek = function () {\n      var y = r.dateData;\n      var x = parseInt(y / r.millisPerDay + 1) % 7;\n      return x;\n    }, r.dayOfYear = function () {\n      return r.getDatePart(r.datePartDayOfYear);\n    };\n\n    r.weekOfYear = function (y) {\n      var F = r.toDate();\n      var D = y || r.calendar.firstDay;\n      var A = new Date(F.getFullYear(), 0, 1);\n      var E = A.getDay() - D;\n      E = E >= 0 ? E : E + 7;\n      var z = Math.floor((F.getTime() - A.getTime() - (F.getTimezoneOffset() - A.getTimezoneOffset()) * 60000) / 86400000) + 1;\n      var B;\n\n      if (E < 4) {\n        B = Math.floor((z + E - 1) / 7) + 1;\n\n        if (B > 52) {\n          var C = new Date(F.getFullYear() + 1, 0, 1);\n          var x = C.getDay() - D;\n          x = x >= 0 ? x : x + 7;\n          B = x < 4 ? 1 : 53;\n        }\n      } else {\n        B = Math.floor((z + E - 1) / 7);\n      }\n\n      return B;\n    };\n\n    r.subtract = function (x) {\n      return new f.jqx.timeSpan(r.dateData * r.ticksPerMillisecond - x.dateData * r.ticksPerMillisecond);\n    };\n\n    r.dateToMS = function (z, A, x) {\n      if (z >= 1 && z <= 9999 && A >= 1 && A <= 12) {\n        z = parseInt(z);\n        var D = r.isLeapYear(z) ? r.daysToMonth366 : r.daysToMonth365;\n\n        if (x >= 1 && x <= D[A] - D[A - 1]) {\n          var C = z - 1;\n          var B = C * 365 + parseInt(C / 4) - parseInt(C / 100) + parseInt(C / 400) + D[A - 1] + x - 1;\n          return B * r.millisPerDay;\n        }\n      }\n    };\n\n    r.isLeapYear = function (x) {\n      if (x < 1 || x > 9999) {\n        throw new Error(\"Year out of Range\");\n      }\n\n      return x % 4 == 0 && (x % 100 != 0 || x % 400 == 0);\n    };\n\n    r.timeToMS = function (x, B, z, y) {\n      if (x >= 0 && x < 24 && B >= 0 && B < 60 && z >= 0 && z < 60) {\n        var A = parseInt(x * 3600 + B * 60 + z);\n\n        if (y > 0 && y < 1000) {\n          return A * r.millisPerSecond + y;\n        }\n\n        return A * r.millisPerSecond;\n      }\n    };\n\n    r.daysInMonth = function (x, y) {\n      if (y < 1 || y > 12) {\n        throw new Error(\"Month out of Range\");\n      }\n\n      var z = r.isLeapYear(x) ? r.daysToMonth366 : r.daysToMonth365;\n      return z[y] - z[y - 1];\n    };\n\n    r.arrayIndexOf = function (A, z) {\n      if (A.indexOf) {\n        return A.indexOf(z);\n      }\n\n      for (var x = 0, y = A.length; x < y; x++) {\n        if (A[x] === z) {\n          return x;\n        }\n      }\n\n      return -1;\n    };\n\n    r.startsWith = function (y, x) {\n      return y.indexOf(x) === 0;\n    };\n\n    r.endsWith = function (y, x) {\n      return y.substr(y.length - x.length) === x;\n    }, r.trim = function (x) {\n      return (x + \"\").replace(r.regexTrim, \"\");\n    };\n\n    r.expandFormat = function (B, A) {\n      A = A || \"F\";\n      var z,\n          y = B.patterns,\n          x = A.length;\n\n      if (x === 1) {\n        z = y[A];\n\n        if (!z) {\n          throw \"Invalid date format string '\" + A + \"'.\";\n        }\n\n        A = z;\n      } else {\n        if (x === 2 && A.charAt(0) === \"%\") {\n          A = A.charAt(1);\n        }\n      }\n\n      return A;\n    };\n\n    r.getEra = function (z, y) {\n      if (!y) {\n        return 0;\n      }\n\n      if (typeof z === \"string\") {\n        return 0;\n      }\n\n      var C,\n          B = z.getTime();\n\n      for (var A = 0, x = y.length; A < x; A++) {\n        C = y[A].start;\n\n        if (C === null || B >= C) {\n          return A;\n        }\n      }\n\n      return 0;\n    };\n\n    r.toUpper = function (x) {\n      return x.split(\"\\u00A0\").join(\" \").toUpperCase();\n    };\n\n    r.toUpperArray = function (x) {\n      var A = [];\n\n      for (var z = 0, y = x.length; z < y; z++) {\n        A[z] = r.toUpper(x[z]);\n      }\n\n      return A;\n    };\n\n    r.getEraYear = function (y, A, x, B) {\n      var z = y.getFullYear();\n\n      if (!B && A.eras) {\n        z -= A.eras[x].offset;\n      }\n\n      return z;\n    };\n\n    r.getDayIndex = function (B, A, y) {\n      var x,\n          C = B.days,\n          z = B._upperDays;\n\n      if (!z) {\n        B._upperDays = z = [r.toUpperArray(C.names), r.toUpperArray(C.namesAbbr), r.toUpperArray(C.namesShort)];\n      }\n\n      A = A.toUpperCase();\n\n      if (y) {\n        x = r.arrayIndexOf(z[1], A);\n\n        if (x === -1) {\n          x = r.arrayIndexOf(z[2], A);\n        }\n      } else {\n        x = r.arrayIndexOf(z[0], A);\n      }\n\n      return x;\n    };\n\n    r.getMonthIndex = function (E, D, z) {\n      var x = E.months,\n          y = E.monthsGenitive || E.months,\n          B = E._upperMonths,\n          C = E._upperMonthsGen;\n\n      if (!B) {\n        E._upperMonths = B = [r.toUpperArray(x.names), r.toUpperArray(x.namesAbbr)];\n        E._upperMonthsGen = C = [r.toUpperArray(y.names), r.toUpperArray(y.namesAbbr)];\n      }\n\n      D = r.toUpper(D);\n      var A = r.arrayIndexOf(z ? B[1] : B[0], D);\n\n      if (A < 0) {\n        A = r.arrayIndexOf(z ? C[1] : C[0], D);\n      }\n\n      return A;\n    };\n\n    r.appendPreOrPostMatch = function (A, x) {\n      var z = 0,\n          C = false;\n\n      for (var B = 0, y = A.length; B < y; B++) {\n        var D = A.charAt(B);\n\n        switch (D) {\n          case \"'\":\n            if (C) {\n              x.push(\"'\");\n            } else {\n              z++;\n            }\n\n            C = false;\n            break;\n\n          case \"\\\\\":\n            if (C) {\n              x.push(\"\\\\\");\n            }\n\n            C = !C;\n            break;\n\n          default:\n            x.push(D);\n            C = false;\n            break;\n        }\n      }\n\n      return z;\n    };\n\n    r.getTokenRegExp = function () {\n      return /\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;\n    };\n\n    r.tryparseDate = function (ad, ae, U) {\n      if (ae == undefined || ae == null) {\n        ae = r.calendar;\n      } else {\n        if (ae != null) {\n          if (ae && f.type(ae) === \"string\" && Globalize) {\n            var aj = Globalize.cultures[ae];\n\n            if (aj) {\n              ae = aj.calendar;\n            }\n          }\n        }\n      }\n\n      if (U != undefined) {\n        if (f.type(U) === \"array\") {\n          for (var ak = 0; ak < U.length; ak++) {\n            var am = r.parseDate(ad, U[ak], ae);\n\n            if (am) {\n              return am;\n            }\n          }\n        }\n\n        var am = r.parseDate(ad, U, ae);\n\n        if (am) {\n          return am;\n        }\n      }\n\n      var I = this;\n\n      if (ad == \"\") {\n        return null;\n      }\n\n      if (ad != null && !ad.substring) {\n        ad = ad.toString();\n      }\n\n      if (ad != null && ad.substring(0, 6) == \"/Date(\") {\n        var ao = /^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;\n        var al = new Date(+ad.replace(/\\/Date\\((\\d+)\\)\\//, \"$1\"));\n\n        if (al == \"Invalid Date\") {\n          var ag = ad.match(/^\\/Date\\((\\d+)([-+]\\d\\d)(\\d\\d)\\)\\/$/);\n          var al = null;\n\n          if (ag) {\n            al = new Date(1 * ag[1] + 3600000 * ag[2] + 60000 * ag[3]);\n          }\n        }\n\n        if (al == null || al == \"Invalid Date\" || isNaN(al)) {\n          var J = ao.exec(ad);\n\n          if (J) {\n            var M = new Date(parseInt(J[1]));\n\n            if (J[2]) {\n              var S = parseInt(J[3]);\n\n              if (J[2] === \"-\") {\n                S = -S;\n              }\n\n              var O = M.getUTCMinutes();\n              M.setUTCMinutes(O - S);\n            }\n\n            if (!isNaN(M.valueOf())) {\n              return M;\n            }\n          }\n        }\n\n        return al;\n      }\n\n      var G = {\n        jqxdate: \"yyyy-MM-dd HH:mm:ss\",\n        d: \"M/d/yyyy\",\n        D: \"dddd, MMMM dd, yyyy\",\n        t: \"h:mm tt\",\n        T: \"h:mm:ss tt\",\n        f: \"dddd, MMMM dd, yyyy h:mm tt\",\n        F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n        M: \"MMMM dd\",\n        Y: \"yyyy MMMM\",\n        S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",\n        ISO: \"yyyy-MM-dd hh:mm:ss\",\n        ISO2: \"yyyy-MM-dd HH:mm:ss\",\n        ISO8601: \"yyyy-MM-ddTHH:mm:ss.sssZ\",\n        d1: \"dd.MM.yyyy\",\n        d2: \"dd-MM-yyyy\",\n        d3: \"MM-dd-yyyy\",\n        d4: \"MM.dd.yyyy\",\n        zone1: \"yyyy-MM-ddTHH:mm:ss-HH:mm\",\n        zone2: \"yyyy-MM-ddTHH:mm:ss+HH:mm\",\n        custom: \"yyyy-MM-ddTHH:mm:ss.fff\",\n        custom2: \"yyyy-MM-dd HH:mm:ss.fff\",\n        iso: \"yyyy-MM-ddTHH:mm:ssZ\",\n        iso_date1: \"yyyy-MM-dd\",\n        iso_date2: \"yyyy-MM-dd\",\n        iso_date3: \"yyyy-ddd\",\n        iso_date4: \"yyyy-MM-dd HH:mm\",\n        iso_date5: \"yyyy-MM-dd HH:mm Z\",\n        iso_date6: \"yyyy-MMM-dd\",\n        iso_date7: \"yyyy-MM\",\n        iso_date8: \"yyyy-MMM\",\n        iso_date9: \"yyyy-MMMM\",\n        iso_date10: \"yyyy-MMMM-dd\",\n        iso_time1: \"HH:mm:ss.tttt\",\n        iso_time2: \"HH:mm:ss\",\n        iso_time3: \"HH:mm\",\n        iso_time4: \"HH\",\n        iso_time5: \"yyyyyy-MM-dd\",\n        iso_time6: \"yyyyyy-MM-dd\"\n      };\n\n      for (var L in G) {\n        al = r.parseDate(ad, G[L], ae);\n\n        if (al) {\n          return al;\n        }\n      }\n\n      var F = ae.patterns;\n\n      for (L in F) {\n        al = r.parseDate(ad, F[L], ae);\n\n        if (al) {\n          if (L == \"ISO\") {\n            var W = r.parseDate(ad, F.ISO2, ae);\n\n            if (W) {\n              return W;\n            }\n          }\n\n          return al;\n        }\n      }\n\n      if (f.type(ad) === \"string\") {\n        ad = r.trim(ad);\n        var af = [\":\", \"/\", \"-\", \" \", \",\"];\n\n        var E = function (at, y, ar) {\n          return ar.replace(new RegExp(at, \"g\"), y);\n        };\n\n        ad = E(\", \", \",\", ad);\n        var A = \"\";\n        var R = ad;\n\n        if (ad.indexOf(\":\") >= 0) {\n          A = ad.substring(ad.indexOf(\":\") - 2);\n          A = r.trim(A);\n          R = ad.substring(0, ad.indexOf(\":\") - 2);\n        } else {\n          if (ad.toUpperCase().indexOf(\"AM\") >= 0) {\n            A = ad.substring(ad.toUpperCase().indexOf(\"AM\") - 2);\n            A = r.trim(A);\n            R = ad.substring(0, ad.toUpperCase().indexOf(\"AM\") - 2);\n          } else {\n            if (ad.toUpperCase().indexOf(\"PM\") >= 0) {\n              A = ad.substring(ad.toUpperCase().indexOf(\"PM\") - 2);\n              A = r.trim(A);\n              R = ad.substring(0, ad.toUpperCase().indexOf(\"PM\") - 2);\n            }\n          }\n        }\n\n        var x = new Date();\n        var ac = false;\n\n        if (R) {\n          for (var ak = 0; ak < af.length; ak++) {\n            if (R.indexOf(af[ak]) >= 0) {\n              D = R.split(af[ak]);\n              break;\n            }\n          }\n\n          var z = new Array();\n          var P = new Array();\n          var Y = new Array();\n          var K = null;\n          var aq = null;\n\n          for (var ak = 0; ak < D.length; ak++) {\n            var H = D[ak];\n            var X = r.parseDate(H, \"d\", ae) || r.parseDate(H, \"dd\", ae) || r.parseDate(H, \"ddd\", ae) || r.parseDate(H, \"dddd\", ae);\n\n            if (X) {\n              z.push(X.getDate());\n\n              if (H.length > 2) {\n                K = ak;\n                break;\n              }\n            }\n          }\n\n          for (var ak = 0; ak < D.length; ak++) {\n            var H = D[ak];\n            var N = r.parseDate(H, \"M\", ae) || r.parseDate(H, \"MM\", ae) || r.parseDate(H, \"MMM\", ae) || r.parseDate(H, \"MMMM\", ae);\n\n            if (N) {\n              if (K != undefined && K == ak) {\n                continue;\n              }\n\n              P.push(N.getMonth());\n\n              if (H.length > 2) {\n                aq = ak;\n                break;\n              }\n            }\n          }\n\n          for (var ak = 0; ak < D.length; ak++) {\n            var H = D[ak];\n            var Z = r.parseDate(H, \"yyyy\", ae);\n\n            if (Z) {\n              if (K != undefined && K == ak) {\n                continue;\n              }\n\n              if (aq != undefined && aq == ak) {\n                continue;\n              }\n\n              Y.push(Z.getFullYear());\n            }\n          }\n\n          var ah = new Array();\n\n          for (var an = 0; an < z.length; an++) {\n            for (var ag = 0; ag < P.length; ag++) {\n              for (var ab = 0; ab < Y.length; ab++) {\n                var M = new Date(Y[ab], P[ag], z[an]);\n\n                if (Y[ab] < 1970) {\n                  M.setFullYear(Y[ab]);\n                }\n\n                if (M.getTime() != NaN) {\n                  ah.push(M);\n                }\n              }\n            }\n          }\n\n          if (ah.length > 0) {\n            x = ah[0];\n            ac = true;\n          }\n        }\n\n        if (A) {\n          var aa = A.indexOf(\":\") >= 0 ? A.split(\":\") : A;\n          var C = r.parseDate(A, \"h:mm tt\", ae) || r.parseDate(A, \"HH:mm:ss.fff\", ae) || r.parseDate(A, \"HH:mm:ss.ff\", ae) || r.parseDate(A, \"h:mm:ss tt\", ae) || r.parseDate(A, \"HH:mm:ss.tttt\", ae) || r.parseDate(A, \"HH:mm:ss\", ae) || r.parseDate(A, \"HH:mm\", ae) || r.parseDate(A, \"HH\", ae);\n          var Q = 0,\n              B = 0,\n              T = 0,\n              V = 0;\n\n          if (C && C.getTime() != NaN) {\n            Q = C.getHours();\n            B = C.getMinutes();\n            T = C.getSeconds();\n            V = C.getMilliseconds();\n          } else {\n            if (aa.length == 1) {\n              Q = parseInt(aa[0]);\n            }\n\n            if (aa.length == 2) {\n              Q = parseInt(aa[0]);\n              B = parseInt(aa[1]);\n            }\n\n            if (aa.length == 3) {\n              Q = parseInt(aa[0]);\n              B = parseInt(aa[1]);\n\n              if (aa[2].indexOf(\".\") >= 0) {\n                T = parseInt(aa[2].toString().split(\".\")[0]);\n                V = parseInt(aa[2].toString().split(\".\")[1]);\n              } else {\n                T = parseInt(aa[2]);\n              }\n            }\n\n            if (aa.length == 4) {\n              Q = parseInt(aa[0]);\n              B = parseInt(aa[1]);\n              T = parseInt(aa[2]);\n              V = parseInt(aa[3]);\n            }\n          }\n\n          if (x && !isNaN(Q) && !isNaN(B) && !isNaN(T) && !isNaN(V)) {\n            x.setHours(Q, B, T, V);\n            ac = true;\n          }\n        }\n\n        if (ac) {\n          return x;\n        }\n      }\n\n      if (ad != null) {\n        var W = null;\n        var D = [\":\", \"/\", \"-\"];\n        var ai = true;\n\n        for (var H = 0; H < D.length; H++) {\n          if (ad.indexOf(D[H]) != -1) {\n            ai = false;\n          }\n        }\n\n        if (ai) {\n          var ap = new Number(ad);\n\n          if (!isNaN(ap)) {\n            return new Date(ap);\n          }\n        }\n      }\n\n      return null;\n    };\n\n    r.getParseRegExp = function (x, I) {\n      var K = x._parseRegExp;\n\n      if (!K) {\n        x._parseRegExp = K = {};\n      } else {\n        var B = K[I];\n\n        if (B) {\n          return B;\n        }\n      }\n\n      var H = r.expandFormat(x, I).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g, \"\\\\\\\\$1\"),\n          F = [\"^\"],\n          y = [],\n          E = 0,\n          A = 0,\n          N = r.getTokenRegExp(),\n          C;\n\n      while ((C = N.exec(H)) !== null) {\n        var M = H.slice(E, C.index);\n        E = N.lastIndex;\n        A += r.appendPreOrPostMatch(M, F);\n\n        if (A % 2) {\n          F.push(C[0]);\n          continue;\n        }\n\n        var z = C[0],\n            D = z.length,\n            J;\n\n        switch (z) {\n          case \"dddd\":\n          case \"ddd\":\n          case \"MMMM\":\n          case \"MMM\":\n          case \"gg\":\n          case \"g\":\n            J = \"(\\\\D+)\";\n            break;\n\n          case \"tt\":\n          case \"t\":\n            J = \"(\\\\D*)\";\n            break;\n\n          case \"yyyy\":\n          case \"fff\":\n          case \"ff\":\n          case \"f\":\n            J = \"(\\\\d{\" + D + \"})\";\n            break;\n\n          case \"dd\":\n          case \"d\":\n          case \"MM\":\n          case \"M\":\n          case \"yy\":\n          case \"y\":\n          case \"HH\":\n          case \"H\":\n          case \"hh\":\n          case \"h\":\n          case \"mm\":\n          case \"m\":\n          case \"ss\":\n          case \"s\":\n            J = \"(\\\\d\\\\d?)\";\n            break;\n\n          case \"zzz\":\n            J = \"([+-]?\\\\d\\\\d?:\\\\d{2})\";\n            break;\n\n          case \"zz\":\n          case \"z\":\n            J = \"([+-]?\\\\d\\\\d?)\";\n            break;\n\n          case \"/\":\n            J = \"(\\\\\" + x[\"/\"] + \")\";\n            break;\n\n          default:\n            throw \"Invalid date format pattern '\" + z + \"'.\";\n            break;\n        }\n\n        if (J) {\n          F.push(J);\n        }\n\n        y.push(C[0]);\n      }\n\n      r.appendPreOrPostMatch(H.slice(E), F);\n      F.push(\"$\");\n      var L = F.join(\"\").replace(/\\s+/g, \"\\\\s+\"),\n          G = {\n        regExp: L,\n        groups: y\n      };\n      return K[I] = G;\n    };\n\n    r.outOfRange = function (z, x, y) {\n      return z < x || z > y;\n    };\n\n    r.expandYear = function (C, A) {\n      var y = new Date(),\n          x = r.getEra(y);\n\n      if (A < 100) {\n        var z = C.twoDigitYearMax;\n        z = typeof z === \"string\" ? new Date().getFullYear() % 100 + parseInt(z, 10) : z;\n        var B = r.getEraYear(y, C, x);\n        A += B - B % 100;\n\n        if (A > z) {\n          A -= 100;\n        }\n      }\n\n      return A;\n    };\n\n    r.parseDate = function (S, Z, N) {\n      if (N == undefined || N == null) {\n        N = r.calendar;\n      }\n\n      S = r.trim(S);\n      var K = N,\n          ae = r.getParseRegExp(K, Z),\n          E = new RegExp(ae.regExp).exec(S);\n\n      if (E === null) {\n        return null;\n      }\n\n      var aa = ae.groups,\n          Q = null,\n          I = null,\n          ad = null,\n          ac = null,\n          J = null,\n          C = 0,\n          V,\n          U = 0,\n          ab = 0,\n          x = 0,\n          z = null,\n          L = false;\n\n      for (var W = 0, Y = aa.length; W < Y; W++) {\n        var y = E[W + 1];\n\n        if (y) {\n          var R = aa[W],\n              B = R.length,\n              D = parseInt(y, 10);\n\n          switch (R) {\n            case \"dd\":\n            case \"d\":\n              ac = D;\n\n              if (r.outOfRange(ac, 1, 31)) {\n                return null;\n              }\n\n              break;\n\n            case \"MMM\":\n            case \"MMMM\":\n            case \"MMMMM\":\n            case \"MMMMMM\":\n            case \"MMMMMMM\":\n            case \"MMMMMMMM\":\n              ad = r.getMonthIndex(K, y, B === 3);\n\n              if (r.outOfRange(ad, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"M\":\n            case \"MM\":\n              ad = D - 1;\n\n              if (r.outOfRange(ad, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"y\":\n            case \"yy\":\n            case \"yyyy\":\n              I = B < 4 ? r.expandYear(K, D) : D;\n\n              if (r.outOfRange(I, 0, 9999)) {\n                return null;\n              }\n\n              break;\n\n            case \"h\":\n            case \"hh\":\n              C = D;\n\n              if (C === 12) {\n                C = 0;\n              }\n\n              if (r.outOfRange(C, 0, 11)) {\n                return null;\n              }\n\n              break;\n\n            case \"H\":\n            case \"HH\":\n              C = D;\n\n              if (r.outOfRange(C, 0, 23)) {\n                return null;\n              }\n\n              break;\n\n            case \"m\":\n            case \"mm\":\n              U = D;\n\n              if (r.outOfRange(U, 0, 59)) {\n                return null;\n              }\n\n              break;\n\n            case \"s\":\n            case \"ss\":\n              ab = D;\n\n              if (r.outOfRange(ab, 0, 59)) {\n                return null;\n              }\n\n              break;\n\n            case \"tt\":\n            case \"t\":\n              L = K.PM && (y === K.PM[0] || y === K.PM[1] || y === K.PM[2]);\n\n              if (!L && (!K.AM || y !== K.AM[0] && y !== K.AM[1] && y !== K.AM[2])) {\n                return null;\n              }\n\n              break;\n\n            case \"f\":\n            case \"ff\":\n            case \"fff\":\n              x = D * Math.pow(10, 3 - B);\n\n              if (r.outOfRange(x, 0, 999)) {\n                return null;\n              }\n\n              break;\n\n            case \"ddd\":\n            case \"dddd\":\n              J = r.getDayIndex(K, y, B === 3);\n\n              if (r.outOfRange(J, 0, 6)) {\n                return null;\n              }\n\n              break;\n\n            case \"zzz\":\n              var A = y.split(/:/);\n\n              if (A.length !== 2) {\n                return null;\n              }\n\n              V = parseInt(A[0], 10);\n\n              if (r.outOfRange(V, -12, 13)) {\n                return null;\n              }\n\n              var G = parseInt(A[1], 10);\n\n              if (r.outOfRange(G, 0, 59)) {\n                return null;\n              }\n\n              z = V * 60 + (r.startsWith(y, \"-\") ? -G : G);\n              break;\n\n            case \"z\":\n            case \"zz\":\n              V = D;\n\n              if (r.outOfRange(V, -12, 13)) {\n                return null;\n              }\n\n              z = V * 60;\n              break;\n\n            case \"g\":\n            case \"gg\":\n              var M = y;\n\n              if (!M || !K.eras) {\n                return null;\n              }\n\n              M = M.trim().toLowerCase();\n\n              for (var X = 0, T = K.eras.length; X < T; X++) {\n                if (M === K.eras[X].nathat.toLowerCase()) {\n                  Q = X;\n                  break;\n                }\n              }\n\n              if (Q === null) {\n                return null;\n              }\n\n              break;\n          }\n        }\n      }\n\n      var H = new Date(),\n          P,\n          F = K.convert;\n      P = H.getFullYear();\n\n      if (I === null) {\n        I = P;\n      } else {\n        if (K.eras) {\n          I += K.eras[Q || 0].offset;\n        }\n      }\n\n      if (ad === null) {\n        ad = 0;\n      }\n\n      if (ac === null) {\n        ac = 1;\n      }\n\n      if (F) {\n        H = F.toGregorian(I, ad, ac);\n\n        if (H === null) {\n          return null;\n        }\n      } else {\n        H.setFullYear(I, ad, ac);\n\n        if (H.getDate() !== ac) {\n          return null;\n        }\n\n        if (J !== null && H.getDay() !== J) {\n          return null;\n        }\n      }\n\n      if (L && C < 12) {\n        C += 12;\n      }\n\n      H.setHours(C, U, ab, x);\n\n      if (z !== null) {\n        var O = H.getMinutes() - (z + H.getTimezoneOffset());\n        H.setHours(H.getHours() + parseInt(O / 60, 10), O % 60);\n      }\n\n      return H;\n    }, r.toString = function (U, L) {\n      if (U === undefined) {\n        U = \"yyyy-MM-dd HH:mm:ss\";\n      }\n\n      if (f.jqx.date.cache && f.jqx.date.cache[r.dateData + U]) {\n        return f.jqx.date.cache[r.dateData + U];\n      }\n\n      if (L && f.type(L) === \"string\" && Globalize) {\n        var V = Globalize.cultures[L];\n\n        if (V) {\n          L = V.calendar;\n        }\n      }\n\n      var Q = r.toDate();\n\n      if (L == undefined || L == null) {\n        L = r.calendar;\n      }\n\n      if (typeof Q === \"string\") {\n        return Q;\n      }\n\n      var A = Q.toString() + \"_\" + U;\n\n      if (!U || !U.length || U === \"i\") {\n        var X;\n        X = r.formatDate(Q, L.patterns.F, L);\n        return X;\n      }\n\n      var R = L.eras,\n          y = U === \"s\";\n      U = r.expandFormat(L, U);\n      X = [];\n      var D,\n          S = [\"0\", \"00\", \"000\"],\n          H,\n          I,\n          x = /([^d]|^)(d|dd)([^d]|$)/g,\n          W = 0,\n          N = r.getTokenRegExp(),\n          z;\n\n      function F(Y, ab) {\n        var aa,\n            Z = Y + \"\";\n\n        if (ab > 1 && Z.length < ab) {\n          aa = S[ab - 2] + Z;\n          return aa.substr(aa.length - ab, ab);\n        } else {\n          aa = Z;\n        }\n\n        return aa;\n      }\n\n      function T() {\n        if (H || I) {\n          return H;\n        }\n\n        H = x.test(U);\n        I = true;\n        return H;\n      }\n\n      function B(Z, Y) {\n        if (z) {\n          return z[Y];\n        }\n\n        if (Z.getMonth != undefined) {\n          switch (Y) {\n            case 0:\n              return Z.getFullYear();\n\n            case 1:\n              return Z.getMonth();\n\n            case 2:\n              return Z.getDate();\n          }\n        }\n      }\n\n      for (;;) {\n        var E = N.lastIndex,\n            M = N.exec(U);\n        var J = U.slice(E, M ? M.index : U.length);\n        W += r.appendPreOrPostMatch(J, X);\n\n        if (!M) {\n          break;\n        }\n\n        if (W % 2) {\n          X.push(M[0]);\n          continue;\n        }\n\n        var O = M[0],\n            C = O.length;\n\n        switch (O) {\n          case \"ddd\":\n          case \"dddd\":\n            var K = C === 3 ? L.days.namesAbbr : L.days.names;\n            X.push(K[Q.getDay()]);\n            break;\n\n          case \"d\":\n          case \"dd\":\n            H = true;\n            X.push(F(B(Q, 2), C));\n            break;\n\n          case \"MMM\":\n          case \"MMMM\":\n            var P = B(Q, 1);\n            X.push(L.months[C === 3 ? \"namesAbbr\" : \"names\"][P]);\n            break;\n\n          case \"M\":\n          case \"MM\":\n            X.push(F(B(Q, 1) + 1, C));\n            break;\n\n          case \"y\":\n          case \"yy\":\n          case \"yyyy\":\n            P = r.getEraYear(Q, L, r.getEra(Q, R), y);\n\n            if (C < 4) {\n              P = P % 100;\n            }\n\n            X.push(F(P, C));\n            break;\n\n          case \"h\":\n          case \"hh\":\n            D = Q.getHours() % 12;\n\n            if (D === 0) {\n              D = 12;\n            }\n\n            X.push(F(D, C));\n            break;\n\n          case \"H\":\n          case \"HH\":\n            X.push(F(Q.getHours(), C));\n            break;\n\n          case \"m\":\n          case \"mm\":\n            X.push(F(Q.getMinutes(), C));\n            break;\n\n          case \"s\":\n          case \"ss\":\n            X.push(F(Q.getSeconds(), C));\n            break;\n\n          case \"t\":\n          case \"tt\":\n            P = Q.getHours() < 12 ? L.AM ? L.AM[0] : \" \" : L.PM ? L.PM[0] : \" \";\n            X.push(C === 1 ? P.charAt(0) : P);\n            break;\n\n          case \"f\":\n          case \"ff\":\n          case \"fff\":\n            X.push(F(Q.getMilliseconds(), 3).substr(0, C));\n            break;\n\n          case \"z\":\n          case \"zz\":\n            D = Q.getTimezoneOffset() / 60;\n            X.push((D <= 0 ? \"+\" : \"-\") + F(Math.floor(Math.abs(D)), C));\n            break;\n\n          case \"zzz\":\n            D = Q.getTimezoneOffset() / 60;\n            X.push((D <= 0 ? \"+\" : \"-\") + F(Math.floor(Math.abs(D)), 2) + \":\" + F(Math.abs(Q.getTimezoneOffset() % 60), 2));\n            break;\n\n          case \"g\":\n          case \"gg\":\n            if (L.eras) {\n              X.push(L.eras[r.getEra(Q, R)].name);\n            }\n\n            break;\n\n          case \"/\":\n            X.push(L[\"/\"]);\n            break;\n\n          default:\n            throw \"Invalid date format pattern '\" + O + \"'.\";\n            break;\n        }\n      }\n\n      var G = X.join(\"\");\n\n      if (!f.jqx.date.cache) {\n        f.jqx.date.cache = new Array();\n      }\n\n      f.jqx.date.cache[r.dateData + U] = G;\n      return G;\n    };\n\n    r.add = function (B, C, y) {\n      var z = r.internalMS();\n\n      if (C === undefined) {\n        if (y === false) {\n          r.dateData = z + parseInt(B._ticks / r.ticksPerMillisecond);\n          return r;\n        }\n\n        var x = new f.jqx.date(z + parseInt(B._ticks / r.ticksPerMillisecond));\n        x.timeZone = r.timeZone;\n        return x;\n      }\n\n      var A = B * C;\n\n      if (A <= -r.maxMillis || A >= r.maxMillis) {\n        throw new Error(\"Out of Range\");\n      }\n\n      if (y === false) {\n        r.dateData = z + A;\n        return r;\n      }\n\n      var x = new f.jqx.date(z + A);\n      x.timeZone = r.timeZone;\n      return x;\n    };\n\n    r.addDays = function (y, x) {\n      return r.add(y, r.millisPerDay, x);\n    };\n\n    r.clone = function () {\n      var x = new f.jqx.date(r.dateData);\n      x.timeZone = r.timeZone;\n      return x;\n    };\n\n    r.clearTime = function () {\n      var A = r.month();\n      var z = r.year();\n      var y = r.day();\n      var x = new f.jqx.date(z, A, y, 0, 0, 0, 0);\n      x.timeZone = r.timeZone;\n      return x;\n    };\n\n    r.addHours = function (y, x) {\n      return r.add(y, r.millisPerHour, x);\n    };\n\n    r.addMilliseconds = function (y, x) {\n      return r.add(y, 1, x);\n    };\n\n    r.addMinutes = function (y, x) {\n      return r.add(y, r.millisPerMinute, x);\n    };\n\n    r.addMonths = function (z, B) {\n      if (z < -120000 || z > 120000) {\n        throw new Error(\"Invalid Months Value\");\n      }\n\n      var F = parseInt(r.getDatePart(r.datePartYear));\n      var x = parseInt(r.getDatePart(r.datePartMonth));\n      var D = parseInt(r.getDatePart(r.datePartDay));\n      var C = x - 1 + z;\n\n      if (C >= 0) {\n        x = C % 12 + 1;\n        F = F + C / 12;\n      } else {\n        x = 12 + (C + 1) % 12;\n        F = F + (C - 11) / 12;\n      }\n\n      F = parseInt(F);\n\n      if (F < 1 || F > 9999) {\n        throw new Error(\"Year out of range\");\n      }\n\n      var E = r.daysInMonth(F, x);\n\n      if (D > E) {\n        D = E;\n      }\n\n      if (B === false) {\n        r.dateData = r.dateToMS(F, x, D) + r.internalMS() % r.millisPerDay;\n        return r;\n      }\n\n      var A = new f.jqx.date(r.dateToMS(F, x, D) + r.internalMS() % r.millisPerDay);\n      A.timeZone = r.timeZone;\n      return A;\n    };\n\n    r.addSeconds = function (y, x) {\n      return r.add(y, r.millisPerSecond, x);\n    };\n\n    r.addYears = function (y, x) {\n      return r.addMonths(y * 12, x);\n    };\n\n    r.getTimeZoneOffset = function () {\n      var y = new Date();\n      var x = new Date(y.getFullYear(), 0, 1);\n      var z = new Date(y.getFullYear(), 6, 1);\n      var A = y.getTimezoneOffset() < Math.max(x.getTimezoneOffset(), z.getTimezoneOffset());\n      return {\n        offset: -(y.getTimezoneOffset() / 60),\n        dst: +A\n      };\n    };\n\n    r.isInDaylightSavingTime = function () {\n      var y = new Date();\n      var z = new Date(y.getFullYear(), 0, 1);\n      var x = new Date(y.getFullYear(), 6, 1);\n      return r.date().getTimezoneOffset() < Math.max(z.getTimezoneOffset(), x.getTimezoneOffset());\n    };\n\n    r.supportsDaylightSavingTime = function () {\n      var y = new Date();\n      var z = new Date(y.getFullYear(), 0, 1);\n      var x = new Date(y.getFullYear(), 6, 1);\n      return z.getTimezoneOffset() != x.getTimezoneOffset();\n    };\n\n    r.date = function () {\n      var A = r.month();\n      var z = r.year();\n      var y = r.day();\n      var x = new f.jqx.date(z, A, y);\n      x.timeZone = r.timeZone;\n      return x;\n    };\n\n    r.isWeekend = function () {\n      return r.dayOfWeek() == 0 || r.dayOfWeek() == 6;\n    };\n\n    r.toDate = function (J) {\n      var E = r.month();\n      var F = r.year();\n      var G = r.day();\n      var A = r.hour();\n      var z = r.minute();\n      var x = r.second();\n      var L = r.millisecond();\n      var K = new Date(F, E - 1, G);\n\n      if (F < 1970) {\n        K.setFullYear(F);\n      }\n\n      K.setHours(A, z, x, L);\n\n      if (J) {\n        var D = r.timeZones.filter(function (M) {\n          return M.id == J;\n        });\n\n        if (D.length) {\n          var B = D[0].offset;\n\n          if (J == \"Local\") {\n            B = -K.getTimezoneOffset();\n          }\n\n          var C = K.getTime();\n          var I = K.getTimezoneOffset() * 60 * 1000;\n\n          if (r.timeZone) {\n            var y = r.timeZones.filter(function (M) {\n              return M.id == r.timeZone;\n            });\n\n            if (y.length) {\n              var I = -y[0].offset * 60 * 1000;\n            }\n          }\n\n          var H = C + I;\n          K = new Date(H + 60 * 1000 * B);\n        }\n      }\n\n      return K;\n    };\n\n    r.toTimeZone = function (y) {\n      var A = y;\n\n      if (A == null) {\n        A = \"Local\";\n      }\n\n      var x = r.toDate(A);\n      var z = new f.jqx.date(x);\n      z.timeZone = y;\n      return z;\n    };\n\n    r.day = function () {\n      return r.getDatePart(r.datePartDay);\n    };\n\n    r.month = function () {\n      return r.getDatePart(r.datePartMonth);\n    };\n\n    r.year = function () {\n      return r.getDatePart(r.datePartYear);\n    };\n\n    r.millisecond = function () {\n      return parseInt(r.internalMS() % 1000);\n    };\n\n    r.hour = function () {\n      return parseInt(r.internalMS() / r.millisPerHour % 24);\n    };\n\n    r.minute = function () {\n      return parseInt(r.internalMS() / r.millisPerMinute % 60);\n    };\n\n    r.second = function () {\n      return parseInt(r.internalMS() / r.millisPerSecond % 60);\n    };\n\n    r.valueOf = function () {\n      return r.dateData;\n    };\n\n    r.equals = function (x) {\n      return r.dateData === x.dateData;\n    };\n\n    if (arguments.length === 0) {\n      var o = new Date();\n      r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n    } else {\n      if (arguments.length === 1) {\n        if (arguments[0] == undefined) {\n          arguments[0] = \"todayDate\";\n        }\n\n        var v = typeof arguments[0] === \"number\" && isFinite(arguments[0]);\n\n        if (!v && f.type(arguments[0]) === \"string\") {\n          if (arguments[0] === \"today\") {\n            var o = new Date();\n            r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n          } else {\n            if (arguments[0] === \"todayDate\") {\n              var o = new Date();\n              o.setHours(0, 0, 0, 0);\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            } else {\n              var o = r.tryparseDate(arguments[0]);\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            }\n          }\n        } else {\n          if (typeof arguments[0] === \"number\") {\n            r.dateData = arguments[0];\n          } else {\n            if (f.type(arguments[0]) == \"date\") {\n              var o = arguments[0];\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            } else {\n              if (arguments[0].dateData !== undefined) {\n                r.dateData = arguments[0].dateData;\n              } else {\n                r.dateData = arguments[0];\n              }\n            }\n          }\n        }\n      } else {\n        if (arguments.length === 2) {\n          if (arguments[0] == undefined) {\n            arguments[0] = \"todayDate\";\n          }\n\n          var v = typeof arguments[0] === \"number\" && isFinite(arguments[0]);\n\n          if (!v && f.type(arguments[0]) === \"string\") {\n            if (arguments[0] === \"today\") {\n              var o = new Date();\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            } else {\n              if (arguments[0] === \"todayDate\") {\n                var o = new Date();\n                o.setHours(0, 0, 0, 0);\n                r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n              } else {\n                var o = r.tryparseDate(arguments[0]);\n                r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n              }\n            }\n          } else {\n            if (typeof arguments[0] === \"number\") {\n              r.dateData = arguments[0];\n            } else {\n              if (f.type(arguments[0]) == \"date\") {\n                var o = arguments[0];\n                r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n              } else {\n                if (arguments[0].dateData !== undefined) {\n                  r.dateData = arguments[0].dateData;\n                } else {\n                  r.dateData = arguments[0];\n                }\n              }\n            }\n          }\n\n          r.timeZone = arguments[1];\n        } else {\n          if (arguments.length > 2) {\n            if (f.type(arguments[0]) === \"string\") {\n              var o = r.tryparseDate(arguments[0], arguments[2], arguments[1]);\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            } else {\n              var t = arguments[0];\n              var s = arguments[1];\n              var u = arguments[2];\n              var q = arguments[3];\n              var p = arguments[4];\n              var n = arguments[5];\n              var w = arguments[6];\n\n              if (q === undefined) {\n                q = 0;\n              }\n\n              if (p === undefined) {\n                p = 0;\n              }\n\n              if (n === undefined) {\n                n = 0;\n              }\n\n              if (w === undefined) {\n                w = 0;\n              }\n\n              s--;\n              var o = new Date(t, s, u, q, p, n, w);\n\n              if (t < 1970) {\n                o.setFullYear(t);\n              }\n\n              r.dateData = r.dateToMS(o.getFullYear(), o.getMonth() + 1, o.getDate()) + r.timeToMS(o.getHours(), o.getMinutes(), o.getSeconds(), o.getMilliseconds());\n            }\n          }\n        }\n      }\n    }\n\n    return r;\n  };\n})(jqxBaseFramework);\n\nif (!Array.prototype.filter) {\n  Array.prototype.filter = function (b) {\n    if (this === void 0 || this === null) {\n      throw new TypeError();\n    }\n\n    var f = Object(this);\n    var a = f.length >>> 0;\n\n    if (typeof b !== \"function\") {\n      throw new TypeError();\n    }\n\n    var e = [];\n    var d = arguments[1];\n\n    for (var c = 0; c < a; c++) {\n      if (c in f) {\n        var g = f[c];\n\n        if (b.call(d, g, c, f)) {\n          e.push(g);\n        }\n      }\n    }\n\n    return e;\n  };\n}\n\n;","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/node_modules/jqwidgets-scripts/jqwidgets/jqxdate.js"],"names":["f","jqx","timeSpan","q","ticksPerMillisecond","millisecondsPerTick","ticksPerSecond","secondsPerTick","ticksPerMinute","minutesPerTick","ticksPerHour","hoursPerTick","ticksPerDay","daysPerTick","millisPerSecond","millisPerMinute","millisPerHour","millisPerDay","_ticks","extend","r","ticks","days","parseInt","timeToMS","v","z","x","w","y","hours","milliseconds","minutes","seconds","totalDays","totalHours","totalMilliseconds","totalMinutes","totalSeconds","arguments","length","u","n","p","t","o","s","add","substract","duration","equals","valueOf","compare","interval","fromDays","fromHours","fromMilliseconds","fromMinutes","fromSeconds","fromTicks","g","id","offset","offsetHours","displayName","supportsDaylightSavingTime","a","m","j","c","h","d","b","l","k","i","e","date","daysPerYear","daysPer4Years","daysPer100Years","daysPer400Years","daysTo1601","daysTo1899","daysTo10000","minTicks","maxTicks","maxMillis","datePartYear","datePartDayOfYear","datePartMonth","datePartDay","daysToMonth365","daysToMonth366","minValue","Date","maxValue","ticksMask","flagsMask","localMask","ticksCeiling","kindUnspecified","kindUtc","kindLocal","kindLocalAmbiguousDst","kindShift","regexTrim","regexInfinity","regexHex","regexParseFloat","calendar","firstDay","names","namesAbbr","namesShort","months","AM","PM","eras","name","start","twoDigitYearMax","patterns","D","T","F","M","Y","S","ISO","ISO2","d1","d2","zone1","zone2","custom","custom2","percentsymbol","currencysymbol","currencysymbolposition","decimalseparator","thousandsseparator","dateData","timeZone","timeZones","internalMS","getDatePart","G","B","E","C","A","dayOfWeek","dayOfYear","weekOfYear","toDate","getFullYear","getDay","Math","floor","getTime","getTimezoneOffset","subtract","dateToMS","isLeapYear","Error","daysInMonth","arrayIndexOf","indexOf","startsWith","endsWith","substr","trim","replace","expandFormat","charAt","getEra","toUpper","split","join","toUpperCase","toUpperArray","getEraYear","getDayIndex","_upperDays","getMonthIndex","monthsGenitive","_upperMonths","_upperMonthsGen","appendPreOrPostMatch","push","getTokenRegExp","tryparseDate","ad","ae","U","undefined","type","Globalize","aj","cultures","ak","am","parseDate","I","substring","toString","ao","al","ag","match","isNaN","J","exec","O","getUTCMinutes","setUTCMinutes","jqxdate","ISO8601","d3","d4","iso","iso_date1","iso_date2","iso_date3","iso_date4","iso_date5","iso_date6","iso_date7","iso_date8","iso_date9","iso_date10","iso_time1","iso_time2","iso_time3","iso_time4","iso_time5","iso_time6","L","W","af","at","ar","RegExp","R","ac","Array","P","K","aq","H","X","getDate","N","getMonth","Z","ah","an","ab","setFullYear","NaN","aa","Q","V","getHours","getMinutes","getSeconds","getMilliseconds","setHours","ai","ap","Number","getParseRegExp","_parseRegExp","slice","index","lastIndex","regExp","groups","outOfRange","expandYear","pow","toLowerCase","nathat","convert","toGregorian","cache","formatDate","test","abs","addDays","clone","clearTime","month","year","day","addHours","addMilliseconds","addMinutes","addMonths","addSeconds","addYears","getTimeZoneOffset","max","dst","isInDaylightSavingTime","isWeekend","hour","minute","second","millisecond","filter","toTimeZone","isFinite","jqxBaseFramework","prototype","TypeError","Object","call"],"mappings":"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","sourcesContent":["/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\r\n/* eslint-disable */\r\n\r\n(function(f){f.jqx.timeSpan=function(){var q={ticksPerMillisecond:10000,millisecondsPerTick:1/10000,ticksPerSecond:1000*10000,secondsPerTick:1/(1000*10000),ticksPerMinute:1000*10000*60,minutesPerTick:1/(1000*10000*60),ticksPerHour:1000*10000*3600,hoursPerTick:1/(1000*10000*3600),ticksPerDay:1000*10000*3600*24,daysPerTick:1/(1000*10000*3600*24),millisPerSecond:1000,millisPerMinute:1000*60,millisPerHour:1000*60*60,millisPerDay:1000*60*60*24,_ticks:0};f.extend(true,this,q);var r=this;r.ticks=function(){return r._ticks};r.days=function(){return parseInt(r._ticks/r.ticksPerDay)};r.timeToMS=function(v,z,x,w){var y=v*3600+z*60+x+w/1000;return parseInt(y*r.ticksPerSecond)};r.hours=function(){return parseInt(r._ticks/r.ticksPerHour)%24};r.milliseconds=function(){return parseInt(r._ticks/r.ticksPerMillisecond)%1000};r.minutes=function(){return parseInt(r._ticks/r.ticksPerMinute)%60};r.seconds=function(){return parseInt(r._ticks/r.ticksPerSecond)%60};r.totalDays=function(){return parseInt(r._ticks*r.daysPerTick)};r.totalHours=function(){return parseInt(r._ticks*r.hoursPerTick)};r.totalMilliseconds=function(){var v=r._ticks*r.millisecondsPerTick;return parseInt(v)};r.totalMinutes=function(){return parseInt(r._ticks*r.minutesPerTick)};r.totalSeconds=function(){return parseInt(r._ticks*r.secondsPerTick)};if(arguments.length===1){r._ticks=arguments[0]}else{if(arguments.length===3){r._ticks=r.timeToMS(arguments[0],arguments[1],arguments[2])}else{if(arguments.length===4){var u=arguments[0];var n=arguments[1];var p=arguments[2];var t=arguments[3];var o=0;var s=(u*3600*24+n*3600+p*60+t)*1000+o;r._ticks=s*r.ticksPerMillisecond}else{if(arguments.length===5){var u=arguments[0];var n=arguments[1];var p=arguments[2];var t=arguments[3];var o=arguments[4];var s=(u*3600*24+n*3600+p*60+t)*1000+o;r._ticks=s*r.ticksPerMillisecond}}}}r.add=function(w){var v=r._ticks+w._ticks;var x=new f.jqx.timeSpan(v);return x};r.substract=function(w){var v=r._ticks-w._ticks;return new f.jqx.timeSpan(v)};r.duration=function(){if(r._ticks>=0){return new f.jqx.timeSpan(r._ticks)}else{return new f.jqx.timeSpan(-r._ticks)}};r.equals=function(v){return r._ticks==v._ticks};r.valueOf=function(){return r._ticks};r.compare=function(w,v){if(w._ticks>v._ticks){return 1}if(w._ticks<v._ticks){return -1}return 0};r.interval=function(x,y){var w=x*y;var v=w+(x>=0?0.5:-0.5);return new f.jqx.timeSpan(v*r.ticksPerMillisecond)};r.fromDays=function(v){return r.interval(v,r.millisPerDay)};r.fromHours=function(v){return r.interval(v,r.millisPerHour)};r.fromMilliseconds=function(v){return r.interval(v,1)};r.fromMinutes=function(v){return r.interval(v,r.millisPerMinute)};r.fromSeconds=function(v){return r.interval(v,r.millisPerSecond)};r.fromTicks=function(v){return new f.jqx.timeSpan(v)};return r};var g=[{id:\"Local\",offset:0,offsetHours:0,displayName:\"\",supportsDaylightSavingTime:false},{id:\"Dateline Standard Time\",offset:-720,offsetHours:-12,displayName:\"(UTC-12:00) International Date Line West\",supportsDaylightSavingTime:false},{id:\"UTC-11\",offset:-660,offsetHours:-11,displayName:\"(UTC-11:00) Coordinated Universal Time-11\",supportsDaylightSavingTime:false},{id:\"Hawaiteratoran Standard Time\",offset:-600,offsetHours:-10,displayName:\"(UTC-10:00) Hawaiterator\",supportsDaylightSavingTime:false},{id:\"Alaskan Standard Time\",offset:-540,offsetHours:-9,displayName:\"(UTC-09:00) Alaska\",supportsDaylightSavingTime:true},{id:\"Pacific Standard Time (Mexico)\",offset:-480,offsetHours:-8,displayName:\"(UTC-08:00) Baja California\",supportsDaylightSavingTime:true},{id:\"Pacific Standard Time\",offset:-480,offsetHours:-8,displayName:\"(UTC-08:00) Pacific Time (US & Canada)\",supportsDaylightSavingTime:true},{id:\"US Mountain Standard Time\",offset:-420,offsetHours:-7,displayName:\"(UTC-07:00) Arizona\",supportsDaylightSavingTime:false},{id:\"Mountain Standard Time (Mexico)\",offset:-420,offsetHours:-7,displayName:\"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",supportsDaylightSavingTime:true},{id:\"Mountain Standard Time\",offset:-420,offsetHours:-7,displayName:\"(UTC-07:00) Mountain Time (US & Canada)\",supportsDaylightSavingTime:true},{id:\"Central Standard Time\",offset:-360,offsetHours:-6,displayName:\"(UTC-06:00) Central Time (US & Canada)\",supportsDaylightSavingTime:true},{id:\"Central America Standard Time\",offset:-360,offsetHours:-6,displayName:\"(UTC-06:00) Central America\",supportsDaylightSavingTime:false},{id:\"Canada Central Standard Time\",offset:-360,offsetHours:-6,displayName:\"(UTC-06:00) Saskatchewan\",supportsDaylightSavingTime:false},{id:\"Central Standard Time (Mexico)\",offset:-360,offsetHours:-6,displayName:\"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",supportsDaylightSavingTime:true},{id:\"SA Pacific Standard Time\",offset:-300,offsetHours:-5,displayName:\"(UTC-05:00) Bogota, Lima, Quito, Rio Branco\",supportsDaylightSavingTime:false},{id:\"Eastern Standard Time\",offset:-300,offsetHours:-5,displayName:\"(UTC-05:00) Eastern Time (US & Canada)\",supportsDaylightSavingTime:true},{id:\"US Eastern Standard Time\",offset:-300,offsetHours:-5,displayName:\"(UTC-05:00) Indiana (East)\",supportsDaylightSavingTime:true},{id:\"Venezuela Standard Time\",offset:-270,offsetHours:-4.5,displayName:\"(UTC-04:30) Caracas\",supportsDaylightSavingTime:false},{id:\"Atlantic Standard Time\",offset:-240,offsetHours:-4,displayName:\"(UTC-04:00) Atlantic Time (Canada)\",supportsDaylightSavingTime:true},{id:\"Paraguay Standard Time\",offset:-240,offsetHours:-4,displayName:\"(UTC-04:00) Asuncion\",supportsDaylightSavingTime:true},{id:\"Central Brazilian Standard Time\",offset:-240,offsetHours:-4,displayName:\"(UTC-04:00) Cuiaba\",supportsDaylightSavingTime:true},{id:\"Pacific SA Standard Time\",offset:-240,offsetHours:-4,displayName:\"(UTC-04:00) Santiago\",supportsDaylightSavingTime:true},{id:\"SA Western Standard Time\",offset:-240,offsetHours:-4,displayName:\"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",supportsDaylightSavingTime:false},{id:\"Newfoundland Standard Time\",offset:-210,offsetHours:-3.5,displayName:\"(UTC-03:30) Newfoundland\",supportsDaylightSavingTime:true},{id:\"SA Eastern Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Cayenne, Fortaleza\",supportsDaylightSavingTime:false},{id:\"Argentina Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Buenos Aires\",supportsDaylightSavingTime:true},{id:\"E. South America Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Brasilia\",supportsDaylightSavingTime:true},{id:\"Bahia Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Salvador\",supportsDaylightSavingTime:true},{id:\"Montevideo Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Montevideo\",supportsDaylightSavingTime:true},{id:\"Greenland Standard Time\",offset:-180,offsetHours:-3,displayName:\"(UTC-03:00) Greenland\",supportsDaylightSavingTime:true},{id:\"UTC-02\",offset:-120,offsetHours:-2,displayName:\"(UTC-02:00) Coordinated Universal Time-02\",supportsDaylightSavingTime:false},{id:\"Mid-Atlantic Standard Time\",offset:-120,offsetHours:-2,displayName:\"(UTC-02:00) Mid-Atlantic - Old\",supportsDaylightSavingTime:true},{id:\"Azores Standard Time\",offset:-60,offsetHours:-1,displayName:\"(UTC-01:00) Azores\",supportsDaylightSavingTime:true},{id:\"Cape Verde Standard Time\",offset:-60,offsetHours:-1,displayName:\"(UTC-01:00) Cape Verde Is.\",supportsDaylightSavingTime:false},{id:\"Morocco Standard Time\",offset:0,offsetHours:0,displayName:\"(UTC) Casablanca\",supportsDaylightSavingTime:true},{id:\"UTC\",offset:0,offsetHours:0,displayName:\"(UTC) Coordinated Universal Time\",supportsDaylightSavingTime:false},{id:\"GMT Standard Time\",offset:0,offsetHours:0,displayName:\"(UTC) Dublin, Edinburgh, Lisbon, London\",supportsDaylightSavingTime:true},{id:\"Greenwich Standard Time\",offset:0,offsetHours:0,displayName:\"(UTC) Monrovia, Reykjavik\",supportsDaylightSavingTime:false},{id:\"Central European Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",supportsDaylightSavingTime:true},{id:\"Namibia Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) Windhoek\",supportsDaylightSavingTime:true},{id:\"W. Central Africa Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) West Central Africa\",supportsDaylightSavingTime:false},{id:\"W. Europe Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",supportsDaylightSavingTime:true},{id:\"Central Europe Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",supportsDaylightSavingTime:true},{id:\"Romance Standard Time\",offset:60,offsetHours:1,displayName:\"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",supportsDaylightSavingTime:true},{id:\"FLE Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",supportsDaylightSavingTime:true},{id:\"South Africa Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Harare, Pretoria\",supportsDaylightSavingTime:false},{id:\"Turkey Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Istanbul\",supportsDaylightSavingTime:true},{id:\"GTB Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Athens, Bucharest\",supportsDaylightSavingTime:true},{id:\"Libya Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Tripoli\",supportsDaylightSavingTime:true},{id:\"E. Europe Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) E. Europe\",supportsDaylightSavingTime:true},{id:\"Jordan Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Amman\",supportsDaylightSavingTime:true},{id:\"Middle East Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Beirut\",supportsDaylightSavingTime:true},{id:\"Egypt Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Cairo\",supportsDaylightSavingTime:true},{id:\"Syria Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Damascus\",supportsDaylightSavingTime:true},{id:\"Israel Standard Time\",offset:120,offsetHours:2,displayName:\"(UTC+02:00) Jerusalem\",supportsDaylightSavingTime:true},{id:\"Arab Standard Time\",offset:180,offsetHours:3,displayName:\"(UTC+03:00) Kuwait, Riyadh\",supportsDaylightSavingTime:false},{id:\"E. Africa Standard Time\",offset:180,offsetHours:3,displayName:\"(UTC+03:00) Nairobi\",supportsDaylightSavingTime:false},{id:\"Arabic Standard Time\",offset:180,offsetHours:3,displayName:\"(UTC+03:00) Baghdad\",supportsDaylightSavingTime:true},{id:\"Kaliningrad Standard Time\",offset:180,offsetHours:3,displayName:\"(UTC+03:00) Kaliningrad, Minsk\",supportsDaylightSavingTime:true},{id:\"Iran Standard Time\",offset:210,offsetHours:3.5,displayName:\"(UTC+03:30) Tehran\",supportsDaylightSavingTime:true},{id:\"Mauritius Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Port Louis\",supportsDaylightSavingTime:true},{id:\"Georgian Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Tbilisi\",supportsDaylightSavingTime:false},{id:\"Caucasus Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Yerevan\",supportsDaylightSavingTime:true},{id:\"Arabian Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Abu Dhabi, Muscat\",supportsDaylightSavingTime:false},{id:\"Azerbaijan Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Baku\",supportsDaylightSavingTime:true},{id:\"Russian Standard Time\",offset:240,offsetHours:4,displayName:\"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",supportsDaylightSavingTime:true},{id:\"Afghanistan Standard Time\",offset:270,offsetHours:4.5,displayName:\"(UTC+04:30) Kabul\",supportsDaylightSavingTime:false},{id:\"Pakistan Standard Time\",offset:300,offsetHours:5,displayName:\"(UTC+05:00) Islamabad, Karachi\",supportsDaylightSavingTime:true},{id:\"West Asia Standard Time\",offset:300,offsetHours:5,displayName:\"(UTC+05:00) Ashgabat, Tashkent\",supportsDaylightSavingTime:false},{id:\"India Standard Time\",offset:330,offsetHours:5.5,displayName:\"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",supportsDaylightSavingTime:false},{id:\"Sri Lanka Standard Time\",offset:330,offsetHours:5.5,displayName:\"(UTC+05:30) Sri Jayawardenepura\",supportsDaylightSavingTime:false},{id:\"Nepal Standard Time\",offset:345,offsetHours:5.75,displayName:\"(UTC+05:45) Kathmandu\",supportsDaylightSavingTime:false},{id:\"Central Asia Standard Time\",offset:360,offsetHours:6,displayName:\"(UTC+06:00) Astana\",supportsDaylightSavingTime:false},{id:\"Bangladesh Standard Time\",offset:360,offsetHours:6,displayName:\"(UTC+06:00) Dhaka\",supportsDaylightSavingTime:true},{id:\"Ekaterinburg Standard Time\",offset:360,offsetHours:6,displayName:\"(UTC+06:00) Ekaterinburg\",supportsDaylightSavingTime:true},{id:\"Myanmar Standard Time\",offset:390,offsetHours:6.5,displayName:\"(UTC+06:30) Yangon (Rangoon)\",supportsDaylightSavingTime:false},{id:\"SE Asia Standard Time\",offset:420,offsetHours:7,displayName:\"(UTC+07:00) Bangkok, Hanoi, Jakarta\",supportsDaylightSavingTime:false},{id:\"N. Central Asia Standard Time\",offset:420,offsetHours:7,displayName:\"(UTC+07:00) Novosibirsk\",supportsDaylightSavingTime:true},{id:\"Ulaanbaatar Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Ulaanbaatar\",supportsDaylightSavingTime:false},{id:\"China Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",supportsDaylightSavingTime:false},{id:\"Singapore Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Kuala Lumpur, Singapore\",supportsDaylightSavingTime:false},{id:\"North Asia Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Krasnoyarsk\",supportsDaylightSavingTime:true},{id:\"Taipei Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Taipei\",supportsDaylightSavingTime:false},{id:\"W. Australia Standard Time\",offset:480,offsetHours:8,displayName:\"(UTC+08:00) Perth\",supportsDaylightSavingTime:true},{id:\"Korea Standard Time\",offset:540,offsetHours:9,displayName:\"(UTC+09:00) Seoul\",supportsDaylightSavingTime:false},{id:\"North Asia East Standard Time\",offset:540,offsetHours:9,displayName:\"(UTC+09:00) Irkutsk\",supportsDaylightSavingTime:true},{id:\"Tokyo Standard Time\",offset:540,offsetHours:9,displayName:\"(UTC+09:00) Osaka, Sapporo, Tokyo\",supportsDaylightSavingTime:false},{id:\"AUS Central Standard Time\",offset:570,offsetHours:9.5,displayName:\"(UTC+09:30) Darwin\",supportsDaylightSavingTime:false},{id:\"Cen. Australia Standard Time\",offset:570,offsetHours:9.5,displayName:\"(UTC+09:30) Adelaide\",supportsDaylightSavingTime:true},{id:\"West Pacific Standard Time\",offset:600,offsetHours:10,displayName:\"(UTC+10:00) Guam, Port Moresby\",supportsDaylightSavingTime:false},{id:\"Tasmania Standard Time\",offset:600,offsetHours:10,displayName:\"(UTC+10:00) Hobart\",supportsDaylightSavingTime:true},{id:\"E. Australia Standard Time\",offset:600,offsetHours:10,displayName:\"(UTC+10:00) Brisbane\",supportsDaylightSavingTime:false},{id:\"AUS Eastern Standard Time\",offset:600,offsetHours:10,displayName:\"(UTC+10:00) Canberra, Melbourne, Sydney\",supportsDaylightSavingTime:true},{id:\"Yakutsk Standard Time\",offset:600,offsetHours:10,displayName:\"(UTC+10:00) Yakutsk\",supportsDaylightSavingTime:true},{id:\"Vladivostok Standard Time\",offset:660,offsetHours:11,displayName:\"(UTC+11:00) Vladivostok\",supportsDaylightSavingTime:true},{id:\"Central Pacific Standard Time\",offset:660,offsetHours:11,displayName:\"(UTC+11:00) Solomon Is., New Caledonia\",supportsDaylightSavingTime:false},{id:\"Magadan Standard Time\",offset:720,offsetHours:12,displayName:\"(UTC+12:00) Magadan\",supportsDaylightSavingTime:true},{id:\"Kamchatka Standard Time\",offset:720,offsetHours:12,displayName:\"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",supportsDaylightSavingTime:true},{id:\"Fiji Standard Time\",offset:720,offsetHours:12,displayName:\"(UTC+12:00) Fiji\",supportsDaylightSavingTime:true},{id:\"New Zealand Standard Time\",offset:720,offsetHours:12,displayName:\"(UTC+12:00) Auckland, Wellington\",supportsDaylightSavingTime:true},{id:\"UTC+12\",offset:720,offsetHours:12,displayName:\"(UTC+12:00) Coordinated Universal Time+12\",supportsDaylightSavingTime:false},{id:\"Tonga Standard Time\",offset:780,offsetHours:13,displayName:\"(UTC+13:00) Nuku'alofa\",supportsDaylightSavingTime:false},{id:\"Samoa Standard Time\",offset:780,offsetHours:13,displayName:\"(UTC+13:00) Samoa\",supportsDaylightSavingTime:true}];var a=[0,31,59,90,120,151,181,212,243,273,304,334,365];var m=[0,31,60,91,121,152,182,213,244,274,305,335,366];var j=365*4+1;var c=(365*4+1)*25-1;var h=((365*4+1)*25-1)*4+1;var d=(((365*4+1)*25-1)*4+1)*4;var b=(((365*4+1)*25-1)*4+1)*4+((365*4+1)*25-1)*3-367;var l=(((365*4+1)*25-1)*4+1)*25-366;var k=0;var i=((((365*4+1)*25-1)*4+1)*25-366)*(1000*10000*3600*24)-1;var e=((((365*4+1)*25-1)*4+1)*25-366)*(1000*60*60*24);f.jqx.date=function(){var r=this;r.ticksPerMillisecond=10000;r.millisecondsPerTick=1/10000;r.ticksPerSecond=1000*10000;r.secondsPerTick=1/(1000*10000);r.ticksPerMinute=1000*10000*60;r.minutesPerTick=1/(1000*10000*60);r.ticksPerHour=1000*10000*3600;r.hoursPerTick=1/(1000*10000*3600);r.ticksPerDay=1000*10000*3600*24;r.daysPerTick=1/(1000*10000*3600*24);r.millisPerSecond=1000;r.millisPerMinute=1000*60;r.millisPerHour=1000*60*60;r.millisPerDay=1000*60*60*24;r.daysPerYear=365;r.daysPer4Years=j;r.daysPer100Years=c;r.daysPer400Years=h;r.daysTo1601=d;r.daysTo1899=b;r.daysTo10000=l;r.minTicks=0;r.maxTicks=i;r.maxMillis=e;r.datePartYear=0;r.datePartDayOfYear=1;r.datePartMonth=2;r.datePartDay=3;r.daysToMonth365=a;r.daysToMonth366=m;r.minValue=new Date(0);r.maxValue=new Date(((((365*4+1)*25-1)*4+1)*25-366)*(1000*10000*3600*24)-1);r.ticksMask=4611686018427388000;r.flagsMask=13835058055282164000;r.localMask=9223372036854776000;r.ticksCeiling=4611686018427388000;r.kindUnspecified=0;r.kindUtc=4611686018427388000;r.kindLocal=9223372036854776000;r.kindLocalAmbiguousDst=13835058055282164000;r.kindShift=62;r.regexTrim=/^\\s+|\\s+$/g;r.regexInfinity=/^[+-]?infinity$/i;r.regexHex=/^0x[a-f0-9]+$/i;r.regexParseFloat=/^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/;r.calendar={\"/\":\"/\",\":\":\":\",firstDay:0,days:{names:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],namesAbbr:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],namesShort:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]},months:{names:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],namesAbbr:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"]},AM:[\"AM\",\"am\",\"AM\"],PM:[\"PM\",\"pm\",\"PM\"],eras:[{name:\"A.D.\",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:\"M/d/yyyy\",D:\"dddd, MMMM dd, yyyy\",t:\"h:mm tt\",T:\"h:mm:ss tt\",f:\"dddd, MMMM dd, yyyy h:mm tt\",F:\"dddd, MMMM dd, yyyy h:mm:ss tt\",M:\"MMMM dd\",Y:\"yyyy MMMM\",S:\"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",ISO:\"yyyy-MM-dd hh:mm:ss\",ISO2:\"yyyy-MM-dd HH:mm:ss\",d1:\"dd.MM.yyyy\",d2:\"dd-MM-yyyy\",zone1:\"yyyy-MM-ddTHH:mm:ss-HH:mm\",zone2:\"yyyy-MM-ddTHH:mm:ss+HH:mm\",custom:\"yyyy-MM-ddTHH:mm:ss.fff\",custom2:\"yyyy-MM-dd HH:mm:ss.fff\"},percentsymbol:\"%\",currencysymbol:\"$\",currencysymbolposition:\"before\",decimalseparator:\".\",thousandsseparator:\",\"};r.dateData=0;r.timeZone=null;r.timeZones=g;r.internalMS=function(){return r.dateData};r.getDatePart=function(y){var x=r.internalMS();var z=parseInt(x/r.millisPerDay);var G=parseInt(z/r.daysPer400Years);z-=G*r.daysPer400Years;var B=parseInt(z/r.daysPer100Years);if(B==4){B=3}z-=B*r.daysPer100Years;var D=parseInt(z/r.daysPer4Years);z-=D*r.daysPer4Years;var E=parseInt(z/r.daysPerYear);if(E==4){E=3}if(y==r.datePartYear){return parseInt(G*400+B*100+D*4+E+1)}z-=E*r.daysPerYear;if(y==r.datePartDayOfYear){return parseInt(z+1)}var C=E==3&&(D!=24||B==3);var F=C?r.daysToMonth366:r.daysToMonth365;var A=z>>5+1;while(z>=F[A]){A++}if(y==r.datePartMonth){return parseInt(A)}return parseInt(z-F[A-1]+1)};r.dayOfWeek=function(){var y=r.dateData;var x=parseInt(y/r.millisPerDay+1)%7;return x},r.dayOfYear=function(){return r.getDatePart(r.datePartDayOfYear)};r.weekOfYear=function(y){var F=r.toDate();var D=y||r.calendar.firstDay;var A=new Date(F.getFullYear(),0,1);var E=A.getDay()-D;E=(E>=0?E:E+7);var z=Math.floor((F.getTime()-A.getTime()-(F.getTimezoneOffset()-A.getTimezoneOffset())*60000)/86400000)+1;var B;if(E<4){B=Math.floor((z+E-1)/7)+1;if(B>52){var C=new Date(F.getFullYear()+1,0,1);var x=C.getDay()-D;x=x>=0?x:x+7;B=x<4?1:53}}else{B=Math.floor((z+E-1)/7)}return B};r.subtract=function(x){return new f.jqx.timeSpan(r.dateData*r.ticksPerMillisecond-x.dateData*r.ticksPerMillisecond)};r.dateToMS=function(z,A,x){if(z>=1&&z<=9999&&A>=1&&A<=12){z=parseInt(z);var D=r.isLeapYear(z)?r.daysToMonth366:r.daysToMonth365;if(x>=1&&x<=D[A]-D[A-1]){var C=z-1;var B=C*365+parseInt(C/4)-parseInt(C/100)+parseInt(C/400)+D[A-1]+x-1;return B*r.millisPerDay}}};r.isLeapYear=function(x){if(x<1||x>9999){throw new Error(\"Year out of Range\")}return x%4==0&&(x%100!=0||x%400==0)};r.timeToMS=function(x,B,z,y){if(x>=0&&x<24&&B>=0&&B<60&&z>=0&&z<60){var A=parseInt(x*3600+B*60+z);if(y>0&&y<1000){return(A*r.millisPerSecond)+y}return A*r.millisPerSecond}};r.daysInMonth=function(x,y){if(y<1||y>12){throw new Error(\"Month out of Range\")}var z=r.isLeapYear(x)?r.daysToMonth366:r.daysToMonth365;return z[y]-z[y-1]};r.arrayIndexOf=function(A,z){if(A.indexOf){return A.indexOf(z)}for(var x=0,y=A.length;x<y;x++){if(A[x]===z){return x}}return -1};r.startsWith=function(y,x){return y.indexOf(x)===0};r.endsWith=function(y,x){return y.substr(y.length-x.length)===x},r.trim=function(x){return(x+\"\").replace(r.regexTrim,\"\")};r.expandFormat=function(B,A){A=A||\"F\";var z,y=B.patterns,x=A.length;if(x===1){z=y[A];if(!z){throw\"Invalid date format string '\"+A+\"'.\"}A=z}else{if(x===2&&A.charAt(0)===\"%\"){A=A.charAt(1)}}return A};r.getEra=function(z,y){if(!y){return 0}if(typeof z===\"string\"){return 0}var C,B=z.getTime();for(var A=0,x=y.length;A<x;A++){C=y[A].start;if(C===null||B>=C){return A}}return 0};r.toUpper=function(x){return x.split(\"\\u00A0\").join(\" \").toUpperCase()};r.toUpperArray=function(x){var A=[];for(var z=0,y=x.length;z<y;z++){A[z]=r.toUpper(x[z])}return A};r.getEraYear=function(y,A,x,B){var z=y.getFullYear();if(!B&&A.eras){z-=A.eras[x].offset}return z};r.getDayIndex=function(B,A,y){var x,C=B.days,z=B._upperDays;if(!z){B._upperDays=z=[r.toUpperArray(C.names),r.toUpperArray(C.namesAbbr),r.toUpperArray(C.namesShort)]}A=A.toUpperCase();if(y){x=r.arrayIndexOf(z[1],A);if(x===-1){x=r.arrayIndexOf(z[2],A)}}else{x=r.arrayIndexOf(z[0],A)}return x};r.getMonthIndex=function(E,D,z){var x=E.months,y=E.monthsGenitive||E.months,B=E._upperMonths,C=E._upperMonthsGen;if(!B){E._upperMonths=B=[r.toUpperArray(x.names),r.toUpperArray(x.namesAbbr)];E._upperMonthsGen=C=[r.toUpperArray(y.names),r.toUpperArray(y.namesAbbr)]}D=r.toUpper(D);var A=r.arrayIndexOf(z?B[1]:B[0],D);if(A<0){A=r.arrayIndexOf(z?C[1]:C[0],D)}return A};r.appendPreOrPostMatch=function(A,x){var z=0,C=false;for(var B=0,y=A.length;B<y;B++){var D=A.charAt(B);switch(D){case\"'\":if(C){x.push(\"'\")}else{z++}C=false;break;case\"\\\\\":if(C){x.push(\"\\\\\")}C=!C;break;default:x.push(D);C=false;break}}return z};r.getTokenRegExp=function(){return/\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g};r.tryparseDate=function(ad,ae,U){if(ae==undefined||ae==null){ae=r.calendar}else{if(ae!=null){if(ae&&f.type(ae)===\"string\"&&Globalize){var aj=Globalize.cultures[ae];if(aj){ae=aj.calendar}}}}if(U!=undefined){if(f.type(U)===\"array\"){for(var ak=0;ak<U.length;ak++){var am=r.parseDate(ad,U[ak],ae);if(am){return am}}}var am=r.parseDate(ad,U,ae);if(am){return am}}var I=this;if(ad==\"\"){return null}if(ad!=null&&!ad.substring){ad=ad.toString()}if(ad!=null&&ad.substring(0,6)==\"/Date(\"){var ao=/^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;var al=new Date(+ad.replace(/\\/Date\\((\\d+)\\)\\//,\"$1\"));if(al==\"Invalid Date\"){var ag=ad.match(/^\\/Date\\((\\d+)([-+]\\d\\d)(\\d\\d)\\)\\/$/);var al=null;if(ag){al=new Date(1*ag[1]+3600000*ag[2]+60000*ag[3])}}if(al==null||al==\"Invalid Date\"||isNaN(al)){var J=ao.exec(ad);if(J){var M=new Date(parseInt(J[1]));if(J[2]){var S=parseInt(J[3]);if(J[2]===\"-\"){S=-S}var O=M.getUTCMinutes();M.setUTCMinutes(O-S)}if(!isNaN(M.valueOf())){return M}}}return al}var G={jqxdate:\"yyyy-MM-dd HH:mm:ss\",d:\"M/d/yyyy\",D:\"dddd, MMMM dd, yyyy\",t:\"h:mm tt\",T:\"h:mm:ss tt\",f:\"dddd, MMMM dd, yyyy h:mm tt\",F:\"dddd, MMMM dd, yyyy h:mm:ss tt\",M:\"MMMM dd\",Y:\"yyyy MMMM\",S:\"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",ISO:\"yyyy-MM-dd hh:mm:ss\",ISO2:\"yyyy-MM-dd HH:mm:ss\",ISO8601:\"yyyy-MM-ddTHH:mm:ss.sssZ\",d1:\"dd.MM.yyyy\",d2:\"dd-MM-yyyy\",d3:\"MM-dd-yyyy\",d4:\"MM.dd.yyyy\",zone1:\"yyyy-MM-ddTHH:mm:ss-HH:mm\",zone2:\"yyyy-MM-ddTHH:mm:ss+HH:mm\",custom:\"yyyy-MM-ddTHH:mm:ss.fff\",custom2:\"yyyy-MM-dd HH:mm:ss.fff\",iso:\"yyyy-MM-ddTHH:mm:ssZ\",iso_date1:\"yyyy-MM-dd\",iso_date2:\"yyyy-MM-dd\",iso_date3:\"yyyy-ddd\",iso_date4:\"yyyy-MM-dd HH:mm\",iso_date5:\"yyyy-MM-dd HH:mm Z\",iso_date6:\"yyyy-MMM-dd\",iso_date7:\"yyyy-MM\",iso_date8:\"yyyy-MMM\",iso_date9:\"yyyy-MMMM\",iso_date10:\"yyyy-MMMM-dd\",iso_time1:\"HH:mm:ss.tttt\",iso_time2:\"HH:mm:ss\",iso_time3:\"HH:mm\",iso_time4:\"HH\",iso_time5:\"yyyyyy-MM-dd\",iso_time6:\"yyyyyy-MM-dd\"};for(var L in G){al=r.parseDate(ad,G[L],ae);if(al){return al}}var F=ae.patterns;for(L in F){al=r.parseDate(ad,F[L],ae);if(al){if(L==\"ISO\"){var W=r.parseDate(ad,F.ISO2,ae);if(W){return W}}return al}}if(f.type(ad)===\"string\"){ad=r.trim(ad);var af=[\":\",\"/\",\"-\",\" \",\",\"];var E=function(at,y,ar){return ar.replace(new RegExp(at,\"g\"),y)};ad=E(\", \",\",\",ad);var A=\"\";var R=ad;if(ad.indexOf(\":\")>=0){A=ad.substring(ad.indexOf(\":\")-2);A=r.trim(A);R=ad.substring(0,ad.indexOf(\":\")-2)}else{if(ad.toUpperCase().indexOf(\"AM\")>=0){A=ad.substring(ad.toUpperCase().indexOf(\"AM\")-2);A=r.trim(A);R=ad.substring(0,ad.toUpperCase().indexOf(\"AM\")-2)}else{if(ad.toUpperCase().indexOf(\"PM\")>=0){A=ad.substring(ad.toUpperCase().indexOf(\"PM\")-2);A=r.trim(A);R=ad.substring(0,ad.toUpperCase().indexOf(\"PM\")-2)}}}var x=new Date();var ac=false;if(R){for(var ak=0;ak<af.length;ak++){if(R.indexOf(af[ak])>=0){D=R.split(af[ak]);break}}var z=new Array();var P=new Array();var Y=new Array();var K=null;var aq=null;for(var ak=0;ak<D.length;ak++){var H=D[ak];var X=r.parseDate(H,\"d\",ae)||r.parseDate(H,\"dd\",ae)||r.parseDate(H,\"ddd\",ae)||r.parseDate(H,\"dddd\",ae);if(X){z.push(X.getDate());if(H.length>2){K=ak;break}}}for(var ak=0;ak<D.length;ak++){var H=D[ak];var N=r.parseDate(H,\"M\",ae)||r.parseDate(H,\"MM\",ae)||r.parseDate(H,\"MMM\",ae)||r.parseDate(H,\"MMMM\",ae);if(N){if(K!=undefined&&K==ak){continue}P.push(N.getMonth());if(H.length>2){aq=ak;break}}}for(var ak=0;ak<D.length;ak++){var H=D[ak];var Z=r.parseDate(H,\"yyyy\",ae);if(Z){if(K!=undefined&&K==ak){continue}if(aq!=undefined&&aq==ak){continue}Y.push(Z.getFullYear())}}var ah=new Array();for(var an=0;an<z.length;an++){for(var ag=0;ag<P.length;ag++){for(var ab=0;ab<Y.length;ab++){var M=new Date(Y[ab],P[ag],z[an]);if(Y[ab]<1970){M.setFullYear(Y[ab])}if(M.getTime()!=NaN){ah.push(M)}}}}if(ah.length>0){x=ah[0];ac=true}}if(A){var aa=A.indexOf(\":\")>=0?A.split(\":\"):A;var C=r.parseDate(A,\"h:mm tt\",ae)||r.parseDate(A,\"HH:mm:ss.fff\",ae)||r.parseDate(A,\"HH:mm:ss.ff\",ae)||r.parseDate(A,\"h:mm:ss tt\",ae)||r.parseDate(A,\"HH:mm:ss.tttt\",ae)||r.parseDate(A,\"HH:mm:ss\",ae)||r.parseDate(A,\"HH:mm\",ae)||r.parseDate(A,\"HH\",ae);var Q=0,B=0,T=0,V=0;if(C&&C.getTime()!=NaN){Q=C.getHours();B=C.getMinutes();T=C.getSeconds();V=C.getMilliseconds()}else{if(aa.length==1){Q=parseInt(aa[0])}if(aa.length==2){Q=parseInt(aa[0]);B=parseInt(aa[1])}if(aa.length==3){Q=parseInt(aa[0]);B=parseInt(aa[1]);if(aa[2].indexOf(\".\")>=0){T=parseInt(aa[2].toString().split(\".\")[0]);V=parseInt(aa[2].toString().split(\".\")[1])}else{T=parseInt(aa[2])}}if(aa.length==4){Q=parseInt(aa[0]);B=parseInt(aa[1]);T=parseInt(aa[2]);V=parseInt(aa[3])}}if(x&&!isNaN(Q)&&!isNaN(B)&&!isNaN(T)&&!isNaN(V)){x.setHours(Q,B,T,V);ac=true}}if(ac){return x}}if(ad!=null){var W=null;var D=[\":\",\"/\",\"-\"];var ai=true;for(var H=0;H<D.length;H++){if(ad.indexOf(D[H])!=-1){ai=false}}if(ai){var ap=new Number(ad);if(!isNaN(ap)){return new Date(ap)}}}return null};r.getParseRegExp=function(x,I){var K=x._parseRegExp;if(!K){x._parseRegExp=K={}}else{var B=K[I];if(B){return B}}var H=r.expandFormat(x,I).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g,\"\\\\\\\\$1\"),F=[\"^\"],y=[],E=0,A=0,N=r.getTokenRegExp(),C;while((C=N.exec(H))!==null){var M=H.slice(E,C.index);E=N.lastIndex;A+=r.appendPreOrPostMatch(M,F);if(A%2){F.push(C[0]);continue}var z=C[0],D=z.length,J;switch(z){case\"dddd\":case\"ddd\":case\"MMMM\":case\"MMM\":case\"gg\":case\"g\":J=\"(\\\\D+)\";break;case\"tt\":case\"t\":J=\"(\\\\D*)\";break;case\"yyyy\":case\"fff\":case\"ff\":case\"f\":J=\"(\\\\d{\"+D+\"})\";break;case\"dd\":case\"d\":case\"MM\":case\"M\":case\"yy\":case\"y\":case\"HH\":case\"H\":case\"hh\":case\"h\":case\"mm\":case\"m\":case\"ss\":case\"s\":J=\"(\\\\d\\\\d?)\";break;case\"zzz\":J=\"([+-]?\\\\d\\\\d?:\\\\d{2})\";break;case\"zz\":case\"z\":J=\"([+-]?\\\\d\\\\d?)\";break;case\"/\":J=\"(\\\\\"+x[\"/\"]+\")\";break;default:throw\"Invalid date format pattern '\"+z+\"'.\";break}if(J){F.push(J)}y.push(C[0])}r.appendPreOrPostMatch(H.slice(E),F);F.push(\"$\");var L=F.join(\"\").replace(/\\s+/g,\"\\\\s+\"),G={regExp:L,groups:y};return K[I]=G};r.outOfRange=function(z,x,y){return z<x||z>y};r.expandYear=function(C,A){var y=new Date(),x=r.getEra(y);if(A<100){var z=C.twoDigitYearMax;z=typeof z===\"string\"?new Date().getFullYear()%100+parseInt(z,10):z;var B=r.getEraYear(y,C,x);A+=B-(B%100);if(A>z){A-=100}}return A};r.parseDate=function(S,Z,N){if(N==undefined||N==null){N=r.calendar}S=r.trim(S);var K=N,ae=r.getParseRegExp(K,Z),E=new RegExp(ae.regExp).exec(S);if(E===null){return null}var aa=ae.groups,Q=null,I=null,ad=null,ac=null,J=null,C=0,V,U=0,ab=0,x=0,z=null,L=false;for(var W=0,Y=aa.length;W<Y;W++){var y=E[W+1];if(y){var R=aa[W],B=R.length,D=parseInt(y,10);switch(R){case\"dd\":case\"d\":ac=D;if(r.outOfRange(ac,1,31)){return null}break;case\"MMM\":case\"MMMM\":case\"MMMMM\":case\"MMMMMM\":case\"MMMMMMM\":case\"MMMMMMMM\":ad=r.getMonthIndex(K,y,B===3);if(r.outOfRange(ad,0,11)){return null}break;case\"M\":case\"MM\":ad=D-1;if(r.outOfRange(ad,0,11)){return null}break;case\"y\":case\"yy\":case\"yyyy\":I=B<4?r.expandYear(K,D):D;if(r.outOfRange(I,0,9999)){return null}break;case\"h\":case\"hh\":C=D;if(C===12){C=0}if(r.outOfRange(C,0,11)){return null}break;case\"H\":case\"HH\":C=D;if(r.outOfRange(C,0,23)){return null}break;case\"m\":case\"mm\":U=D;if(r.outOfRange(U,0,59)){return null}break;case\"s\":case\"ss\":ab=D;if(r.outOfRange(ab,0,59)){return null}break;case\"tt\":case\"t\":L=K.PM&&(y===K.PM[0]||y===K.PM[1]||y===K.PM[2]);if(!L&&(!K.AM||(y!==K.AM[0]&&y!==K.AM[1]&&y!==K.AM[2]))){return null}break;case\"f\":case\"ff\":case\"fff\":x=D*Math.pow(10,3-B);if(r.outOfRange(x,0,999)){return null}break;case\"ddd\":case\"dddd\":J=r.getDayIndex(K,y,B===3);if(r.outOfRange(J,0,6)){return null}break;case\"zzz\":var A=y.split(/:/);if(A.length!==2){return null}V=parseInt(A[0],10);if(r.outOfRange(V,-12,13)){return null}var G=parseInt(A[1],10);if(r.outOfRange(G,0,59)){return null}z=(V*60)+(r.startsWith(y,\"-\")?-G:G);break;case\"z\":case\"zz\":V=D;if(r.outOfRange(V,-12,13)){return null}z=V*60;break;case\"g\":case\"gg\":var M=y;if(!M||!K.eras){return null}M=M.trim().toLowerCase();for(var X=0,T=K.eras.length;X<T;X++){if(M===K.eras[X].nathat.toLowerCase()){Q=X;break}}if(Q===null){return null}break}}}var H=new Date(),P,F=K.convert;P=H.getFullYear();if(I===null){I=P}else{if(K.eras){I+=K.eras[(Q||0)].offset}}if(ad===null){ad=0}if(ac===null){ac=1}if(F){H=F.toGregorian(I,ad,ac);if(H===null){return null}}else{H.setFullYear(I,ad,ac);if(H.getDate()!==ac){return null}if(J!==null&&H.getDay()!==J){return null}}if(L&&C<12){C+=12}H.setHours(C,U,ab,x);if(z!==null){var O=H.getMinutes()-(z+H.getTimezoneOffset());H.setHours(H.getHours()+parseInt(O/60,10),O%60)}return H},r.toString=function(U,L){if(U===undefined){U=\"yyyy-MM-dd HH:mm:ss\"}if(f.jqx.date.cache&&f.jqx.date.cache[r.dateData+U]){return f.jqx.date.cache[r.dateData+U]}if(L&&f.type(L)===\"string\"&&Globalize){var V=Globalize.cultures[L];if(V){L=V.calendar}}var Q=r.toDate();if(L==undefined||L==null){L=r.calendar}if(typeof Q===\"string\"){return Q}var A=Q.toString()+\"_\"+U;if(!U||!U.length||U===\"i\"){var X;X=r.formatDate(Q,L.patterns.F,L);return X}var R=L.eras,y=U===\"s\";U=r.expandFormat(L,U);X=[];var D,S=[\"0\",\"00\",\"000\"],H,I,x=/([^d]|^)(d|dd)([^d]|$)/g,W=0,N=r.getTokenRegExp(),z;function F(Y,ab){var aa,Z=Y+\"\";if(ab>1&&Z.length<ab){aa=(S[ab-2]+Z);return aa.substr(aa.length-ab,ab)}else{aa=Z}return aa}function T(){if(H||I){return H}H=x.test(U);I=true;return H}function B(Z,Y){if(z){return z[Y]}if(Z.getMonth!=undefined){switch(Y){case 0:return Z.getFullYear();case 1:return Z.getMonth();case 2:return Z.getDate()}}}for(;;){var E=N.lastIndex,M=N.exec(U);var J=U.slice(E,M?M.index:U.length);W+=r.appendPreOrPostMatch(J,X);if(!M){break}if(W%2){X.push(M[0]);continue}var O=M[0],C=O.length;switch(O){case\"ddd\":case\"dddd\":var K=(C===3)?L.days.namesAbbr:L.days.names;X.push(K[Q.getDay()]);break;case\"d\":case\"dd\":H=true;X.push(F(B(Q,2),C));break;case\"MMM\":case\"MMMM\":var P=B(Q,1);X.push(L.months[C===3?\"namesAbbr\":\"names\"][P]);break;case\"M\":case\"MM\":X.push(F(B(Q,1)+1,C));break;case\"y\":case\"yy\":case\"yyyy\":P=r.getEraYear(Q,L,r.getEra(Q,R),y);if(C<4){P=P%100}X.push(F(P,C));break;case\"h\":case\"hh\":D=Q.getHours()%12;if(D===0){D=12}X.push(F(D,C));break;case\"H\":case\"HH\":X.push(F(Q.getHours(),C));break;case\"m\":case\"mm\":X.push(F(Q.getMinutes(),C));break;case\"s\":case\"ss\":X.push(F(Q.getSeconds(),C));break;case\"t\":case\"tt\":P=Q.getHours()<12?(L.AM?L.AM[0]:\" \"):(L.PM?L.PM[0]:\" \");X.push(C===1?P.charAt(0):P);break;case\"f\":case\"ff\":case\"fff\":X.push(F(Q.getMilliseconds(),3).substr(0,C));break;case\"z\":case\"zz\":D=Q.getTimezoneOffset()/60;X.push((D<=0?\"+\":\"-\")+F(Math.floor(Math.abs(D)),C));break;case\"zzz\":D=Q.getTimezoneOffset()/60;X.push((D<=0?\"+\":\"-\")+F(Math.floor(Math.abs(D)),2)+\":\"+F(Math.abs(Q.getTimezoneOffset()%60),2));break;case\"g\":case\"gg\":if(L.eras){X.push(L.eras[r.getEra(Q,R)].name)}break;case\"/\":X.push(L[\"/\"]);break;default:throw\"Invalid date format pattern '\"+O+\"'.\";break}}var G=X.join(\"\");if(!f.jqx.date.cache){f.jqx.date.cache=new Array()}f.jqx.date.cache[r.dateData+U]=G;return G};r.add=function(B,C,y){var z=r.internalMS();if(C===undefined){if(y===false){r.dateData=(z+parseInt(B._ticks/r.ticksPerMillisecond));return r}var x=new f.jqx.date((z+parseInt(B._ticks/r.ticksPerMillisecond)));x.timeZone=r.timeZone;return x}var A=(B*C);if(A<=-r.maxMillis||A>=r.maxMillis){throw new Error(\"Out of Range\")}if(y===false){r.dateData=(z+A);return r}var x=new f.jqx.date(z+A);x.timeZone=r.timeZone;return x};r.addDays=function(y,x){return r.add(y,r.millisPerDay,x)};r.clone=function(){var x=new f.jqx.date(r.dateData);x.timeZone=r.timeZone;return x};r.clearTime=function(){var A=r.month();var z=r.year();var y=r.day();var x=new f.jqx.date(z,A,y,0,0,0,0);x.timeZone=r.timeZone;return x};r.addHours=function(y,x){return r.add(y,r.millisPerHour,x)};r.addMilliseconds=function(y,x){return r.add(y,1,x)};r.addMinutes=function(y,x){return r.add(y,r.millisPerMinute,x)};r.addMonths=function(z,B){if(z<-120000||z>120000){throw new Error(\"Invalid Months Value\")}var F=parseInt(r.getDatePart(r.datePartYear));var x=parseInt(r.getDatePart(r.datePartMonth));var D=parseInt(r.getDatePart(r.datePartDay));var C=x-1+z;if(C>=0){x=C%12+1;F=F+C/12}else{x=12+(C+1)%12;F=F+(C-11)/12}F=parseInt(F);if(F<1||F>9999){throw new Error(\"Year out of range\")}var E=r.daysInMonth(F,x);if(D>E){D=E}if(B===false){r.dateData=(r.dateToMS(F,x,D)+r.internalMS()%r.millisPerDay);return r}var A=new f.jqx.date((r.dateToMS(F,x,D)+r.internalMS()%r.millisPerDay));A.timeZone=r.timeZone;return A};r.addSeconds=function(y,x){return r.add(y,r.millisPerSecond,x)};r.addYears=function(y,x){return r.addMonths(y*12,x)};r.getTimeZoneOffset=function(){var y=new Date();var x=new Date(y.getFullYear(),0,1);var z=new Date(y.getFullYear(),6,1);var A=y.getTimezoneOffset()<Math.max(x.getTimezoneOffset(),z.getTimezoneOffset());return{offset:-(y.getTimezoneOffset()/60),dst:+A}};r.isInDaylightSavingTime=function(){var y=new Date();var z=new Date(y.getFullYear(),0,1);var x=new Date(y.getFullYear(),6,1);return r.date().getTimezoneOffset()<Math.max(z.getTimezoneOffset(),x.getTimezoneOffset())};r.supportsDaylightSavingTime=function(){var y=new Date();var z=new Date(y.getFullYear(),0,1);var x=new Date(y.getFullYear(),6,1);return z.getTimezoneOffset()!=x.getTimezoneOffset()};r.date=function(){var A=r.month();var z=r.year();var y=r.day();var x=new f.jqx.date(z,A,y);x.timeZone=r.timeZone;return x};r.isWeekend=function(){return r.dayOfWeek()==0||r.dayOfWeek()==6};r.toDate=function(J){var E=r.month();var F=r.year();var G=r.day();var A=r.hour();var z=r.minute();var x=r.second();var L=r.millisecond();var K=new Date(F,E-1,G);if(F<1970){K.setFullYear(F)}K.setHours(A,z,x,L);if(J){var D=r.timeZones.filter(function(M){return M.id==J});if(D.length){var B=D[0].offset;if(J==\"Local\"){B=-K.getTimezoneOffset()}var C=K.getTime();var I=K.getTimezoneOffset()*60*1000;if(r.timeZone){var y=r.timeZones.filter(function(M){return M.id==r.timeZone});if(y.length){var I=-y[0].offset*60*1000}}var H=C+I;K=new Date(H+(60*1000*B))}}return K};r.toTimeZone=function(y){var A=y;if(A==null){A=\"Local\"}var x=r.toDate(A);var z=new f.jqx.date(x);z.timeZone=y;return z};r.day=function(){return r.getDatePart(r.datePartDay)};r.month=function(){return r.getDatePart(r.datePartMonth)};r.year=function(){return r.getDatePart(r.datePartYear)};r.millisecond=function(){return parseInt((r.internalMS())%1000)};r.hour=function(){return parseInt((r.internalMS()/r.millisPerHour)%24)};r.minute=function(){return parseInt((r.internalMS()/r.millisPerMinute)%60)};r.second=function(){return parseInt((r.internalMS()/r.millisPerSecond)%60)};r.valueOf=function(){return r.dateData};r.equals=function(x){return r.dateData===x.dateData};if(arguments.length===0){var o=new Date();r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{if(arguments.length===1){if(arguments[0]==undefined){arguments[0]=\"todayDate\"}var v=typeof arguments[0]===\"number\"&&isFinite(arguments[0]);if(!v&&f.type(arguments[0])===\"string\"){if(arguments[0]===\"today\"){var o=new Date();r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{if(arguments[0]===\"todayDate\"){var o=new Date();o.setHours(0,0,0,0);r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{var o=r.tryparseDate(arguments[0]);r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}}}else{if(typeof(arguments[0])===\"number\"){r.dateData=arguments[0]}else{if(f.type(arguments[0])==\"date\"){var o=arguments[0];r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{if(arguments[0].dateData!==undefined){r.dateData=arguments[0].dateData}else{r.dateData=arguments[0]}}}}}else{if(arguments.length===2){if(arguments[0]==undefined){arguments[0]=\"todayDate\"}var v=typeof arguments[0]===\"number\"&&isFinite(arguments[0]);if(!v&&f.type(arguments[0])===\"string\"){if(arguments[0]===\"today\"){var o=new Date();r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{if(arguments[0]===\"todayDate\"){var o=new Date();o.setHours(0,0,0,0);r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{var o=r.tryparseDate(arguments[0]);r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}}}else{if(typeof(arguments[0])===\"number\"){r.dateData=arguments[0]}else{if(f.type(arguments[0])==\"date\"){var o=arguments[0];r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{if(arguments[0].dateData!==undefined){r.dateData=arguments[0].dateData}else{r.dateData=arguments[0]}}}}r.timeZone=arguments[1]}else{if(arguments.length>2){if(f.type(arguments[0])===\"string\"){var o=r.tryparseDate(arguments[0],arguments[2],arguments[1]);r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}else{var t=arguments[0];var s=arguments[1];var u=arguments[2];var q=arguments[3];var p=arguments[4];var n=arguments[5];var w=arguments[6];if(q===undefined){q=0}if(p===undefined){p=0}if(n===undefined){n=0}if(w===undefined){w=0}s--;var o=new Date(t,s,u,q,p,n,w);if(t<1970){o.setFullYear(t)}r.dateData=r.dateToMS(o.getFullYear(),o.getMonth()+1,o.getDate())+r.timeToMS(o.getHours(),o.getMinutes(),o.getSeconds(),o.getMilliseconds())}}}}}return r}})(jqxBaseFramework);if(!Array.prototype.filter){Array.prototype.filter=function(b){if(this===void 0||this===null){throw new TypeError()}var f=Object(this);var a=f.length>>>0;if(typeof b!==\"function\"){throw new TypeError()}var e=[];var d=arguments[1];for(var c=0;c<a;c++){if(c in f){var g=f[c];if(b.call(d,g,c,f)){e.push(g)}}}return e}};\r\n\r\n"]},"metadata":{},"sourceType":"script"}