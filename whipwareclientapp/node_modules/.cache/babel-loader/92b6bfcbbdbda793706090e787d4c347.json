{"ast":null,"code":"import * as jqxcore from '../../jqwidgets/jqxcore';\nimport * as globalize from '../../jqwidgets/globalization/globalize';\nimport * as jqxdata from '../../jqwidgets/jqxdata';\nimport * as jqxinput from '../../jqwidgets/jqxinput';\nimport * as jqxpasswordinput from '../../jqwidgets/jqxpasswordinput';\nimport * as jqxnumberinput from '../../jqwidgets/jqxnumberinput';\nimport * as jqxradiobutton from '../../jqwidgets/jqxradiobutton';\nimport * as jqxcheckbox from '../../jqwidgets/jqxcheckbox';\nimport * as jqxbuttons from '../../jqwidgets/jqxbuttons';\nimport * as jqxscrollbar from '../../jqwidgets/jqxscrollbar';\nimport * as jqxlistbox from '../../jqwidgets/jqxlistbox';\nimport * as jqxdropdownlist from '../../jqwidgets/jqxdropdownlist';\nimport * as jqxcombobox from '../../jqwidgets/jqxcombobox';\nimport * as jqxmaskedinput from '../../jqwidgets/jqxmaskedinput';\nimport * as jqxcalendar from '../../jqwidgets/jqxcalendar';\nimport * as jqxdatetimeinput from '../../jqwidgets/jqxdatetimeinput';\nimport * as jqxform from '../../jqwidgets/jqxform';\nimport { createElement, PureComponent } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar JqxForm =\n/** @class */\nfunction (_super) {\n  __extends(JqxForm, _super);\n\n  function JqxForm(props) {\n    var _this = _super.call(this, props) || this;\n    /* tslint:disable:variable-name */\n\n\n    _this._jqx = JQXLite;\n    _this._id = 'JqxForm' + _this._jqx.generateID();\n    _this._componentSelector = '#' + _this._id;\n    _this.state = {\n      lastProps: props\n    };\n    return _this;\n  }\n\n  JqxForm.getDerivedStateFromProps = function (props, state) {\n    if (!Object.is) {\n      Object.is = function (x, y) {\n        if (x === y) {\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          return x !== x && y !== y;\n        }\n      };\n    }\n\n    var areEqual = Object.is(props, state.lastProps);\n\n    if (!areEqual) {\n      var newState = {\n        lastProps: props\n      };\n      return newState;\n    }\n\n    return null;\n  };\n\n  JqxForm.prototype.componentDidMount = function () {\n    var widgetOptions = this._manageProps();\n\n    this._jqx(this._componentSelector).jqxForm(widgetOptions);\n\n    this._wireEvents();\n  };\n\n  JqxForm.prototype.componentDidUpdate = function () {\n    var widgetOptions = this._manageProps();\n\n    this.setOptions(widgetOptions);\n\n    this._wireEvents();\n  };\n\n  JqxForm.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this._id,\n      className: this.props.className,\n      style: this.props.style\n    }, this.props.children);\n  };\n\n  JqxForm.prototype.setOptions = function (options) {\n    this._jqx(this._componentSelector).jqxForm(options);\n  };\n\n  JqxForm.prototype.getOptions = function (option) {\n    return this._jqx(this._componentSelector).jqxForm(option);\n  };\n\n  JqxForm.prototype.getInstance = function () {\n    return this._jqx(this._componentSelector).jqxForm('getInstance');\n  };\n\n  JqxForm.prototype.refresh = function () {\n    this._jqx(this._componentSelector).jqxForm('refresh');\n  };\n\n  JqxForm.prototype.destroy = function () {\n    this._jqx(this._componentSelector).jqxForm('destroy');\n  };\n\n  JqxForm.prototype.hideComponent = function (name) {\n    this._jqx(this._componentSelector).jqxForm('hideComponent', name);\n  };\n\n  JqxForm.prototype.showComponent = function (name) {\n    this._jqx(this._componentSelector).jqxForm('showComponent', name);\n  };\n\n  JqxForm.prototype.val = function (value) {\n    if (value) {\n      this._jqx(this._componentSelector).jqxForm('val', value);\n    } else {\n      return this._jqx(this._componentSelector).jqxForm('val');\n    }\n  };\n\n  JqxForm.prototype.submit = function (action, target, method) {\n    this._jqx(this._componentSelector).jqxForm('submit', action, target, method);\n  };\n\n  JqxForm.prototype.getComponentByName = function (name) {\n    return this._jqx(this._componentSelector).jqxForm('getComponentByName', name);\n  };\n\n  JqxForm.prototype._manageProps = function () {\n    var widgetProps = ['padding', 'backgroundColor', 'borderColor', 'value', 'template'];\n    var options = {};\n\n    for (var prop in this.props) {\n      if (widgetProps.indexOf(prop) !== -1) {\n        options[prop] = this.props[prop];\n      }\n    }\n\n    return options;\n  };\n\n  JqxForm.prototype._wireEvents = function () {\n    for (var prop in this.props) {\n      if (prop.indexOf('on') === 0) {\n        var originalEventName = prop.slice(2);\n        originalEventName = originalEventName.charAt(0).toLowerCase() + originalEventName.slice(1);\n\n        this._jqx(this._componentSelector).off(originalEventName);\n\n        this._jqx(this._componentSelector).on(originalEventName, this.props[prop]);\n      }\n    }\n  };\n\n  return JqxForm;\n}(PureComponent);\n\nvar jqx = window.jqx;\nvar JQXLite = window.JQXLite;\nexport default JqxForm;\nexport { jqx, JQXLite };","map":null,"metadata":{},"sourceType":"module"}