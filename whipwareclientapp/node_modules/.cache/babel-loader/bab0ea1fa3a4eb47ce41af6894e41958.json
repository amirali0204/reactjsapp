{"ast":null,"code":"/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxMaskedInput\", \"\", {});\n  a.extend(a.jqx._jqxMaskedInput.prototype, {\n    defineInstance: function defineInstance() {\n      var b = {\n        value: null,\n        mask: \"99999\",\n        width: 200,\n        height: 25,\n        textAlign: \"left\",\n        readOnly: false,\n        cookies: false,\n        promptChar: \"_\",\n        placeHolder: \"\",\n        template: \"\",\n        rtl: false,\n        disabled: false,\n        hint: true,\n        events: [\"valueChanged\", \"textchanged\", \"mousedown\", \"mouseup\", \"keydown\", \"keyup\", \"keypress\", \"change\"],\n        aria: {\n          \"aria-valuenow\": {\n            name: \"value\",\n            type: \"string\"\n          },\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        }\n      };\n\n      if (this === a.jqx._jqxMaskedInput.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function createInstance() {\n      this.render();\n    },\n    render: function render() {\n      var e = this;\n      e.element.setAttribute(\"role\", \"textbox\");\n      e.element.setAttribute(\"data-role\", \"input\");\n      e.host.addClass(e.toThemeProperty(\"jqx-maskedinput\"));\n      var f = e.element.getAttribute(\"value\");\n\n      if (f !== undefined && f !== \"\" && f !== null) {\n        e.value = f;\n      }\n\n      a.jqx.aria(this);\n      a.jqx.aria(this, \"aria-multiline\", false);\n      a.jqx.aria(this, \"aria-readonly\", e.readOnly);\n      e._helpers = [];\n      e._helpers.element = new jqxHelper(e.element);\n\n      e._helpers.element.addClass(e.toThemeProperty(\"jqx-input jqx-input-widget jqx-rc-all jqx-widget jqx-widget-content\"));\n\n      var b = e.element.getAttribute(\"name\");\n\n      if (e.element.nodeName.toLowerCase() === \"div\") {\n        e.element.innerHTML = \"\";\n        var d = document.createElement(\"input\");\n        d.setAttribute(\"type\", \"textarea\");\n        d.setAttribute(\"autocomplete\", \"off\");\n        d.setAttribute(\"autocorrect\", \"off\");\n        d.setAttribute(\"autocapitalize\", \"off\");\n        d.setAttribute(\"spellcheck\", false);\n        d.setAttribute(\"name\", b);\n        e.element.appendChild(d);\n        e.maskbox = a(d);\n\n        if (e.disabled) {\n          e._helpers.element.addClass(e.toThemeProperty(\"jqx-input-disabled jqx-fill-state-disabled\"));\n\n          d.setAttribute(\"disabled\", true);\n        }\n      } else {\n        e.maskbox = e.host;\n        e.element.setAttribute(\"autocomplete\", \"off\");\n        e.element.setAttribute(\"autocorrect\", \"off\");\n        e.element.setAttribute(\"autocapitalize\", \"off\");\n        e.element.setAttribute(\"spellcheck\", false);\n        e.element.setAttribute(\"name\", b);\n\n        if (e.disabled) {\n          e._helpers.element.addClass(e.toThemeProperty(\"jqx-input-disabled jqx-fill-state-disabled\"));\n\n          e.element.setAttribute(\"disabled\", true);\n        }\n      }\n\n      e._helpers.maskbox = new jqxHelper(e.maskbox[0]);\n\n      e._helpers.maskbox.addClass(e.toThemeProperty(\"jqx-reset jqx-input-content jqx-widget-content\"));\n\n      if (e.rtl) {\n        e._helpers.maskbox.addClass(e.toThemeProperty(\"jqx-rtl\"));\n      }\n\n      e.propertyChangeMap.disabled = function (g, i, h, j) {\n        if (j) {\n          g._helpers.maskbox.addClass(e.toThemeProperty(\"jqx-input-disabled\"));\n        } else {\n          g._helpers.maskbox.removeClass(e.toThemeProperty(\"jqx-input-disabled\"));\n        }\n      };\n\n      e.selectedText = \"\";\n      e.self = this;\n      e.oldValue = e._value();\n      e.items = [];\n\n      e._initializeLiterals();\n\n      e._render();\n\n      if (e.value != null) {\n        e.inputValue(e.value.toString());\n      }\n\n      if (e.host.parents(\"form\").length > 0) {\n        e.host.parents(\"form\").on(\"reset\", function () {\n          setTimeout(function () {\n            e.clearValue();\n          }, 10);\n        });\n      }\n\n      e.addHandlers();\n\n      if (e.cookies) {\n        var c = a.jqx.cookie.cookie(\"maskedInput.\" + e.element.id);\n\n        if (c) {\n          e.val(c);\n        }\n      }\n    },\n    addHandlers: function addHandlers() {\n      var c = this;\n      var b = \"\";\n      this.addHandler(this.maskbox, \"blur\", function () {\n        if (c.rtl) {\n          c.maskbox.css(\"direction\", \"ltr\");\n        }\n\n        c._helpers.maskbox.removeClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n\n        if (c.maskbox.val() !== b) {\n          c._raiseEvent(7, {\n            type: \"keyboard\"\n          });\n\n          if (c.cookies) {\n            a.jqx.cookie.cookie(\"maskedInput.\" + c.element.id, c.maskbox.val());\n          }\n        }\n      });\n      this.addHandler(this.maskbox, \"focus\", function () {\n        b = c.maskbox[0].value;\n\n        if (c.rtl) {\n          c.maskbox[0].style.direction = \"rtl\";\n        }\n\n        c._helpers.element.addClass(c.toThemeProperty(\"jqx-fill-state-focus\"));\n      });\n      this.addHandler(this.host, \"keydown\", function (f) {\n        var g = c.readOnly;\n        var e = f.charCode ? f.charCode : f.keyCode ? f.keyCode : 0;\n\n        if (g || c.disabled) {\n          return false;\n        }\n\n        var d = c._handleKeyDown(f, e);\n\n        if (!d) {\n          if (f.preventDefault) {\n            f.preventDefault();\n          }\n\n          if (f.stopPropagation) {\n            f.stopPropagation();\n          }\n        }\n\n        return d;\n      });\n      this.addHandler(this.host, \"keyup\", function (d) {\n        var e = c.readOnly;\n\n        if (e || c.disabled) {\n          return true;\n        }\n\n        if (d.preventDefault) {\n          d.preventDefault();\n        }\n\n        if (d.stopPropagation) {\n          d.stopPropagation();\n        }\n\n        return false;\n      });\n      this.addHandler(this.host, \"keypress\", function (f) {\n        var g = c.readOnly;\n        var e = f.charCode ? f.charCode : f.keyCode ? f.keyCode : 0;\n\n        if (g || c.disabled) {\n          return true;\n        }\n\n        var d = c._handleKeyPress(f, e);\n\n        if (!d) {\n          if (f.preventDefault) {\n            f.preventDefault();\n          }\n\n          if (f.stopPropagation) {\n            f.stopPropagation();\n          }\n        }\n\n        return d;\n      });\n    },\n    focus: function focus() {\n      try {\n        var c = this;\n        c.maskbox.focus();\n        setTimeout(function () {\n          c.maskbox.focus();\n        });\n      } catch (b) {}\n    },\n    _getString: function _getString() {\n      var c = \"\";\n\n      for (var b = 0; b < this.items.length; b++) {\n        var d = this.items[b].character;\n\n        if (this.items[b].character === this.promptChar && this.promptChar !== this.items[b].defaultCharacter) {\n          c += this.items[b].defaultCharacter;\n        } else {\n          c += d;\n        }\n      }\n\n      return c;\n    },\n    _initializeLiterals: function _initializeLiterals() {\n      if (this.mask === undefined || this.mask === null) {\n        this.items = [];\n        return;\n      }\n\n      var h = this;\n\n      var l = function l(o, n, i) {\n        var j = {};\n        j.character = o;\n        j.regex = n;\n        j.canEdit = i;\n        j.defaultCharacter = h.promptChar;\n        return j;\n      };\n\n      this.mask = this.mask.toString();\n      var c = this.mask.length;\n\n      for (var f = 0; f < c; f++) {\n        var g = this.mask.substring(f, f + 1);\n        var k = \"\";\n        var b = false;\n\n        if (g === \"[\") {\n          for (var d = f; d < c; d++) {\n            var e = this.mask.substring(d, d + 1);\n\n            if (e === \"]\") {\n              break;\n            }\n          }\n\n          k = \"(\" + this.mask.substring(f, d + 1) + \")\";\n          f = d;\n          b = true;\n        }\n\n        if (g === \"#\") {\n          k = \"(\\\\d|[+]|[-])\";\n          b = true;\n        } else {\n          if (g === \"9\" || g === \"0\") {\n            k = \"\\\\d\";\n            b = true;\n          } else {\n            if (g === \"$\") {\n              b = false;\n            } else {\n              if (g === \"/\" || g === \":\") {\n                b = false;\n              } else {\n                if (g === \"A\" || g === \"a\") {\n                  k = \"\\\\w\";\n                  b = true;\n                } else {\n                  if (g === \"c\" || g === \"C\") {\n                    k = \".\";\n                    b = true;\n                  } else {\n                    if (g === \"L\" || g === \"l\") {\n                      k = \"([a-zA-Z])\";\n                      b = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        var m = {};\n\n        if (b) {\n          m = l(this.promptChar, k, b);\n        } else {\n          m = l(g, k, b);\n        }\n\n        this.items.push(m);\n      }\n    },\n    setRegex: function setRegex(d, e, b, c) {\n      if (d === null || d === undefined || e === null || e === undefined) {\n        return;\n      }\n\n      if (d < this.items.length) {\n        this.items[d].regex = e;\n\n        if (b !== null && b !== undefined) {\n          this.items[d].canEdit = b;\n        }\n\n        if (c !== null && c !== undefined) {\n          this.items[d].defaultCharacter = c;\n        }\n      }\n    },\n    _match: function _match(c, b) {\n      var d = new RegExp(b, \"i\");\n      return d.test(c);\n    },\n    _raiseEvent: function _raiseEvent(g, c) {\n      var d = this.events[g];\n      var e = {};\n      e.owner = this;\n      var b = true;\n      var f = new a.Event(d);\n      f.owner = this;\n      e.value = this.inputValue();\n      e.text = this.maskedValue();\n\n      if (g === 7) {\n        e.type = c.type;\n\n        if (e.type === undefined) {\n          e.type = null;\n        }\n      }\n\n      f.args = e;\n\n      if (g < 2 || g > 6) {\n        b = this.host.trigger(f);\n      }\n\n      return b;\n    },\n    _handleKeyPress: function _handleKeyPress(d, b) {\n      var c = this._isSpecialKey(b, d);\n\n      return c;\n    },\n    _insertKey: function _insertKey(l, h) {\n      var k = this._selection();\n\n      var b = this;\n      var m;\n\n      if (k.start >= 0 && k.start < this.items.length) {\n        var c = String.fromCharCode(l);\n\n        if (l >= 65 && l <= 90) {\n          if (!h.shiftKey) {\n            c = c.toLowerCase();\n          }\n        }\n\n        var g = false;\n\n        for (var f = 0; f < this.items.length; f++) {\n          if (f < k.start) {\n            continue;\n          }\n\n          var n = b.items[f];\n\n          if (!n.canEdit) {\n            continue;\n          }\n\n          if (b._match(c, n.regex)) {\n            if (!g && k.length > 0) {\n              for (var d = k.start; d < k.end; d++) {\n                if (b.items[d].canEdit) {\n                  b.items[d].character = b.promptChar;\n                }\n              }\n\n              m = b._getString();\n              b.maskedValue(m);\n              g = true;\n            }\n\n            n.character = c;\n            m = b._getString();\n            b.maskedValue(m);\n\n            if (k.start < b.items.length) {\n              b._setSelectionStart(f + 1);\n            }\n\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    },\n    _deleteSelectedText: function _deleteSelectedText() {\n      var d = this._selection();\n\n      var b = false;\n\n      if (d.start > 0 || d.length > 0) {\n        for (var c = d.start; c < d.end; c++) {\n          if (c < this.items.length && this.items[c].canEdit && this.items[c].character !== this.promptChar) {\n            this.items[c].character = this.promptChar;\n            b = true;\n          }\n        }\n\n        var e = this._getString();\n\n        this.maskedValue(e);\n        return b;\n      }\n    },\n    _saveSelectedText: function _saveSelectedText() {\n      var c = this._selection();\n\n      var e = \"\";\n\n      if (c.start > 0 || c.length > 0) {\n        for (var b = c.start; b < c.end; b++) {\n          if (this.items[b].canEdit) {\n            e += this.items[b].character;\n          }\n        }\n      }\n\n      if (window.clipboardData) {\n        window.clipboardData.setData(\"Text\", e);\n      } else {\n        var d = a(\"<textarea style='position: absolute; left: -1000px; top: -1000px;'/>\");\n        d.val(e);\n        a(\"body\").append(d);\n        d.select();\n        setTimeout(function () {\n          document.designMode = \"off\";\n          d.select();\n          d.remove();\n        }, 100);\n      }\n\n      return e;\n    },\n    _pasteSelectedText: function _pasteSelectedText() {\n      var e = this._selection();\n\n      var i = \"\";\n      var d = 0;\n      var b = e.start;\n      var c = \"\";\n      var f = this;\n\n      var h = function h(j) {\n        if (j !== f.selectedText && j.length > 0) {\n          f.selectedText = j;\n\n          if (f.selectedText === null || f.selectedText === undefined) {\n            return;\n          }\n        }\n\n        if (e.start >= 0 || e.length > 0) {\n          for (var k = e.start; k < f.items.length; k++) {\n            if (f.items[k].canEdit) {\n              if (d < f.selectedText.length) {\n                f.items[k].character = f.selectedText[d];\n                d++;\n                b = 1 + k;\n              }\n            }\n          }\n        }\n\n        i = f._getString();\n        f.maskedValue(i);\n\n        if (b < f.items.length) {\n          f._setSelectionStart(b);\n        } else {\n          f._setSelectionStart(f.items.length);\n        }\n      };\n\n      if (window.clipboardData) {\n        c = window.clipboardData.getData(\"Text\");\n        h(c);\n      } else {\n        var g = a(\"<textarea style='position: absolute; left: -1000px; top: -1000px;'/>\");\n        a(\"body\").append(g);\n        g.select();\n        setTimeout(function () {\n          var j = g.val();\n          h(j);\n          g.remove();\n        }, 100);\n      }\n    },\n    _handleKeyDown: function _handleKeyDown(h, l) {\n      var k = this._selection();\n\n      var c, g;\n\n      if (l >= 96 && l <= 105) {\n        l = l - 48;\n      }\n\n      var d = h.ctrlKey || h.metaKey;\n\n      if (d && l === 97 || d && l === 65) {\n        return true;\n      }\n\n      if (d && l === 120 || d && l === 88) {\n        this.selectedText = this._saveSelectedText(h);\n\n        this._deleteSelectedText(h);\n\n        if (a.jqx.browser.msie) {\n          return false;\n        }\n\n        return true;\n      }\n\n      if (d && l === 99 || d && l === 67) {\n        this.selectedText = this._saveSelectedText(h);\n\n        if (a.jqx.browser.msie) {\n          return false;\n        }\n\n        return true;\n      }\n\n      if (d && l === 122 || d && l === 90) {\n        return false;\n      }\n\n      if (d && l === 118 || d && l === 86 || h.shiftKey && l === 45) {\n        this._pasteSelectedText();\n\n        if (a.jqx.browser.msie) {\n          return false;\n        }\n\n        return true;\n      }\n\n      if (l === 8) {\n        if (k.length === 0) {\n          for (g = this.items.length - 1; g >= 0; g--) {\n            if (this.items[g].canEdit && g < k.end && this.items[g].character !== this.promptChar) {\n              this._setSelection(g, g + 1);\n\n              break;\n            }\n          }\n        }\n\n        k = this._selection();\n\n        var f = this._deleteSelectedText();\n\n        if (k.start > 0 || k.length > 0) {\n          if (k.start <= this.items.length) {\n            if (f) {\n              this._setSelectionStart(k.start);\n            } else {\n              this._setSelectionStart(k.start - 1);\n            }\n          }\n        }\n\n        return false;\n      }\n\n      if (l === 190) {\n        c = k.start;\n\n        for (g = c; g < this.items.length; g++) {\n          if (this.items[g].character === \".\") {\n            this._setSelectionStart(g + 1);\n\n            break;\n          }\n        }\n      }\n\n      if (l === 191) {\n        c = k.start;\n\n        for (g = c; g < this.items.length; g++) {\n          if (this.items[g].character === \"/\") {\n            this._setSelectionStart(g + 1);\n\n            break;\n          }\n        }\n      }\n\n      if (l === 189) {\n        c = k.start;\n\n        for (g = c; g < this.items.length; g++) {\n          if (this.items[g].character === \"-\") {\n            this._setSelectionStart(g + 1);\n\n            break;\n          }\n        }\n      }\n\n      if (l === 46) {\n        if (k.length === 0) {\n          for (g = 0; g < this.items.length; g++) {\n            if (this.items[g].canEdit && g >= k.start && this.items[g].character !== this.promptChar) {\n              this._setSelection(g, g + 1);\n\n              break;\n            }\n          }\n        }\n\n        var b = k;\n        k = this._selection();\n\n        if (k.start >= 0 || k.length >= 0) {\n          if (k.start < this.items.length) {\n            if (k.length <= 1) {\n              if (b.end !== k.end) {\n                this._setSelectionStart(k.end);\n              } else {\n                this._setSelectionStart(k.end + 1);\n              }\n            } else {\n              this._setSelectionStart(k.start);\n            }\n          }\n        }\n\n        return false;\n      }\n\n      this._insertKey(l, h);\n\n      var j = this._isSpecialKey(l, h);\n\n      return j;\n    },\n    _isSpecialKey: function _isSpecialKey(b, c) {\n      if (b === 189 || b === 9 || b === 13 || b === 35 || b === 36 || b === 37 || b === 39 || b === 46) {\n        return true;\n      }\n\n      if (b === 16 && c.shiftKey || c.ctrlKey || c.metaKey) {\n        return true;\n      }\n\n      return false;\n    },\n    _selection: function _selection() {\n      var g;\n      var f = this.maskbox[0];\n\n      if (\"selectionStart\" in this.maskbox[0]) {\n        g = f.selectionEnd - f.selectionStart;\n        return {\n          start: f.selectionStart,\n          end: f.selectionEnd,\n          length: g,\n          text: f.value\n        };\n      } else {\n        var c = document.selection.createRange();\n\n        if (c == null) {\n          return {\n            start: 0,\n            end: f.value.length,\n            length: 0\n          };\n        }\n\n        var b = this.maskbox[0].createTextRange();\n        var d = b.duplicate();\n        b.moveToBookmark(c.getBookmark());\n        d.setEndPoint(\"EndToStart\", b);\n        g = c.text.length;\n        return {\n          start: d.text.length,\n          end: d.text.length + c.text.length,\n          length: g,\n          text: c.text\n        };\n      }\n    },\n    _setSelection: function _setSelection(d, b) {\n      if (\"selectionStart\" in this.maskbox[0]) {\n        this.maskbox[0].focus();\n        this.maskbox[0].setSelectionRange(d, b);\n      } else {\n        var c = this.maskbox[0].createTextRange();\n        c.collapse(true);\n        c.moveEnd(\"character\", b);\n        c.moveStart(\"character\", d);\n        c.select();\n      }\n    },\n    _setSelectionStart: function _setSelectionStart(b) {\n      this._setSelection(b, b);\n    },\n    refresh: function refresh(b) {\n      if (!b) {\n        this._render();\n      }\n    },\n    resize: function resize(c, b) {\n      this.width = c;\n      this.height = b;\n      this.refresh();\n    },\n    _render: function _render() {\n      var c = parseInt(this.host.css(\"border-left-width\"), 10);\n      var d = parseInt(this.host.css(\"border-left-width\"), 10);\n      var h = parseInt(this.host.css(\"border-left-width\"), 10);\n      var i = parseInt(this.host.css(\"border-left-width\"), 10);\n      var b = parseInt(this.host.css(\"height\"), 10) - h - i;\n      var e = parseInt(this.host.css(\"width\"), 10) - c - d;\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") !== -1) {\n        e = this.width;\n      } else {\n        if (this.width !== undefined && !isNaN(this.width)) {\n          e = this.width;\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") !== -1) {\n        b = this.height;\n      } else {\n        if (this.height !== undefined && !isNaN(this.height)) {\n          b = this.height;\n        }\n      }\n\n      e = parseInt(e, 10);\n      b = parseInt(b, 10);\n\n      if (this.maskbox[0] !== this.element) {\n        this.maskbox.css({\n          \"border-left-width\": 0,\n          \"border-right-width\": 0,\n          \"border-bottom-width\": 0,\n          \"border-top-width\": 0\n        });\n      }\n\n      this.maskbox.css(\"text-align\", this.textAlign);\n      var f = this.maskbox.css(\"font-size\");\n\n      if (!isNaN(b)) {\n        this.maskbox.css(\"height\", parseInt(f, 10) + 4 + \"px\");\n      }\n\n      if (!isNaN(e)) {\n        this.maskbox.css(\"width\", e);\n      }\n\n      var g = parseInt(b, 10) - 2 * parseInt(h, 10) - 2 * parseInt(i, 10) - parseInt(f, 10);\n\n      if (isNaN(g)) {\n        g = 0;\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.element.style.width = this.width;\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.element.style.width = this.width + \"px\";\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.element.style.height = this.height;\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.element.style.height = this.height + \"px\";\n        }\n      }\n\n      if (this.maskbox[0] !== this.element) {\n        this.maskbox[0].style.height = \"100%\";\n      }\n\n      this.maskbox[0].value = this._getString();\n\n      if (this.width) {\n        if (this.width.toString().indexOf(\"%\") >= 0) {\n          this.element.style.width = this.width;\n        }\n\n        if (this.height.toString().indexOf(\"%\") >= 0) {\n          this.element.style.height = this.height;\n        }\n      }\n\n      this._addBarAndLabel(this.maskbox);\n\n      this._updateHint();\n    },\n    _addBarAndLabel: function _addBarAndLabel(f) {\n      var e = this;\n\n      if (e.label) {\n        return;\n      }\n\n      if (!e.isMaterialized()) {\n        return;\n      }\n\n      if (this.element instanceof HTMLInputElement) {\n        var h = a(\"<div></div>\");\n        h.addClass(e.toThemeProperty(\"jqx-input-group jqx-maskedinput\"));\n        this.host.after(h);\n        var b = this.element;\n        var g = this.host.data();\n        h.append(b);\n        var c = a(\"<label></label\");\n\n        if (this.hint) {\n          c[0].innerHTML = this.placeHolder;\n        }\n\n        c.addClass(e.toThemeProperty(\"jqx-input-label\"));\n        h.append(c);\n        var d = a(\"<span></span>\");\n        h.append(d);\n        d.addClass(e.toThemeProperty(\"jqx-input-bar\"));\n        h[0].id = this.element.id;\n        this.element.removeAttribute(\"id\");\n        this.element.setAttribute(\"hint\", true);\n        h[0].style = this.element.style;\n        e.input = e.element;\n\n        if (!(this.input instanceof HTMLInputElement)) {\n          this.input = this.host.find(\"input\");\n\n          if (this.input.length > 0) {\n            this.input = this.input[0];\n          }\n\n          a(this.input).addClass(this.toThemeProperty(\"jqx-input-widget\"));\n        }\n\n        h[0].style.width = this.input.style.width;\n        h[0].style.height = this.input.style.height;\n        this.label = c;\n        this.bar = d;\n        this.element.style = \"\";\n        this.host = h;\n        this.element = h[0];\n        this.host.data(g);\n        this.input.style.width = \"100%\";\n        this.input.style.height = \"100%\";\n      } else {\n        var c = a(\"<label></label\");\n\n        if (this.hint) {\n          c[0].innerHTML = this.placeHolder;\n        }\n\n        c.addClass(e.toThemeProperty(\"jqx-input-label\"));\n        f.after(c);\n        e.label = c;\n        var d = a(\"<span></span>\");\n        f.after(d);\n        d.addClass(e.toThemeProperty(\"jqx-input-bar\"));\n        e.bar = d;\n        var e = this;\n      }\n\n      if (e.template) {\n        e.bar.addClass(e.toThemeProperty(\"jqx-\" + e.template));\n        e.label.addClass(e.toThemeProperty(\"jqx-\" + e.template));\n      }\n    },\n    _updateHint: function _updateHint() {\n      var b = this;\n\n      if (!b.hint) {\n        return;\n      }\n\n      if (b.isMaterialized()) {\n        setTimeout(function () {\n          if (b.maskbox[0].value.length === 0) {\n            b.element.removeAttribute(\"hint\");\n            b.label[0].innerHTML = b.placeHolder;\n          } else {\n            b.element.setAttribute(\"hint\", true);\n          }\n        });\n      }\n    },\n    destroy: function destroy() {\n      var b = this;\n      a.jqx.utilities.resize(this.host, null, true);\n      b.host.remove();\n      b._helpers = [];\n    },\n    maskedValue: function maskedValue(b) {\n      if (b === undefined) {\n        return this._value();\n      }\n\n      this.value = b;\n\n      this._refreshValue();\n\n      if (this.oldValue !== b) {\n        this._raiseEvent(1, b);\n\n        this.oldValue = b;\n\n        this._raiseEvent(0, b);\n      }\n\n      return this;\n    },\n    propertyChangedHandler: function propertyChangedHandler(c, e, b, f) {\n      if (this.isInitialized === undefined || this.isInitialized === false) {\n        return;\n      }\n\n      if (e === \"rtl\") {\n        if (c.rtl) {\n          c._helpers.maskbox.addClass(c.toThemeProperty(\"jqx-rtl\"));\n        } else {\n          c._helpers.maskbox.removeClass(c.toThemeProperty(\"jqx-rtl\"));\n        }\n      }\n\n      if (e === \"value\") {\n        if (f === undefined || f === null) {\n          f = \"\";\n        }\n\n        if (f === \"\") {\n          this.clear();\n        } else {\n          f = f.toString();\n          this.inputValue(f);\n        }\n\n        c._raiseEvent(7, f);\n      }\n\n      if (e === \"theme\") {\n        a.jqx.utilities.setTheme(b, f, this.host);\n      }\n\n      if (e === \"disabled\") {\n        if (f) {\n          c._helpers.maskbox.addClass(c.toThemeProperty(\"jqx-input-disabled\"));\n\n          c._helpers.element.addClass(c.toThemeProperty(\"jqx-fill-state-disabled\"));\n\n          c._helpers.maskbox.attr(\"disabled\", true);\n        } else {\n          c._helpers.maskbox.removeClass(this.toThemeProperty(\"jqx-input-disabled\"));\n\n          c._helpers.element.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n\n          c._helpers.maskbox.attr(\"disabled\", false);\n        }\n\n        a.jqx.aria(c, \"aria-disabled\", f);\n      }\n\n      if (e === \"readOnly\") {\n        this.readOnly = f;\n      }\n\n      if (e === \"promptChar\") {\n        for (var d = 0; d < c.items.length; d++) {\n          if (c.items[d].character === c.promptChar) {\n            c.items[d].character = f;\n            c.items[d].defaultCharacter = f;\n          }\n        }\n\n        c.promptChar = f;\n      }\n\n      if (e === \"textAlign\") {\n        c.maskbox.css(\"text-align\", f);\n        c.textAlign = f;\n      }\n\n      if (e === \"mask\") {\n        c.mask = f;\n        c.items = [];\n\n        c._initializeLiterals();\n\n        c.value = c._getString();\n\n        c._refreshValue();\n      }\n\n      if (e === \"width\") {\n        c.width = f;\n\n        c._render();\n      } else {\n        if (e === \"height\") {\n          c.height = f;\n\n          c._render();\n        }\n      }\n    },\n    _value: function _value() {\n      var b = this.value;\n      return b;\n    },\n    _getEditStringLength: function _getEditStringLength() {\n      var c = \"\";\n\n      for (var b = 0; b < this.items.length; b++) {\n        if (this.items[b].canEdit) {\n          c += this.items[b].character;\n        }\n      }\n\n      return c.length;\n    },\n    _getEditValue: function _getEditValue() {\n      var c = \"\";\n\n      for (var b = 0; b < this.items.length; b++) {\n        if (this.items[b].canEdit && this.items[b].character !== this.promptChar) {\n          c += this.items[b].character;\n        }\n      }\n\n      return c;\n    },\n    parseValue: function parseValue(g) {\n      if (g === undefined || g === null) {\n        return null;\n      }\n\n      var d = g.toString();\n      var h = \"\";\n      var c = 0;\n\n      for (var b = 0; b < d.length; b++) {\n        var f = d.substring(b, b + 1);\n\n        for (var e = c; e < this.items.length; e++) {\n          if (this.items[e].canEdit && this._match(f, this.items[e].regex)) {\n            h += f;\n            c = e;\n            break;\n          }\n        }\n      }\n\n      return h;\n    },\n    clear: function clear() {\n      this.clearValue();\n    },\n    clearValue: function clearValue() {\n      this.inputValue(\"\", true);\n    },\n    val: function val(b) {\n      if (b !== undefined && typeof b !== \"object\") {\n        if (typeof b === \"number\" && isFinite(b)) {\n          b = b.toString();\n        }\n\n        this.maskedValue(b);\n      }\n\n      return this.maskbox[0].value;\n    },\n    inputValue: function inputValue(g, c) {\n      var e;\n\n      if (g === undefined || g === null) {\n        var f = \"\";\n\n        for (e = 0; e < this.items.length; e++) {\n          if (this.items[e].canEdit) {\n            f += this.items[e].character;\n          }\n        }\n\n        return f;\n      } else {\n        var b = 0;\n        g = g.toString();\n\n        for (e = 0; e < this.items.length; e++) {\n          if (this.items[e].canEdit) {\n            if (this._match(g.substring(b, b + 1), this.items[e].regex)) {\n              this.items[e].character = g.substring(b, b + 1);\n              b++;\n            } else {\n              if (c) {\n                this.items[e].character = this.promptChar;\n                b++;\n              }\n            }\n          }\n        }\n\n        var d = this._getString();\n\n        this.maskedValue(d);\n        return this.inputValue();\n      }\n    },\n    _refreshValue: function _refreshValue() {\n      var d = this.maskedValue();\n      var b = 0;\n\n      for (var c = 0; c < this.items.length; c++) {\n        if (d.length > b) {\n          if (this.items[c].canEdit && this.items[c].character !== d[b]) {\n            if ((this._match(d[b], this.items[c].regex) || d[b] === this.promptChar) && d[b].length === 1) {\n              this.items[c].character = d[b];\n            }\n          }\n\n          b++;\n        }\n      }\n\n      this.value = this._getString();\n      d = this.value;\n      this.maskbox[0].value = d;\n      a.jqx.aria(this, \"aria-valuenow\", d);\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}