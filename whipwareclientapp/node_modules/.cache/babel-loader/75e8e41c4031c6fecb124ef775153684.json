{"ast":null,"code":"var _jsxFileName = \"/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVLayouts/ListScreen.tsx\";\nimport JqxLayout from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVKanban from '../DVComponents/DVKanban';\nimport DVTimeline from '../DVComponents/DVTimeline';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport { LeftTreeBuilder } from \"../DVControllers/LeftTreeBuilder\";\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\nimport JqxDropDownButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdropdownbutton';\nimport JqxTree from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\n\nclass ListScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myLayout = React.createRef();\n    this.listlayout = [{\n      items: [{\n        alignment: 'left',\n        items: [{\n          contentContainer: 'LeftMenuPanel',\n          //     initContent: (): void => {\n          //   //      ReactDOM.render(<LeftTreeBuilder Id={this.props.menuselected}/>\n          //    //     , document.getElementById('LeftMenuTree'));\n          //     },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        orientation: 'vertical',\n        unpinnedWidth: '15%',\n        width: '15%',\n        minWidth: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }, {\n        items: [{\n          height: '95%',\n          items: [{\n            contentContainer: 'Document1Panel',\n            title: this.props.menuselected + ' Management',\n            type: 'documentPanel'\n          }],\n          minHeight: '55%',\n          type: 'documentGroup'\n        }, {\n          height: '5%',\n          pinnedHeight: '50%',\n          unpinnedHeight: '50%',\n          alignment: 'bottom',\n          items: [{\n            contentContainer: 'MessagesListPanel',\n            title: 'Live Messages',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentActivityListPanel',\n            title: 'Recent Activities',\n            type: 'layoutPanel'\n          }, {\n            contentContainer: 'RecentFilesPanel',\n            title: 'Recent Updated Files',\n            type: 'layoutPanel'\n          }],\n          type: 'autoHideGroup'\n        }],\n        orientation: 'vertical',\n        type: 'layoutGroup',\n        width: '70%',\n        minWidth: '70%'\n      }, {\n        alignment: 'right',\n        items: [{\n          contentContainer: 'SystemStats',\n          initContent: () => {\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer'));\n            ReactDOM.render(React.createElement(DVBarGuage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer2'));\n            ReactDOM.render(React.createElement(DVBarChart, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }), document.getElementById('SystemStatsExplorer3'));\n          },\n          title: '',\n          type: 'layoutPanel'\n        }],\n        type: 'tabbedGroup',\n        minWidth: '15%',\n        width: '15%',\n        allowClose: false,\n        allowPin: false,\n        selected: false,\n        allowUnpin: false\n      }],\n      orientation: 'horizontal',\n      type: 'layoutGroup'\n    }];\n    this.state = {\n      layout: this.listlayout\n    };\n    alert(this.props.menuselected); //  this.props.menuaction(this.props.menuselected);\n    //  this.props.history.push('/'+this.props.menuselected);\n  }\n\n  componentWillUpdate(prevProps, prevState) {\n    this.myLayout.current.renderWidget();\n    this.myLayout.current.render(); //     this.myLayout.current.forceUpdate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '85%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        float: 'left',\n        height: '60px',\n        width: '15%'\n      },\n      src: \"./../Assets/system_logo.png\",\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginLeft: '30px',\n        marginTop: '26px',\n        width: '800px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(DVMenuList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        height: '43px',\n        float: 'right',\n        marginTop: '17px',\n        width: '15%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(JqxDropDownButton, {\n      theme: 'material-purple',\n      width: 200,\n      height: 25,\n      autoOpen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(JqxTree, {\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      \"item-selected\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"li\", {\n      \"item-selected\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Account Configurations\")))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(JqxLayout, {\n      style: {\n        border: 'none'\n      },\n      theme: \"material\",\n      width: '100%',\n      ref: this.myLayout,\n      height: window.innerHeight - 115,\n      layout: this.state.layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-container\": \"Document1Panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.viewselected == \"Grid\" ? React.createElement(DVDataGrid, {\n      menuselected: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : null, this.props.viewselected == \"Kanban\" ? React.createElement(DVKanban, {\n      menuselected: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : null, this.props.viewselected == \"Timeline\" ? React.createElement(DVTimeline, {\n      menuselected: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      \"data-container\": \"MessagesListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"List of Messages\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentActivityListPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"List of Recent Activities\"), React.createElement(\"div\", {\n      \"data-container\": \"RecentFilesPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"List of Recent updated Files\"), React.createElement(\"div\", {\n      \"data-container\": \"OutputPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Output\"), React.createElement(\"div\", {\n      \"data-container\": \"LeftMenuPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"LeftMenuTree\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '96%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(LeftTreeBuilder, {\n      Id: this.props.menuselected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      \"data-container\": \"ExtraActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Extra Quick Actions\"), React.createElement(\"div\", {\n      \"data-container\": \"SystemStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SystemStatsExplorer3\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SystemStatsExplorer2\",\n      style: {\n        border: 'none',\n        width: '99%',\n        height: '33%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  if (state.rootReducer !== null) {\n    return {\n      state: state,\n      menuselected: state.rootReducer.menuselected,\n      viewselected: state.rootReducer.viewselected\n    };\n  } else {\n    return {\n      state: state,\n      menuselected: \"Orders\",\n      viewselected: \"Grid\"\n    };\n  }\n};\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  menuaction: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ListScreen));","map":{"version":3,"sources":["/Users/amirali/Documents/github/reactjsapp/deskvantage/src/DVLayouts/ListScreen.tsx"],"names":["JqxLayout","React","ReactDOM","DVDataGrid","DVKanban","DVTimeline","DVMenuList","LeftTreeBuilder","connect","withRouter","DVBarGuage","DVBarChart","JqxDropDownButton","JqxTree","ListScreen","Component","constructor","props","myLayout","createRef","listlayout","items","alignment","contentContainer","title","type","orientation","unpinnedWidth","width","minWidth","allowClose","allowPin","selected","allowUnpin","height","menuselected","minHeight","pinnedHeight","unpinnedHeight","initContent","render","document","getElementById","state","layout","alert","componentWillUpdate","prevProps","prevState","current","renderWidget","float","marginLeft","marginTop","border","window","innerHeight","viewselected","mapStateToProps","rootReducer","toggleTodo","id","mapDispatchToProps","dispatch","menuaction"],"mappings":"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","sourcesContent":["import JqxLayout, { ILayoutProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxlayout';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DVDataGrid from '../DVComponents/DVDataGrid';\nimport DVKanban from '../DVComponents/DVKanban';\nimport DVTimeline from '../DVComponents/DVTimeline';\nimport DVMenuList from \"../DVComponents/DVMenuList\";\nimport {LeftTreeBuilder} from \"../DVControllers/LeftTreeBuilder\"\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router-dom\";\nimport DVBarGuage from \"../DVComponents/DVBarGuage\";\nimport DVBarChart from \"../DVComponents/DVBarChart\";\nimport JqxDropDownButton, { IDropDownButtonProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdropdownbutton';\nimport JqxTree from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtree';\nclass ListScreen extends React.Component<NotesListState&any, ILayoutProps&any&IDropDownButtonProps> {\n    private myLayout = React.createRef<JqxLayout>();\n    listlayout = [{\n        items: [\n            {\n            alignment: 'left',\n            items: [{\n                contentContainer: 'LeftMenuPanel',\n            //     initContent: (): void => {\n            //   //      ReactDOM.render(<LeftTreeBuilder Id={this.props.menuselected}/>\n            //    //     , document.getElementById('LeftMenuTree'));\n            //     },\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            orientation:'vertical',\n            unpinnedWidth: '15%',\n            width: '15%',\n            minWidth:'15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        },{\n            items: [{\n                height: '95%',\n                items: [{\n                    contentContainer: 'Document1Panel',\n                    title: this.props.menuselected+' Management',\n                    type: 'documentPanel',\n                }],\n                minHeight: '55%',\n                type: 'documentGroup'\n            }, {\n                height: '5%',\n                pinnedHeight:'50%',\n                unpinnedHeight:'50%',\n                alignment:'bottom',\n                items: [{\n                    contentContainer: 'MessagesListPanel',\n                    title: 'Live Messages',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentActivityListPanel',\n                    title: 'Recent Activities',\n                    type: 'layoutPanel'\n                },{\n                    contentContainer: 'RecentFilesPanel',\n                    title: 'Recent Updated Files',\n                    type: 'layoutPanel'\n                }],\n                \n                type: 'autoHideGroup',\n            }],\n            orientation: 'vertical',\n            type: 'layoutGroup',\n            width: '70%',\n            minWidth: '70%'\n        },{\n            alignment: 'right',\n            items: [ {\n                contentContainer: 'SystemStats',\n                initContent: (): void => {ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer'));\n                ReactDOM.render(<DVBarGuage/>, document.getElementById('SystemStatsExplorer2'));\n                ReactDOM.render(<DVBarChart/>, document.getElementById('SystemStatsExplorer3'));},\n                title: '',\n                type: 'layoutPanel'\n            }],\n            type: 'tabbedGroup',\n            minWidth: '15%',\n            width: '15%',\n            allowClose:false,\n            allowPin:false,\n            selected: false,\n            allowUnpin:false\n        }],\n        orientation: 'horizontal',\n        type: 'layoutGroup'\n    }];\n\n    constructor(props) {    \n        super(props);\n        this.state = {\n            layout: this.listlayout,\n        }\n        alert(this.props.menuselected)\n    //  this.props.menuaction(this.props.menuselected);\n    //  this.props.history.push('/'+this.props.menuselected);\n    }\n\n     componentWillUpdate(prevProps, prevState) {\n         this.myLayout.current.renderWidget();\n        this.myLayout.current.render();\n    //     this.myLayout.current.forceUpdate();\n     }\n    public render() {\n        return (\n            <div>\n                <div>\n                    <div style={{float:'left', width: '85%'}}>\n                        <img style={{float:'left', height:'60px', width:'15%'}} src=\"./../Assets/system_logo.png\" alt=\"Logo\" />\n                        <div style={{float:'right', marginLeft: '30px', marginTop:'26px',width: '800px'}}>\n                            <DVMenuList /></div>\n                    </div>\n                    <div style={{ height:'43px', float: 'right' , marginTop:'17px',width: '15%'}}>\n                        <JqxDropDownButton theme={'material-purple'} width={200} height={25} autoOpen={true}>\n                            <JqxTree  width={200}>\n                        <ul>\n                            <li item-selected='true'>Logout</li>\n                            <li item-selected='false'>\n                                Account Configurations\n                            </li>\n                        </ul>\n                    </JqxTree>\n                        </JqxDropDownButton>\n                    </div>\n                </div>\n                <br/>\n                <hr/> <br/>\n                <div>\n                <JqxLayout style={{border: 'none'}} theme=\"material\" width={'100%'} ref={this.myLayout}\n                height={window.innerHeight-115} layout={this.state.layout}>\n                    <div data-container=\"Document1Panel\">\n                        { this.props.viewselected == \"Grid\" ? <DVDataGrid  menuselected={this.props.menuselected}/> : null}\n                        { this.props.viewselected == \"Kanban\" ?  <DVKanban menuselected={this.props.menuselected}/> :null}\n                        { this.props.viewselected == \"Timeline\" ? <DVTimeline  menuselected={this.props.menuselected}/>: null }                               \n                    </div>\n\n                    <div data-container=\"MessagesListPanel\">List of Messages</div>\n                    <div data-container=\"RecentActivityListPanel\">List of Recent Activities</div>\n                    <div data-container=\"RecentFilesPanel\">List of Recent updated Files</div>\n                    <div data-container=\"OutputPanel\">Output</div>\n                    <div data-container=\"LeftMenuPanel\">\n                        <div id=\"LeftMenuTree\" style={{ border: 'none', width: '99%', height: '96%' }} >\n                            <LeftTreeBuilder Id={this.props.menuselected}/>\n                        </div>\n                    </div>\n                    <div data-container=\"ExtraActions\">Extra Quick Actions</div>\n                    <div data-container=\"SystemStats\">\n                        <div id=\"SystemStatsExplorer3\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                        <div id=\"SystemStatsExplorer\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                        <div id=\"SystemStatsExplorer2\" style={{ border: 'none', width: '99%', height: '33%' }} />\n                    </div>\n                </JqxLayout>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport interface IStoreState {\n    type: string\n  };\ninterface NotesListState {\n    menuaction: (id) => (dispatch: React.Dispatch<IStoreState>) => Promise<void>;\n  }\nconst mapStateToProps = state => {\n    if(state.rootReducer !== null){\n        return {\n            state: state,\n            menuselected: state.rootReducer.menuselected,\n            viewselected: state.rootReducer.viewselected\n        }\n    }else{\n        return {\n            state: state,\n            menuselected: \"Orders\",\n            viewselected: \"Grid\",\n        }\n    }\n  }\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n  })\n\n  const mapDispatchToProps = dispatch => ({\n    menuaction: id => dispatch(toggleTodo(id))\n  })\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withRouter (ListScreen));"]},"metadata":{},"sourceType":"module"}