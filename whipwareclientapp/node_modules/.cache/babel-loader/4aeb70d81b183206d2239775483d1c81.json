{"ast":null,"code":"/*\r\njQWidgets v9.0.0 (2020-Jan)\r\nCopyright (c) 2011-2020 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.extend(a.jqx._jqxChart.prototype, {\n    _moduleRangeSelector: true,\n    _renderXAxisRangeSelector: function _renderXAxisRangeSelector(p, n) {\n      var r = this;\n      r._isTouchDevice = a.jqx.mobile.isTouchDevice();\n      var i = r.seriesGroups[p];\n\n      var e = r._getXAxis(p);\n\n      var l = e ? e.rangeSelector : undefined;\n\n      if (!r._isSelectorRefresh) {\n        var q = l && l.renderTo ? l.renderTo : r.host;\n        q.find(\".rangeSelector\").remove();\n      }\n\n      if (!e || e.visible == false || i.type == \"spider\") {\n        return false;\n      }\n\n      if (!r._isGroupVisible(p)) {\n        return false;\n      }\n\n      if (!l) {\n        return false;\n      }\n\n      var h = i.orientation == \"horizontal\";\n\n      if (l.renderTo) {\n        h = false;\n      }\n\n      if (r.rtl) {\n        e.flip = true;\n      }\n\n      var d = h ? this.host.height() : this.host.width();\n      d -= 4;\n\n      var o = this._getXAxisStats(p, e, d);\n\n      var k = e.position;\n\n      if (l.renderTo && l.position) {\n        k = l.position;\n      }\n\n      if (!this._isSelectorRefresh) {\n        var m = l.renderTo;\n        var b = \"<div class='rangeSelector jqx-disableselect' style='position: absolute; background-color: transparent;' onselectstart='return false;'></div>\";\n        var f = a(b).appendTo(m ? m : this.renderer.getContainer());\n\n        if (!m) {\n          var j = this.host.coord();\n          j.top = 0;\n          j.left = 0;\n\n          var c = this._selectorGetSize(e);\n\n          if (!h) {\n            f.css(\"left\", j.left + 1);\n            f.css(\"top\", j.top + n.y + (k != \"top\" ? n.height : -c));\n            f.css(\"height\", c);\n            f.css(\"width\", d);\n          } else {\n            f.css(\"left\", j.left + 1 + n.x + (k != \"right\" ? -c : n.width));\n            f.css(\"top\", j.top);\n            f.css(\"height\", d);\n            f.css(\"width\", c);\n            n.height = c;\n          }\n        } else {\n          f.css({\n            width: m.width(),\n            height: m.height()\n          });\n          n.width = m.width();\n          n.height = m.height();\n        }\n\n        this._refreshSelector(p, e, o, f, n, h);\n      }\n\n      this._isSelectorRefresh = false;\n      return true;\n    },\n    _refreshSelector: function _refreshSelector(f, e, d, A, c, b) {\n      var g = {};\n      var u = e.rangeSelector;\n      var k = this.seriesGroups[f];\n\n      for (var w in u) {\n        g[w] = u[w];\n      }\n\n      delete g.padding;\n      var r = g.minValue;\n      var v = g.maxValue;\n\n      if (undefined == r) {\n        r = Math.min(d.min.valueOf(), d.dsRange.min.valueOf());\n      }\n\n      if (undefined == v) {\n        v = Math.max(d.max.valueOf(), d.dsRange.max.valueOf());\n      }\n\n      if (this._isDate(d.min)) {\n        r = new Date(r);\n      }\n\n      if (this._isDate(d.max)) {\n        v = new Date(v);\n      }\n\n      var l = e.position;\n\n      if (u.renderTo && u.position) {\n        l = u.position;\n      }\n\n      g.dataField = e.dataField;\n      delete g.rangeSelector;\n      g.type = e.type;\n      g.baseUnit = u.baseUnit || e.baseUnit;\n      g.minValue = r;\n      g.maxValue = v;\n      g.flip = e.flip;\n      g.position = l;\n      var h = 5;\n      var q = 2,\n          z = 2,\n          y = 2,\n          C = 2;\n\n      if (!u.renderTo) {\n        q = b ? 0 : c.x;\n        z = b ? 0 : this._rect.width - c.x - c.width;\n        y = b ? c.y : h;\n        C = b ? this._paddedRect.height - this._plotRect.height : h;\n      }\n\n      var n = u.padding;\n\n      if (n == undefined && !u.renderTo) {\n        n = {\n          left: q,\n          top: y,\n          right: z,\n          bottom: C\n        };\n      } else {\n        n = {\n          left: n && n.left ? n.left : q,\n          top: n && n.top ? n.top : y,\n          right: n && n.right ? n.right : z,\n          bottom: n && n.bottom ? n.bottom : C\n        };\n      }\n\n      var t = e.rangeSelector.dataField;\n\n      for (var w = 0; undefined == t && w < this.seriesGroups.length; w++) {\n        for (var s = 0; undefined == t && s < this.seriesGroups[w].series.length; s++) {\n          t = this.seriesGroups[w].series[s].dataField;\n        }\n      }\n\n      var m = {\n        padding: n,\n        _isRangeSelectorInstance: true,\n        title: u.title || \"\",\n        description: u.description || \"\",\n        titlePadding: u.titlePadding,\n        colorScheme: u.colorScheme || this.colorScheme,\n        backgroundColor: u.backgroundColor || this.backgroundColor || \"transparent\",\n        backgroundImage: u.backgroundImage || \"\",\n        showBorderLine: u.showBorderLine || (u.renderTo ? true : false),\n        borderLineWidth: u.borderLineWidth || this.borderLineWidth,\n        borderLineColor: u.borderLineColor || this.borderLineColor,\n        rtl: u.rtl || this.rtl,\n        greyScale: u.greyScale || this.greyScale,\n        renderEngine: this.renderEngine,\n        showLegend: false,\n        enableAnimations: false,\n        enableEvents: false,\n        showToolTips: false,\n        source: this.source,\n        xAxis: g,\n        seriesGroups: [{\n          orientation: b ? \"horizontal\" : \"vertical\",\n          valueAxis: {\n            visible: false\n          },\n          type: e.rangeSelector.serieType || \"area\",\n          skipOverlappingPoints: a.jqx.getByPriority([e.rangeSelector.skipOverlappingPoints, true]),\n          columnSeriesOverlap: a.jqx.getByPriority([e.rangeSelector.columnSeriesOverlap, false]),\n          columnsGapPercent: a.jqx.getByPriority([e.rangeSelector.columnsGapPercent, 25]),\n          seriesGapPercent: a.jqx.getByPriority([e.rangeSelector.seriesGapPercent, 25]),\n          series: [{\n            dataField: t,\n            opacity: 0.8,\n            lineWidth: 1\n          }]\n        }]\n      };\n\n      if (e.rangeSelector.seriesGroups) {\n        m.seriesGroups = e.rangeSelector.seriesGroups;\n      }\n\n      if (e.rangeSelector.valueAxis) {\n        m.valueAxis = e.rangeSelector.valueAxis;\n      }\n\n      if (!m.showBorderLine) {\n        m.borderLineWidth = 1;\n        m.borderLineColor = a.jqx.getByPriority([this.backgroundColor, this.background, \"#FFFFFF\"]);\n        m.showBorderLine = true;\n      }\n\n      var o = this;\n      o._supressBindingRefresh = true;\n      A.empty();\n      A.jqxChart(m);\n      o._rangeSelectorInstances[f] = A;\n      o._supressBindingRefresh = false;\n      A.on(o._getEvent(\"mousemove\"), function () {\n        o._unselect();\n\n        o._hideToolTip();\n      });\n      var x = A.jqxChart(\"getInstance\");\n\n      if (!x._plotRect) {\n        return;\n      }\n\n      var B = x._paddedRect;\n      B.height = x._plotRect.height;\n\n      if (!b && l == \"top\") {\n        B.y += x._renderData[0].xAxis.rect.height;\n      } else {\n        if (b) {\n          var p = x._renderData[0].xAxis.rect.width;\n          B.width -= p;\n\n          if (l != \"right\") {\n            B.x += p;\n          }\n        }\n      }\n\n      o._createSliderElements(f, A, B, u);\n\n      o.removeHandler(a(document), o._getEvent(\"mousemove\") + \".\" + this.element.id, o._onSliderMouseMove);\n      o.removeHandler(a(document), o._getEvent(\"mousedown\"), o._onSliderMouseDown);\n      o.removeHandler(a(document), o._getEvent(\"mouseup\") + \".\" + this.element.id, o._onSliderMouseUp);\n      o.addHandler(a(document), o._getEvent(\"mousemove\") + \".\" + this.element.id, o._onSliderMouseMove, {\n        self: this,\n        groupIndex: f,\n        renderTo: A,\n        swapXY: b\n      });\n      o.addHandler(a(A), o._getEvent(\"mousedown\"), this._onSliderMouseDown, {\n        self: this,\n        groupIndex: f,\n        renderTo: A,\n        swapXY: b\n      });\n      o.addHandler(a(document), o._getEvent(\"mouseup\") + \".\" + this.element.id, o._onSliderMouseUp, {\n        element: this.element.id,\n        self: this,\n        groupIndex: f,\n        renderTo: A,\n        swapXY: b\n      });\n    },\n    _createSliderElements: function _createSliderElements(d, t, c, l) {\n      t.find(\".slider\").remove();\n      var g = l.selectedRangeColor || \"blue\";\n      var b = a.jqx.getByPriority([l.selectedRangeOpacity, 0.1]);\n      var u = a.jqx.getByPriority([l.unselectedRangeOpacity, 0.5]);\n      var m = l.unselectedRangeColor || \"white\";\n      var f = l.rangeLineColor || \"grey\";\n      var i = a(\"<div class='slider' style='position: absolute;'></div>\");\n      i.css({\n        background: g,\n        opacity: b,\n        left: c.x,\n        top: c.y,\n        width: c.width,\n        height: c.height\n      });\n      i.appendTo(t);\n\n      while (this._sliders.length < d + 1) {\n        this._sliders.push({});\n      }\n\n      var n = \"<div class='slider' style='position: absolute;  background: \" + m + \"; opacity: \" + u + \";'></div>\";\n      var p = \"<div class='slider' style='position: absolute; background:\" + f + \"; opacity: \" + u + \";'></div>\";\n      var h = \"<div class='slider jqx-rc-all' style='position: absolute; background: white; border-style: solid; border-width: 1px; border-color: \" + f + \";'></div>\";\n      this._sliders[d] = {\n        element: i,\n        host: t,\n        _sliderInitialAbsoluteRect: {\n          x: i.coord().left,\n          y: i.coord().top,\n          width: c.width,\n          height: c.height\n        },\n        _hostInitialAbsolutePos: {\n          x: t.coord().left,\n          y: t.coord().top\n        },\n        getRect: function getRect() {\n          return {\n            x: this.host.coord().left - this._hostInitialAbsolutePos.x + this._sliderInitialAbsoluteRect.x,\n            y: this.host.coord().top - this._hostInitialAbsolutePos.y + this._sliderInitialAbsoluteRect.y,\n            width: this._sliderInitialAbsoluteRect.width,\n            height: this._sliderInitialAbsoluteRect.height\n          };\n        },\n        rect: c,\n        left: a(n),\n        right: a(n),\n        leftTop: a(p),\n        rightTop: a(p),\n        leftBorder: a(p),\n        leftBar: a(h),\n        rightBorder: a(p),\n        rightBar: a(h)\n      };\n\n      this._sliders[d].left.appendTo(t);\n\n      this._sliders[d].right.appendTo(t);\n\n      this._sliders[d].leftTop.appendTo(t);\n\n      this._sliders[d].rightTop.appendTo(t);\n\n      this._sliders[d].leftBorder.appendTo(t);\n\n      this._sliders[d].rightBorder.appendTo(t);\n\n      this._sliders[d].leftBar.appendTo(t);\n\n      this._sliders[d].rightBar.appendTo(t);\n\n      var k = this._renderData[d].xAxis;\n      var s = k.data.axisStats;\n      var j = s.min.valueOf();\n      var q = s.max.valueOf();\n\n      var o = this._valueToOffset(d, j);\n\n      var e = this._valueToOffset(d, q);\n\n      if (o > e) {\n        var r = e;\n        e = o;\n        o = r;\n      }\n\n      if (this.seriesGroups[d].orientation != \"horizontal\") {\n        i.css({\n          left: Math.round(c.x + o),\n          top: c.y,\n          width: Math.round(e - o),\n          height: c.height\n        });\n      } else {\n        i.css({\n          top: Math.round(c.y + o),\n          left: c.x,\n          height: Math.round(e - o),\n          width: c.width\n        });\n      }\n\n      this._setSliderPositions(d, o, e);\n    },\n    _setSliderPositions: function _setSliderPositions(e, r, h) {\n      var t = this.seriesGroups[e];\n\n      var d = this._getXAxis(e);\n\n      var o = d.rangeSelector;\n      var b = t.orientation == \"horizontal\";\n\n      if (d.rangeSelector.renderTo) {\n        b = false;\n      }\n\n      var j = d.position;\n\n      if (o.renderTo && o.position) {\n        j = o.position;\n      }\n\n      var l = b && j == \"right\" || !b && j == \"top\";\n      var n = this._sliders[e];\n      var q = b ? \"top\" : \"left\";\n      var f = b ? \"left\" : \"top\";\n      var i = b ? \"height\" : \"width\";\n      var p = b ? \"width\" : \"height\";\n      var k = b ? \"y\" : \"x\";\n      var m = b ? \"x\" : \"y\";\n      var c = n.rect;\n      n.startOffset = r;\n      n.endOffset = h;\n      n.left.css(q, c[k]);\n      n.left.css(f, c[m]);\n      n.left.css(i, r);\n      n.left.css(p, c[p]);\n      n.right.css(q, c[k] + h);\n      n.right.css(f, c[m]);\n      n.right.css(i, c[i] - h + 1);\n      n.right.css(p, c[p]);\n      n.leftTop.css(q, c[k]);\n      n.leftTop.css(f, c[m] + (b && j == \"right\" || !b && j != \"top\" ? 0 : c[p]));\n      n.leftTop.css(i, r);\n      n.leftTop.css(p, 1);\n      n.rightTop.css(q, c[k] + h);\n      n.rightTop.css(f, c[m] + (b && j == \"right\" || !b && j != \"top\" ? 0 : c[p]));\n      n.rightTop.css(i, c[i] - h + 1);\n      n.rightTop.css(p, 1);\n      n.leftBorder.css(q, c[k] + r);\n      n.leftBorder.css(f, c[m]);\n      n.leftBorder.css(i, 1);\n      n.leftBorder.css(p, c[p]);\n      var s = c[p] / 4;\n\n      if (s > 20) {\n        s = 20;\n      }\n\n      if (s < 3) {\n        s = 3;\n      }\n\n      n.leftBar.css(q, c[k] + r - 3);\n      n.leftBar.css(f, c[m] + c[p] / 2 - s / 2);\n      n.leftBar.css(i, 5);\n      n.leftBar.css(p, s);\n      n.rightBorder.css(q, c[k] + h);\n      n.rightBorder.css(f, c[m]);\n      n.rightBorder.css(i, 1);\n      n.rightBorder.css(p, c[p]);\n      n.rightBar.css(q, c[k] + h - 3);\n      n.rightBar.css(f, c[m] + c[p] / 2 - s / 2);\n      n.rightBar.css(i, 5);\n      n.rightBar.css(p, s);\n    },\n    _resizeState: {},\n    _onSliderMouseDown: function _onSliderMouseDown(d) {\n      d.stopImmediatePropagation();\n      d.stopPropagation();\n      var b = d.data.self;\n      var c = b._sliders[d.data.groupIndex];\n\n      if (!c) {\n        return;\n      }\n\n      if (b._resizeState.state == undefined) {\n        b._testAndSetReadyResize(d);\n      }\n\n      if (b._resizeState.state != \"ready\") {\n        return;\n      }\n\n      a.jqx._rangeSelectorTarget = b;\n      b._resizeState.state = \"resizing\";\n    },\n    _valueToOffset: function _valueToOffset(m, k) {\n      var l = this.seriesGroups[m];\n      var d = this._sliders[m];\n      var c = d.host.jqxChart(\"getInstance\");\n      var n = c._renderData[0].xAxis;\n      var g = n.data.axisStats;\n      var j = g.min.valueOf();\n      var b = g.max.valueOf();\n      var h = b - j;\n\n      if (h == 0) {\n        h = 1;\n      }\n\n      var e = this._getXAxis(m);\n\n      var f = l.orientation == \"horizontal\" ? \"height\" : \"width\";\n      var i = (k.valueOf() - j) / h;\n      return d.getRect()[f] * (e.flip ? 1 - i : i);\n    },\n    _offsetToValue: function _offsetToValue(o, f) {\n      var d = this._sliders[o];\n      var n = this.seriesGroups[o];\n\n      var e = this._getXAxis(o);\n\n      var g = n.orientation == \"horizontal\" ? \"height\" : \"width\";\n      var i = d.getRect()[g];\n\n      if (i == 0) {\n        i = 1;\n      }\n\n      var j = f / i;\n      var c = d.host.jqxChart(\"getInstance\");\n      var m = c._renderData[0].xAxis;\n      var h = m.data.axisStats;\n      var k = h.min.valueOf();\n      var b = h.max.valueOf();\n      var l = f / i * (b - k) + k;\n\n      if (e.flip == true) {\n        l = b - f / i * (b - k);\n      }\n\n      if (this._isDate(h.min) || this._isDate(h.max)) {\n        l = new Date(l);\n      } else {\n        if (e.dataField == undefined || h.useIndeces) {\n          l = Math.round(l);\n        }\n\n        if (l < h.min) {\n          l = h.min;\n        }\n\n        if (l > h.max) {\n          l = h.max;\n        }\n      }\n\n      return l;\n    },\n    _onSliderMouseUp: function _onSliderMouseUp(r) {\n      var m = a.jqx._rangeSelectorTarget;\n\n      if (!m) {\n        return;\n      }\n\n      var g = r.data.groupIndex;\n      var b = r.data.swapXY;\n      var o = m._sliders[g];\n\n      if (!o) {\n        return;\n      }\n\n      if (m._resizeState.state != \"resizing\") {\n        return;\n      }\n\n      r.stopImmediatePropagation();\n      r.stopPropagation();\n      m._resizeState = {};\n      m.host.css(\"cursor\", \"default\");\n      var j = !b ? \"left\" : \"top\";\n      var c = !b ? \"width\" : \"height\";\n      var q = !b ? \"x\" : \"y\";\n      var p = o.element.coord()[j];\n      var e = p + (!b ? o.element.width() : o.element.height());\n      var d = o.getRect();\n\n      var k = m._offsetToValue(g, p - d[q]);\n\n      var t = m._offsetToValue(g, e - d[q]);\n\n      var l = o.host.jqxChart(\"getInstance\");\n      var n = l._renderData[0].xAxis;\n      var v = n.data.axisStats;\n\n      if (!v.isTimeUnit && t.valueOf() - k.valueOf() > 86400000) {\n        k.setHours(0, 0, 0, 0);\n        t.setDate(t.getDate() + 1);\n        t.setHours(0, 0, 0, 0);\n      }\n\n      var f = m._getXAxis(g);\n\n      if (f.flip) {\n        var u = k;\n        k = t;\n        t = u;\n      }\n\n      for (var s = 0; s < m.seriesGroups.length; s++) {\n        var h = m._getXAxis(s);\n\n        if (h == f) {\n          m._selectorRange[s] = {\n            min: k,\n            max: t\n          };\n        }\n      }\n\n      m._isSelectorRefresh = true;\n      var w = m.enableAnimations;\n\n      m._raiseEvent(\"rangeSelectionChanging\", {\n        instance: m,\n        minValue: k,\n        maxValue: t\n      });\n\n      m.enableAnimations = false;\n      m.update();\n      m.enableAnimations = w;\n\n      m._raiseEvent(\"rangeSelectionChanged\", {\n        instance: m,\n        minValue: k,\n        maxValue: t\n      });\n    },\n    _onSliderMouseMove: function _onSliderMouseMove(t) {\n      var o = t.data.self;\n      var v = t.data.renderTo;\n      var i = t.data.groupIndex;\n      var q = o._sliders[i];\n      var d = t.data.swapXY;\n\n      if (!q) {\n        return;\n      }\n\n      var f = q.getRect();\n      var h = q.element;\n      var w = a.jqx.position(t);\n      var r = h.coord();\n      var p = d ? \"left\" : \"top\";\n      var m = !d ? \"left\" : \"top\";\n      var g = d ? \"width\" : \"height\";\n      var e = !d ? \"width\" : \"height\";\n      var s = !d ? \"x\" : \"y\";\n\n      if (o._resizeState.state == \"resizing\") {\n        t.stopImmediatePropagation();\n        t.stopPropagation();\n\n        if (o._resizeState.side == \"left\") {\n          var n = Math.round(w[m] - r[m]);\n          var l = f[s];\n\n          if (r[m] + n >= l && r[m] + n <= l + f[e]) {\n            var j = parseInt(h.css(m));\n            var c = Math.max(2, (d ? h.height() : h.width()) - n);\n            h.css(e, c);\n            h.css(m, j + n);\n          }\n        } else {\n          if (o._resizeState.side == \"right\") {\n            var b = d ? h.height() : h.width();\n            var n = Math.round(w[m] - r[m] - b);\n            var l = f[s];\n\n            if (r[m] + b + n >= l && r[m] + n + b <= l + f[e]) {\n              var c = Math.max(2, b + n);\n              h.css(e, c);\n            }\n          } else {\n            if (o._resizeState.side == \"move\") {\n              var b = d ? h.height() : h.width();\n              var j = parseInt(h.css(m));\n              var n = Math.round(w[m] - o._resizeState.startPos);\n\n              if (r[m] + n >= f[s] && r[m] + n + b <= f[s] + f[e]) {\n                o._resizeState.startPos = w[m];\n                h.css(m, j + n);\n              }\n            }\n          }\n        }\n\n        var u = parseInt(h.css(m)) - q.rect[s];\n        var k = u + (d ? h.height() : h.width());\n\n        o._setSliderPositions(i, u, k);\n      } else {\n        o._testAndSetReadyResize(t);\n      }\n    },\n    _testAndSetReadyResize: function _testAndSetReadyResize(b) {\n      var q = b.data.self;\n      var k = b.data.renderTo;\n      var o = b.data.groupIndex;\n      var c = q._sliders[o];\n      var g = b.data.swapXY;\n      var m = c.getRect();\n      var e = c.element;\n      var f = a.jqx.position(b);\n      var h = e.coord();\n      var j = g ? \"left\" : \"top\";\n      var p = !g ? \"left\" : \"top\";\n      var i = g ? \"width\" : \"height\";\n      var l = !g ? \"width\" : \"height\";\n      var d = !g ? \"x\" : \"y\";\n      var n = q._isTouchDevice ? 30 : 5;\n\n      if (f[j] >= h[j] && f[j] <= h[j] + m[i]) {\n        if (Math.abs(f[p] - h[p]) <= n) {\n          k.css(\"cursor\", g ? \"row-resize\" : \"col-resize\");\n          q._resizeState = {\n            state: \"ready\",\n            side: \"left\"\n          };\n        } else {\n          if (Math.abs(f[p] - h[p] - (!g ? e.width() : e.height())) <= n) {\n            k.css(\"cursor\", g ? \"row-resize\" : \"col-resize\");\n            q._resizeState = {\n              state: \"ready\",\n              side: \"right\"\n            };\n          } else {\n            if (f[p] + n > h[p] && f[p] - n < h[p] + (!g ? e.width() : e.height())) {\n              k.css(\"cursor\", \"pointer\");\n              q._resizeState = {\n                state: \"ready\",\n                side: \"move\",\n                startPos: f[p]\n              };\n            } else {\n              k.css(\"cursor\", \"default\");\n              q._resizeState = {};\n            }\n          }\n        }\n      } else {\n        k.css(\"cursor\", \"default\");\n        q._resizeState = {};\n      }\n    },\n    _selectorGetSize: function _selectorGetSize(b) {\n      if (b.rangeSelector.renderTo) {\n        return 0;\n      }\n\n      return b.rangeSelector.size || this._paddedRect.height / 3;\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}