{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar Link_default_1 = require(\"./Link.default\");\n\nvar utils_2 = require(\"./utils\");\n\nexports.LinkWrapper = React.memo(function (_a) {\n  var config = _a.config,\n      _b = _a.Component,\n      Component = _b === void 0 ? Link_default_1.LinkDefault : _b,\n      link = _a.link,\n      onLinkMouseEnter = _a.onLinkMouseEnter,\n      onLinkMouseLeave = _a.onLinkMouseLeave,\n      onLinkClick = _a.onLinkClick,\n      isSelected = _a.isSelected,\n      isHovered = _a.isHovered,\n      fromNode = _a.fromNode,\n      toNode = _a.toNode;\n  var startPos = utils_2.getLinkPosition(fromNode, link.from.portId);\n  var endPos = toNode && link.to.portId ? utils_2.getLinkPosition(toNode, link.to.portId) : link.to.position; // Don't render the link yet if there is no end pos\n  // This will occur if the link was just created\n\n  if (!endPos) {\n    return null;\n  }\n\n  return React.createElement(Component, {\n    config: config,\n    link: link,\n    startPos: startPos,\n    endPos: endPos,\n    onLinkMouseEnter: config.readonly ? utils_1.noop : onLinkMouseEnter,\n    onLinkMouseLeave: config.readonly ? utils_1.noop : onLinkMouseLeave,\n    onLinkClick: config.readonly ? utils_1.noop : onLinkClick,\n    isSelected: isSelected,\n    isHovered: isHovered\n  });\n});","map":null,"metadata":{},"sourceType":"script"}